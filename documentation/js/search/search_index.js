var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/ApiGatewayController.html",[0,1.356,1,2.494]],["body/controllers/ApiGatewayController.html",[0,2.207,1,4.058,2,1.788,3,0.288,4,0.254,5,0.254,6,1.6,7,3.289,8,4.091,9,0.601,10,0.021,11,0.92,12,3.632,13,2.42,14,3.729,15,3.289,16,4.091,17,3.289,18,3.632,19,4.789,20,0.288,21,0.07,22,2.786,23,1.434,24,0.017,25,0.017]],["title/modules/ApiGatewayModule.html",[26,1.087,27,2.494]],["body/modules/ApiGatewayModule.html",[1,3.366,2,1.548,3,0.17,4,0.151,5,0.151,6,0.947,7,1.946,9,0.599,10,0.021,11,0.544,14,3.488,15,2.847,16,2.421,20,0.17,21,0.041,24,0.012,25,0.012,26,1.467,27,4.717,28,1.188,29,1.261,30,1.432,31,1.432,32,1.261,33,2.321,34,2.095,35,2.421,36,2.421,37,2.421,38,3.773,39,3.029,40,3.773,41,3.029,42,2.095,43,1.432,44,1.342,45,2.834,46,2.609,47,3.541,48,4.187,49,1.432,50,3.541,51,2.834,52,2.834,53,1.946,54,2.149,55,2.149,56,5.289,57,2.149,58,2.421,59,1.12,60,2.834,61,2.834,62,1.946,63,2.834,64,0.707,65,2.834,66,2.412,67,4.145,68,1.963,69,4.145,70,3.541,71,2.412,72,2.834,73,5.393,74,2.554,75,2.412,76,2.834,77,2.834,78,2.834,79,2.834]],["title/injectables/ApiGatewayService.html",[14,2.113,80,0.975]],["body/injectables/ApiGatewayService.html",[3,0.318,4,0.281,5,0.281,6,1.766,7,3.632,9,0.475,10,0.02,11,1.016,14,3.651,20,0.318,21,0.077,24,0.018,25,0.018,80,1.685,81,2.354,82,4.518]],["title/classes/Battle.html",[21,0.053,83,0.874]],["body/classes/Battle.html",[3,0.23,4,0.204,5,0.204,9,0.459,10,0.021,20,0.23,21,0.056,23,1.842,24,0.015,25,0.015,64,0.873,83,1.622,84,1.705,85,1.548,86,3.272,87,0.471,88,1.618,89,4.372,90,3.882,91,1.807,92,3.83,93,1.503,94,3.629,95,0.983,96,3.83,97,1.532,98,0.77,99,1.532,100,3.222,101,5.119,102,3.47,103,3.83,104,1.211,105,3.272,106,3.515,107,2.63,108,4.925,109,3.272,110,3.83,111,1.935,112,2.411,113,2.228,114,2.904,115,3.272,116,3.83,117,1.514,118,1.352,119,3.83,120,3.83,121,3.83,122,3.83,123,1.147]],["title/entities/BattleDao.html",[102,1.965,111,1.835]],["body/entities/BattleDao.html",[3,0.205,4,0.181,5,0.181,9,0.526,10,0.021,20,0.205,21,0.05,24,0.014,25,0.014,83,1.137,85,1.754,87,0.418,93,1.451,94,3.415,95,1.182,98,0.983,100,3.415,102,2.556,106,4.227,107,2.338,108,5.259,111,1.721,112,2.974,114,4.115,115,5.007,124,2.143,125,2.909,126,1.578,127,3.415,128,2.434,129,3.405,130,4.725,131,3.405,132,2.582,133,4.444,134,3.405,135,4.669,136,3.405,137,3.405,138,4.725,139,3.583,140,3.405,141,3.405,142,4.036,143,3.583,144,1.721,145,2.582,146,2.338,147,2.582,148,2.143,149,2.582,150,3.405,151,2.338,152,4.444,153,3.405]],["title/classes/BattleEngine.html",[21,0.053,154,2.286]],["body/classes/BattleEngine.html",[3,0.135,4,0.119,5,0.119,9,0.201,10,0.021,20,0.135,21,0.033,24,0.01,25,0.01,64,0.383,68,2.016,83,1.025,84,0.999,85,1.143,87,0.276,88,1.1,91,1.503,93,1.092,94,3.454,95,0.668,97,0.672,98,0.338,99,0.672,100,3.018,104,0.71,117,2.4,118,1.228,123,0.672,154,2.68,155,1.895,156,2.016,157,2.923,158,1.703,159,3.229,160,3.478,161,2.245,162,2.971,163,1.623,164,2.245,165,1.757,166,1.413,167,0.888,168,2.388,169,4.096,170,4.096,171,3.637,172,2.971,173,2.024,174,1.918,175,1.918,176,1.918,177,2.971,178,1.918,179,1.703,180,1.918,181,1.918,182,1.918,183,1.918,184,2.971,185,1.918,186,1.918,187,1.918,188,1.918,189,1.918,190,1.918,191,2.971,192,1.918,193,1.918,194,1.918,195,2.971,196,1.306,197,0.838,198,1.918,199,1.918,200,3.637,201,2.971,202,1.918,203,2.971,204,1.918,205,3.637,206,1.918,207,1.918,208,1.918,209,1.918,210,1.703,211,1.918,212,1.918,213,4.687,214,2.923,215,1.918,216,3.934,217,1.918,218,1.918,219,2.971,220,2.971,221,2.971,222,2.638,223,1.918,224,2.189,225,1.542,226,2.971,227,1.918,228,1.918,229,2.971,230,2.971,231,4.096,232,1.918,233,1.918,234,2.971,235,1.918,236,1.918,237,2.971,238,1.918,239,2.971,240,1.918,241,1.918,242,1.918,243,1.918,244,1.918,245,1.413,246,1.918,247,1.918,248,2.971,249,1.703,250,2.189,251,1.918,252,1.918,253,1.918,254,2.971,255,2.971,256,2.638,257,2.971,258,1.918,259,2.971,260,1.918,261,1.918,262,1.918,263,1.703]],["title/interfaces/BattleResult.html",[167,1.436,168,2.494]],["body/interfaces/BattleResult.html",[3,0.139,4,0.123,5,0.123,9,0.207,10,0.022,20,0.139,21,0.034,24,0.01,25,0.01,68,1.095,83,1.044,85,0.621,87,0.284,91,0.816,93,1.424,94,3.065,98,0.652,100,2.73,117,2.421,118,1.256,123,0.692,126,1.188,154,2.239,155,1.029,156,1.095,157,1.587,158,1.753,159,1.753,162,1.975,163,1.23,165,1.168,166,1.455,167,0.914,168,2.978,169,4.941,170,4.941,171,4.743,172,3.039,173,2.07,174,1.975,175,1.975,176,1.975,177,3.039,178,1.975,179,1.753,180,1.975,181,1.975,182,1.975,183,1.975,184,3.039,185,1.975,186,1.975,187,1.975,188,1.975,189,1.975,190,1.975,191,3.039,192,1.975,193,1.975,194,1.975,195,3.039,196,1.345,197,0.863,198,1.975,199,1.975,200,3.705,201,3.039,202,1.975,203,3.039,204,1.975,205,3.705,206,1.975,207,1.975,208,1.975,209,1.975,210,1.753,211,1.975,212,1.975,213,4.743,214,2.978,215,1.975,216,3.987,217,1.975,218,1.975,219,3.039,220,3.039,221,3.039,222,2.698,223,1.975,224,2.239,225,1.587,226,3.039,227,1.975,228,1.975,229,3.039,230,3.039,231,4.16,232,1.975,233,1.975,234,3.039,235,1.975,236,1.975,237,3.039,238,1.975,239,3.039,240,1.975,241,1.975,242,1.975,243,1.975,244,1.975,245,1.455,246,1.975,247,1.975,248,3.039,249,1.753,250,2.239,251,1.975,252,1.975,253,1.975,254,3.039,255,3.039,256,2.698,257,3.039,258,1.975,259,3.039,260,1.975,261,1.975,262,1.975,263,1.753,264,1.345]],["title/controllers/BattleServiceController.html",[0,1.356,265,2.494]],["body/controllers/BattleServiceController.html",[0,1.235,2,1.235,3,0.199,4,0.176,5,0.176,9,0.582,10,0.021,11,0.635,20,0.199,21,0.048,22,1.925,23,1.386,24,0.013,25,0.013,49,1.672,64,0.79,66,1.925,68,2.53,83,1.115,85,1.435,87,0.406,88,1.464,93,1.217,95,0.889,97,0.991,98,0.804,99,0.991,104,1.464,117,1.308,118,1.168,123,1.386,128,1.831,156,2.53,165,2.34,197,1.995,265,3.18,266,2.509,267,2.272,268,2.509,269,2.741,270,2.826,271,2.694,272,3.956,273,3.308,274,3.367,275,4.631,276,2.826,277,2.694,278,2.272,279,2.272,280,2.509,281,1.567,282,1.925,283,1.925,284,3.512,285,1.925,286,3.109,287,2.509,288,3.512,289,2.509,290,2.509,291,2.826,292,2.826,293,2.826,294,3.308,295,3.308,296,1.79,297,3.308,298,3.308,299,1.925,300,1.925,301,3.308,302,5.343,303,3.308,304,3.308,305,3.308]],["title/modules/BattleServiceModule.html",[26,1.087,306,2.494]],["body/modules/BattleServiceModule.html",[2,1.647,3,0.186,4,0.164,5,0.164,9,0.616,10,0.021,11,0.593,20,0.186,21,0.045,24,0.013,25,0.013,26,1.541,28,1.295,29,1.375,30,1.561,31,1.561,32,1.375,33,2.437,34,1.561,39,3.12,41,3.12,42,2.229,43,1.561,44,1.463,46,2.777,47,2.639,48,3.769,49,1.561,62,2.121,64,0.527,70,3.769,74,2.09,83,1.062,85,1.185,102,1.671,105,2.639,144,1.561,156,1.463,214,2.121,265,3.534,277,3.592,278,2.121,290,2.343,291,2.639,292,2.639,306,4.608,307,2.639,308,3.089,309,2.639,310,2.639,311,3.769,312,2.777,313,2.343,314,2.639,315,3.03,316,3.089,317,2.639,318,2.639,319,1.945,320,3.089,321,3.089,322,2.639,323,2.639,324,2.639,325,3.089,326,3.089,327,3.089,328,5.146,329,3.089,330,2.639,331,3.089,332,3.089,333,2.639,334,3.089,335,3.089,336,3.089,337,2.639,338,2.639]],["title/injectables/BattleServiceService.html",[80,0.975,277,2.113]],["body/injectables/BattleServiceService.html",[3,0.222,4,0.196,5,0.196,9,0.508,10,0.021,11,0.71,20,0.222,21,0.054,23,1.107,24,0.014,25,0.014,64,0.852,66,2.151,68,2.682,80,1.342,81,1.645,83,1.572,85,1.629,87,0.454,88,1.58,91,1.764,93,1.138,95,1.087,97,1.496,98,0.752,99,1.496,104,1.58,118,1.305,123,1.496,145,2.803,156,2.873,165,2.526,196,2.151,197,1.866,269,2.873,277,2.908,296,2,300,2.151,312,4.111,313,2.803,339,2.803,340,3.158,341,3.696,342,4.27,343,3.696,344,3.696,345,3.696,346,1.868,347,2.803,348,2,349,2.538,350,3.158,351,2.538,352,2.327,353,2.538]],["title/injectables/BattleTypeOrmRepository.html",[80,0.975,315,2.494]],["body/injectables/BattleTypeOrmRepository.html",[3,0.217,4,0.192,5,0.192,9,0.582,10,0.021,11,0.694,20,0.217,21,0.053,23,1.083,24,0.014,25,0.014,64,0.84,68,2.652,80,1.322,81,1.609,83,1.514,85,1.504,87,0.444,88,1.557,91,1.738,95,0.946,97,1.474,98,0.741,99,1.474,102,2.664,104,1.143,117,1.947,123,1.083,144,3.038,145,2.742,165,2.488,197,1.839,296,1.956,300,2.865,312,3.784,313,2.742,315,3.381,319,2.276,340,3.089,342,4.207,350,3.089,354,4.784,355,2.742,356,4.559,357,3.616,358,3.616,359,3.089,360,4.784,361,3.616,362,3.089,363,3.616,364,3.616,365,3.616,366,3.089,367,3.089,368,3.616,369,3.616,370,3.089,371,3.089]],["title/controllers/BattleWorkerServiceController.html",[0,1.356,372,2.494]],["body/controllers/BattleWorkerServiceController.html",[0,1.874,2,1.389,3,0.224,4,0.198,5,0.198,9,0.57,10,0.021,11,0.714,20,0.224,21,0.054,22,2.164,23,1.114,24,0.014,25,0.014,49,1.88,64,0.856,83,1.208,85,1.526,87,0.457,88,1.587,93,1.143,95,0.964,97,1.114,98,0.56,99,1.114,104,1.587,117,1.471,118,1.313,123,1.114,128,1.984,154,3.16,155,2.977,156,2.691,157,2.554,266,2.821,269,2.88,272,4.288,274,2.164,276,3.178,278,2.554,279,2.554,280,2.821,281,1.762,282,2.164,289,2.821,333,3.178,372,3.447,373,5.019,374,3.72,375,3.72,376,6.082,377,3.72,378,3.305,379,3.72,380,3.72,381,3.72,382,3.72,383,3.72]],["title/modules/BattleWorkerServiceModule.html",[26,1.087,384,2.494]],["body/modules/BattleWorkerServiceModule.html",[2,1.941,3,0.236,4,0.208,5,0.208,9,0.58,10,0.021,11,0.753,20,0.236,21,0.057,24,0.015,25,0.015,26,1.746,28,1.643,29,1.745,30,1.981,31,1.981,32,1.745,33,2.762,34,1.981,39,3.357,41,3.357,42,2.627,43,1.981,44,1.857,46,3.272,58,3.349,62,2.692,83,1.251,85,1.053,155,2.764,156,1.857,278,2.692,310,3.349,314,3.349,372,4.005,378,3.865,384,4.83,385,3.349,386,3.92,387,3.349]],["title/injectables/BattleWorkerServiceService.html",[80,0.975,378,2.113]],["body/injectables/BattleWorkerServiceService.html",[3,0.282,4,0.249,5,0.249,9,0.421,10,0.021,11,0.901,20,0.282,21,0.069,24,0.017,25,0.017,80,1.567,81,2.089,83,1.129,85,1.567,87,0.577,88,1.845,93,1.329,95,0.901,104,1.484,123,1.405,155,3.042,156,2.764,269,3.147,339,3.559,346,2.371,347,3.559,348,2.539,378,3.395,388,4.693]],["title/controllers/BattlesController.html",[0,1.356,389,2.494]],["body/controllers/BattlesController.html",[0,1.048,2,1.048,3,0.169,4,0.149,5,0.149,6,1.628,9,0.568,10,0.021,11,0.539,12,2.129,13,1.418,17,1.927,18,2.129,20,0.169,21,0.06,22,1.633,23,0.84,24,0.012,25,0.012,64,0.479,74,1.329,83,1.376,87,0.345,88,1.301,95,0.79,97,0.84,98,0.808,99,0.84,104,1.697,118,2.018,123,1.232,128,1.627,163,1.694,173,1.633,196,2.395,197,2.134,210,3.122,267,1.927,268,2.129,269,2.542,281,1.949,283,2.395,284,3.122,285,1.633,286,3.683,287,2.129,293,2.398,346,2.713,348,2.637,349,1.927,351,1.927,352,1.767,353,1.927,389,2.827,390,2.398,391,2.398,392,3.516,393,2.829,394,4.586,395,3.516,396,4.116,397,2.807,398,3.516,399,2.398,400,3.516,401,3.516,402,2.807,403,3.516,404,3.122,405,2.398,406,2.807,407,3.925,408,2.398,409,2.807,410,3.516,411,3.516,412,3.516,413,3.516,414,3.516,415,4.164,416,2.398,417,1.767,418,1.767,419,2.637,420,2.398,421,2.807,422,3.516,423,2.807,424,2.807,425,2.807]],["title/modules/BattlesModule.html",[26,1.087,38,2.286]],["body/modules/BattlesModule.html",[2,2.121,3,0.27,4,0.239,5,0.239,6,1.501,9,0.559,10,0.021,11,0.863,20,0.27,21,0.066,24,0.016,25,0.016,26,1.864,28,1.883,29,2,30,2.271,31,2.271,32,2,33,2.949,34,2.271,38,4.338,42,2.87,43,2.271,44,2.128,389,4.276,419,3.728,420,3.839,426,3.839,427,3.839,428,4.494,429,4.494]],["title/injectables/BattlesService.html",[80,0.975,419,1.965]],["body/injectables/BattlesService.html",[3,0.203,4,0.179,5,0.179,6,1.95,9,0.585,10,0.021,11,0.648,20,0.203,21,0.049,23,1.011,24,0.013,25,0.013,49,1.706,53,2.318,54,2.56,55,2.56,64,0.921,66,1.964,80,1.261,81,1.502,83,0.812,87,0.415,88,1.485,91,1.658,95,1.037,97,1.406,98,0.707,99,1.406,104,1.485,117,2.308,123,1.406,197,2.017,274,3.397,279,2.318,280,2.56,281,1.599,282,1.964,283,1.964,284,3.561,285,1.964,286,3.792,287,2.56,288,4.428,296,1.826,346,2.95,391,2.884,407,4.214,418,2.125,419,2.541,430,2.884,431,3.375,432,3.375,433,4.696,434,3.375,435,3.375,436,3.375,437,4.614,438,3.375,439,3.375,440,3.375,441,3.375]],["title/classes/CreateBattleDto.html",[21,0.053,286,2.113]],["body/classes/CreateBattleDto.html",[3,0.233,4,0.206,5,0.206,9,0.555,10,0.021,13,1.961,20,0.233,21,0.085,24,0.015,25,0.015,84,1.727,87,0.477,93,1.467,94,3.653,95,0.992,98,0.777,100,3.653,106,3.546,107,2.665,113,2.258,114,2.943,126,1.725,127,2.443,128,2.042,139,2.943,286,3.005,330,3.315,417,2.443,442,4.401,443,3.315,444,5.164,445,3.881,446,3.881,447,5.285,448,5.285,449,4.424,450,4.424,451,2.258,452,4.424,453,3.315]],["title/classes/CreateBattleResponseDto.html",[21,0.053,283,2.113]],["body/classes/CreateBattleResponseDto.html",[3,0.258,4,0.228,5,0.228,9,0.495,10,0.021,13,2.171,20,0.258,21,0.081,23,1.825,24,0.016,25,0.016,64,0.732,83,1.467,84,1.912,87,0.528,91,1.516,93,1.515,95,1.06,97,1.286,98,0.83,99,1.286,126,1.843,127,4.189,128,1.698,283,3.211,442,4.624,449,3.789,450,3.789,451,2.499,452,3.789,454,3.257,455,5.518,456,4.714,457,3.67,458,4.295]],["title/classes/CreatePlayerDto.html",[21,0.053,459,2.113]],["body/classes/CreatePlayerDto.html",[3,0.192,4,0.17,5,0.17,9,0.512,10,0.021,13,1.617,20,0.192,21,0.077,24,0.013,25,0.013,64,0.894,84,1.424,87,0.393,93,1.299,95,1.233,98,0.966,107,2.197,126,1.511,128,2.538,224,3.303,245,3.303,250,3.303,393,2.485,417,2.014,447,4.482,448,4.482,449,4.503,450,3.603,451,1.862,452,4.503,459,2.632,460,4.973,461,2.733,462,3.303,463,3.303,464,3.202,465,5.247,466,3.2,467,3.2,468,3.2,469,3.2,470,4.523,471,3.2,472,3.2,473,3.2,474,3.2,475,3.2,476,6.246,477,3.2,478,3.2,479,2.426,480,3.2,481,3.2,482,4.523]],["title/classes/CreatePlayerResponseDto.html",[21,0.053,483,2.113]],["body/classes/CreatePlayerResponseDto.html",[3,0.258,4,0.228,5,0.228,9,0.495,10,0.021,13,2.171,20,0.258,21,0.081,23,1.825,24,0.016,25,0.016,64,0.732,84,1.912,87,0.528,91,1.516,93,1.515,95,1.06,97,1.286,98,0.83,99,1.286,126,1.843,128,1.698,163,1.729,299,3.872,449,3.789,450,3.789,451,2.499,452,3.789,454,3.257,456,4.714,457,3.67,460,4.624,483,3.211,484,4.714,485,4.295]],["title/modules/EnvModule.html",[26,1.087,39,1.835]],["body/modules/EnvModule.html",[3,0.256,4,0.227,5,0.227,6,1.834,9,0.596,10,0.021,11,0.819,20,0.256,21,0.062,24,0.016,25,0.016,26,1.644,28,1.787,33,2.019,39,2.775,46,2.684,50,4.692,56,4.692,57,3.234,59,1.686,74,3.039,486,4.264,487,4.264,488,4.607,489,4.165,490,4.264,491,4.264,492,4.264,493,4.264,494,4.264,495,4.264,496,4.264,497,4.264,498,4.264,499,4.264,500,4.264,501,4.264,502,4.264,503,4.264]],["title/interfaces/EnvironmentVariables.html",[59,1.436,167,1.436]],["body/interfaces/EnvironmentVariables.html",[3,0.238,4,0.21,5,0.21,6,1.323,10,0.021,20,0.238,24,0.015,25,0.015,59,2.069,64,1.063,71,3.876,75,3.876,83,1.501,87,0.486,93,1.645,98,1.069,126,1.748,163,1.768,167,1.566,264,2.304,271,3.628,464,3.071,504,3.383,505,3.926,506,5.328]],["title/interfaces/EnvironmentVariables-1.html",[59,1.202,167,1.202,214,2.089]],["body/interfaces/EnvironmentVariables-1.html",[3,0.232,4,0.205,5,0.205,10,0.021,20,0.232,24,0.015,25,0.015,59,2.033,64,1.052,71,3.365,75,3.927,83,1.485,85,1.035,87,0.474,93,1.639,98,1.071,113,3.59,126,1.717,167,1.524,264,2.243,271,3.847,464,3.131,505,3.884,507,2.647,508,4.679,509,2.924,510,3.899,511,3.899]],["title/interfaces/EnvironmentVariables-2.html",[59,1.202,167,1.202,222,2.307]],["body/interfaces/EnvironmentVariables-2.html",[3,0.268,4,0.237,5,0.237,10,0.021,20,0.268,24,0.016,25,0.016,59,2.234,64,1.112,71,2.595,75,3.917,85,1.197,87,0.548,93,1.591,98,1.035,126,1.888,155,1.985,167,1.763,264,2.595,271,3.288,464,3.09,505,4.107,507,3.062,512,5.574]],["title/interfaces/EnvironmentVariables-3.html",[59,1.202,167,1.202,513,2.598]],["body/interfaces/EnvironmentVariables-3.html",[3,0.248,4,0.219,5,0.219,10,0.021,20,0.248,24,0.015,25,0.015,59,2.126,64,1.081,71,3.129,75,3.921,87,0.507,93,1.628,98,1.059,113,3.688,126,1.796,163,1.797,167,1.632,264,2.402,271,3.688,464,3.113,505,3.99,507,2.835,509,3.131,510,3.131,511,3.131,514,1.73]],["title/classes/Leaderboard.html",[21,0.053,515,2.286]],["body/classes/Leaderboard.html",[3,0.215,4,0.19,5,0.19,9,0.322,10,0.021,20,0.215,21,0.052,23,2.019,24,0.014,25,0.014,64,1.069,84,1.595,85,1.496,87,0.44,88,1.547,89,4.226,90,3.711,91,1.727,93,1.557,95,0.94,97,1.465,98,0.736,99,1.465,104,1.133,117,1.416,118,1.265,123,1.073,299,2.847,393,2.639,462,3.508,463,3.508,464,3.333,484,3.061,515,4.169,516,3.061,517,4.761,518,4.761,519,3.583,520,4.893,521,3.946,522,3.583,523,3.583,524,3.583,525,3.583,526,3.583,527,3.583,528,3.583,529,3.583,530,3.583,531,3.583]],["title/entities/LeaderboardDao.html",[111,1.835,521,2.286]],["body/entities/LeaderboardDao.html",[3,0.19,4,0.168,5,0.168,9,0.468,10,0.021,20,0.19,21,0.046,24,0.013,25,0.013,64,0.889,85,1.811,87,0.389,93,1.489,95,1.256,98,1.001,111,1.599,112,2.825,124,1.992,126,1.499,127,3.283,128,2.585,132,2.4,133,4.304,135,5.339,142,2.704,143,3.404,144,1.599,146,2.173,147,2.4,148,1.992,149,2.4,151,2.173,152,4.854,299,3.034,393,2.47,462,3.283,463,3.283,464,3.097,515,2.825,517,4.456,518,4.456,521,2.825,532,2.704,533,3.165,534,3.165,535,3.165,536,3.165,537,3.165,538,3.165,539,3.165,540,3.165,541,3.165,542,3.165]],["title/classes/NestApplicationValidationPipe.html",[21,0.053,543,2.754]],["body/classes/NestApplicationValidationPipe.html",[3,0.271,4,0.24,5,0.24,9,0.405,10,0.021,11,0.866,20,0.271,21,0.066,24,0.016,25,0.016,74,2.954,84,2.008,91,2.202,95,0.866,126,1.507,151,3.91,159,4.318,274,2.625,352,2.84,451,2.625,543,4.318,544,4.864,545,3.91,546,3.854,547,6.238,548,4.511,549,4.511,550,4.511,551,4.511,552,4.511,553,4.511,554,4.511,555,4.511,556,4.511,557,4.511,558,5.693,559,4.511,560,4.511]],["title/classes/Player.html",[21,0.053,163,1.03]],["body/classes/Player.html",[3,0.216,4,0.191,5,0.191,9,0.323,10,0.021,20,0.216,21,0.053,23,1.985,24,0.014,25,0.014,64,1.022,84,1.6,87,0.442,88,1.55,89,4.233,90,3.719,91,1.731,93,1.475,95,0.942,97,1.468,98,0.738,99,1.468,104,1.136,117,1.421,118,1.269,123,1.076,163,1.88,224,3.513,245,3.513,250,3.513,393,2.643,462,3.513,463,3.513,464,3.394,514,2.339,561,3.07,562,3.594,563,3.594,564,4.903,565,3.395,566,3.594,567,3.07,568,3.07,569,3.594,570,3.594,571,3.594,572,3.594,573,3.594,574,3.594,575,3.594]],["title/controllers/PlayerController.html",[0,1.356,576,2.494]],["body/controllers/PlayerController.html",[0,1.322,2,1.322,3,0.213,4,0.188,5,0.188,9,0.579,10,0.021,11,0.68,20,0.213,21,0.052,22,2.059,23,1.06,24,0.014,25,0.014,49,1.789,64,0.827,68,2.622,87,0.435,88,1.534,93,1.261,95,0.932,97,1.06,98,0.833,99,1.06,104,1.534,117,1.399,118,1.249,123,1.453,128,1.918,163,1.004,165,2.452,173,2.059,197,2.068,267,2.43,269,2.822,270,3.024,271,2.823,274,3.466,281,1.676,282,2.059,285,2.059,289,2.684,299,2.059,300,2.059,459,3.222,483,2.059,514,2.321,576,3.332,577,3.024,578,4.852,579,3.539,580,4.852,581,3.539,582,2.684,583,3.024,584,3.68,585,2.684,586,3.222,587,3.024,588,3.024,589,3.539,590,3.539,591,3.539,592,3.539]],["title/entities/PlayerDao.html",[111,1.835,565,1.965]],["body/entities/PlayerDao.html",[3,0.185,4,0.163,5,0.163,9,0.461,10,0.021,20,0.185,21,0.045,24,0.013,25,0.013,64,0.875,74,2.082,87,0.378,93,1.403,95,1.246,98,0.994,111,1.553,112,2.767,124,1.934,126,1.468,127,3.23,128,2.566,132,2.331,133,4.247,135,5.281,143,3.333,144,1.553,146,2.11,148,1.934,149,2.331,151,2.11,152,4.812,163,1.246,166,1.934,224,3.23,245,3.23,250,3.23,393,2.43,462,3.23,463,3.23,464,3.174,514,2.769,565,2.378,593,5.01,594,2.625,595,3.073,596,3.073,597,3.073,598,3.073,599,3.073,600,3.073,601,3.073,602,3.073,603,3.073,604,3.073,605,3.073,606,3.073]],["title/modules/PlayerModule.html",[26,1.087,607,2.494]],["body/modules/PlayerModule.html",[2,1.801,3,0.211,4,0.186,5,0.186,9,0.618,10,0.021,11,0.674,20,0.211,21,0.051,24,0.014,25,0.014,26,1.65,28,1.47,29,1.561,30,1.772,31,1.772,32,1.561,33,2.61,34,1.772,39,3.249,41,3.249,42,2.437,43,1.772,44,1.661,46,3.036,62,2.409,74,1.661,311,4.12,317,2.996,318,2.996,319,2.208,322,2.996,323,2.996,324,2.996,337,2.996,338,2.996,514,2.021,565,1.898,567,4.12,568,2.996,576,3.784,586,3.741,587,2.996,607,4.73,608,2.996,609,3.507,610,2.996,611,3.507,612,3.036,613,2.66,614,3.311,615,2.66,616,3.507,617,3.507,618,3.507]],["title/injectables/PlayerService.html",[80,0.975,586,2.113]],["body/injectables/PlayerService.html",[3,0.225,4,0.199,5,0.199,9,0.512,10,0.021,11,0.719,20,0.225,21,0.055,23,1.121,24,0.014,25,0.014,64,0.859,66,2.178,68,2.699,80,1.354,81,1.666,87,0.46,88,1.594,91,1.78,93,1.148,95,1.094,97,1.509,98,0.759,99,1.509,104,1.594,118,1.322,123,1.509,163,1.859,165,2.547,166,2.357,196,2.178,197,1.882,269,2.888,296,2.025,300,2.178,346,1.892,347,2.839,348,2.025,349,2.571,351,2.571,352,2.357,353,2.571,514,2.556,586,2.933,612,3.838,613,2.839,619,3.198,620,3.198,621,3.744,622,4.307,623,4.307,624,3.744,625,3.744,626,3.744,627,3.198]],["title/injectables/PlayerTypeOrmRepository.html",[80,0.975,614,2.494]],["body/injectables/PlayerTypeOrmRepository.html",[3,0.217,4,0.192,5,0.192,9,0.582,10,0.021,11,0.694,20,0.217,21,0.053,23,1.083,24,0.014,25,0.014,64,0.84,68,2.652,80,1.322,81,1.609,87,0.444,88,1.557,91,1.738,95,0.946,97,1.474,98,0.741,99,1.474,104,1.143,117,1.947,123,1.083,144,1.827,163,1.783,165,2.488,166,2.276,197,1.839,296,1.956,300,2.865,319,2.276,356,4.559,359,3.089,360,4.784,362,3.089,366,3.089,367,3.089,370,3.089,371,3.089,514,2.347,565,2.664,593,4.246,612,3.1,613,2.742,614,3.381,615,4.246,620,3.089,622,4.207,623,4.207,627,3.089,628,3.089,629,3.616,630,3.616,631,3.616,632,3.616,633,3.616,634,3.616,635,3.616,636,3.616]],["title/controllers/PlayersController.html",[0,1.356,637,2.494]],["body/controllers/PlayersController.html",[0,1.063,2,1.063,3,0.171,4,0.151,5,0.151,6,1.642,9,0.571,10,0.021,11,0.547,12,2.16,13,1.439,17,1.956,18,2.16,20,0.171,21,0.061,22,1.657,23,0.853,24,0.012,25,0.012,64,0.486,74,1.349,87,0.35,88,1.315,95,0.799,97,0.853,98,0.813,99,0.853,104,1.709,118,2.03,123,1.246,128,1.645,163,1.868,173,1.657,196,2.421,197,2.147,267,1.956,269,2.56,281,1.97,285,1.657,346,2.731,348,2.659,349,1.956,351,1.956,352,1.793,353,1.956,392,3.554,393,2.844,394,4.618,395,3.554,398,3.554,399,2.433,400,3.554,401,3.554,403,3.554,404,3.155,405,2.433,407,3.948,408,2.433,410,3.554,411,3.554,412,3.554,413,3.554,414,3.554,415,4.199,416,2.433,417,1.793,418,1.793,422,3.554,459,3.699,483,2.421,584,3.155,585,2.16,588,2.433,637,2.857,638,2.433,639,2.433,640,2.848,641,2.848,642,2.848,643,2.848,644,2.659,645,2.433,646,2.848,647,2.848,648,2.848,649,2.848]],["title/modules/PlayersModule.html",[26,1.087,40,2.286]],["body/modules/PlayersModule.html",[2,2.121,3,0.27,4,0.239,5,0.239,6,1.501,9,0.559,10,0.021,11,0.863,20,0.27,21,0.066,24,0.016,25,0.016,26,1.864,28,1.883,29,2,30,2.271,31,2.271,32,2,33,2.949,34,2.271,40,4.338,42,2.87,43,2.271,44,2.128,637,4.276,644,3.728,645,3.839,650,3.839,651,3.839,652,4.494,653,4.494]],["title/injectables/PlayersService.html",[80,0.975,644,1.965]],["body/injectables/PlayersService.html",[3,0.203,4,0.179,5,0.179,6,1.95,9,0.585,10,0.021,11,0.648,20,0.203,21,0.049,23,1.011,24,0.013,25,0.013,49,1.706,53,2.318,54,2.56,55,2.56,64,0.921,66,1.964,80,1.261,81,1.502,87,0.415,88,1.485,91,1.658,95,1.037,97,1.406,98,0.707,99,1.406,104,1.485,117,2.308,123,1.406,163,0.957,197,2.017,274,3.397,281,1.599,282,1.964,285,1.964,288,4.428,296,1.826,346,2.95,407,4.214,418,2.125,437,4.614,459,3.792,483,1.964,582,2.56,583,2.884,584,3.561,585,2.56,639,2.884,644,2.541,654,2.884,655,3.375,656,3.375,657,4.696,658,3.375,659,3.375,660,3.375,661,3.375,662,3.375,663,3.375,664,3.375]],["title/modules/SharedModule.html",[26,1.087,41,1.835]],["body/modules/SharedModule.html",[3,0.269,4,0.238,5,0.238,9,0.508,10,0.021,11,0.86,20,0.269,21,0.065,24,0.016,25,0.016,26,1.861,28,1.876,29,1.992,30,2.262,31,2.262,32,1.992,33,2.944,34,3.141,41,3.533,42,2.863,43,2.262,44,2.12,665,3.824,666,3.824,667,3.824,668,4.58,669,4.477,670,4.477]],["title/injectables/SharedService.html",[80,0.975,668,2.286]],["body/injectables/SharedService.html",[3,0.321,4,0.284,5,0.284,9,0.479,10,0.02,11,1.025,20,0.321,21,0.078,24,0.018,25,0.018,80,1.694,81,2.375,668,3.971,671,4.559]],["title/coverage.html",[672,3.745]],["body/coverage.html",[0,1.89,1,1.278,5,0.099,6,2.042,7,2.06,8,1.59,10,0.021,14,1.083,21,0.084,24,0.009,25,0.009,32,1.922,59,1.708,80,1.535,82,1.59,83,0.722,85,1.822,86,1.59,98,0.28,102,1.007,111,1.904,118,0.657,125,1.59,144,0.941,148,1.172,154,1.172,155,2.67,156,2.397,157,2.06,158,2.275,163,0.85,167,1.872,168,1.278,216,5.529,265,1.278,266,2.275,277,1.083,283,1.083,286,1.083,299,1.083,312,1.172,315,1.278,339,2.275,354,1.59,355,3.592,372,1.278,378,1.083,389,1.278,390,1.59,419,1.007,430,1.59,442,2.275,443,1.59,454,2.275,459,1.083,460,2.275,461,1.59,479,1.412,483,1.083,488,3.276,489,3.276,504,1.59,507,2.587,514,2.562,515,1.172,516,1.59,521,1.172,532,1.59,543,1.412,544,1.59,545,3.476,546,1.59,561,1.59,565,1.007,576,1.278,577,1.59,586,1.083,593,2.275,594,1.59,612,1.172,614,1.278,615,1.412,619,1.59,628,1.59,637,1.278,638,1.59,644,1.007,654,1.59,668,1.172,671,1.59,672,1.412,673,1.59,674,1.862,675,6.936,676,6.3,677,4.736,678,1.59,679,6.567,680,1.59,681,2.999,682,1.59,683,4.319,684,1.59,685,3.69,686,1.59,687,1.59,688,1.59,689,1.59,690,3.218,691,3.218,692,1.862,693,3.218,694,3.218,695,2.563,696,2.563,697,2.999,698,1.862,699,1.59,700,1.862,701,1.412,702,1.862]],["title/dependencies.html",[29,1.942,703,2.598]],["body/dependencies.html",[10,0.021,11,0.825,13,2.171,21,0.089,24,0.016,25,0.016,29,1.912,49,2.171,57,3.257,144,2.171,319,2.704,417,2.704,418,2.704,451,2.499,704,6.097,705,4.295,706,4.295,707,4.295,708,4.295,709,4.295,710,4.295,711,4.295,712,4.295,713,4.295,714,4.295,715,4.295,716,4.295,717,4.295,718,4.295,719,4.295,720,4.295,721,4.295,722,4.295,723,4.295,724,4.295,725,4.295,726,4.295,727,5.518,728,4.295,729,4.295,730,4.295,731,4.295,732,4.295,733,4.295,734,4.295,735,4.295,736,4.295]],["title/miscellaneous/enumerations.html",[737,1.77,738,3.727]],["body/miscellaneous/enumerations.html",[6,1.158,10,0.021,17,3.284,24,0.014,25,0.014,53,3.284,83,1.151,85,0.931,87,0.426,106,3.284,146,4.055,147,3.627,148,3.717,163,1.356,173,2.783,197,1.786,225,4.96,268,3.627,269,2.265,279,3.284,281,2.797,282,3.436,290,3.627,346,2.417,419,1.875,453,4.086,514,1.453,515,3.011,582,3.627,644,1.875,701,2.628,737,2.016,738,2.961,739,3.466,740,5.905,741,2.961,742,3.466,743,4.783,744,3.466,745,4.783,746,4.783,747,5.905,748,3.466,749,3.466,750,3.466,751,3.466,752,4.086,753,4.783,754,3.466,755,4.783,756,3.466,757,3.466,758,3.466,759,3.466,760,3.466,761,3.466,762,3.466,763,3.466,764,3.466,765,3.466,766,4.783]],["title/miscellaneous/functions.html",[737,1.77,767,3.727]],["body/miscellaneous/functions.html",[6,1.69,10,0.018,24,0.018,25,0.018,32,3.29,85,1.641,87,0.622,155,2.252,514,2.12,682,4.322,693,5.609,737,2.944,767,4.322,768,6.82]],["title/index.html",[87,0.374,752,2.598,769,3.041]],["body/index.html",[4,0.147,10,0.02,15,1.896,24,0.012,25,0.012,44,2.522,83,1.282,95,0.53,109,2.358,112,1.738,113,1.606,155,1.81,163,1.153,249,4.038,256,4.038,263,3.661,281,1.307,348,2.881,356,2.093,393,1.307,404,2.093,508,2.093,545,3.315,672,2.093,673,4.124,770,2.76,771,2.76,772,5.325,773,2.76,774,2.76,775,2.76,776,2.76,777,2.76,778,4.827,779,2.76,780,2.76,781,5.938,782,2.76,783,6.301,784,2.76,785,6.432,786,2.358,787,5.325,788,4.827,789,4.827,790,2.76,791,4.066,792,2.76,793,2.76,794,2.76,795,2.76,796,2.76,797,2.76,798,2.76,799,2.76,800,2.76,801,2.76,802,2.76,803,2.76,804,2.76,805,2.76,806,2.76,807,2.76,808,5.938,809,2.76,810,2.76,811,4.066,812,2.76,813,2.76,814,2.76,815,4.066,816,2.76,817,4.827,818,2.76,819,4.549,820,4.066,821,2.76,822,2.76,823,2.76,824,2.76,825,2.76,826,2.76,827,4.827,828,2.76,829,2.76,830,2.76,831,2.76,832,4.066,833,2.76,834,2.76,835,2.76,836,2.358,837,2.76,838,2.76,839,4.827,840,2.76,841,2.76,842,2.76,843,2.76,844,2.76,845,4.066,846,2.76,847,2.76,848,2.76,849,2.76,850,2.76,851,2.76,852,4.066,853,2.76,854,2.76,855,2.76,856,4.066,857,4.066,858,2.76,859,2.76,860,2.76,861,2.76,862,2.76,863,2.76,864,2.76,865,2.76,866,2.76,867,2.76,868,2.76,869,2.358,870,2.76,871,2.76,872,2.76,873,2.76,874,2.76,875,2.76,876,2.358]],["title/modules.html",[28,2.07]],["body/modules.html",[10,0.016,24,0.016,25,0.016,27,3.147,28,1.92,38,2.884,39,3.329,40,2.884,41,2.315,306,3.147,384,3.147,607,3.147,819,6.004,836,5.629,877,7.028,878,7.028,879,7.263,880,6.588]],["title/overview.html",[881,4.219]],["body/overview.html",[2,1.257,10,0.021,14,3.137,24,0.013,25,0.013,26,1.008,27,4.783,28,1.411,29,1.498,30,1.701,31,1.701,32,1.498,33,1.594,34,1.701,35,2.875,36,2.875,37,2.875,38,3.859,39,3.208,40,3.859,41,3.409,42,2.368,43,1.701,44,1.594,81,1.498,84,1.498,124,2.119,264,1.958,277,3.137,306,4.561,307,2.875,309,2.875,378,3.137,384,4.561,385,2.875,387,2.875,419,2.917,426,2.875,427,2.875,513,2.875,586,3.137,607,4.561,608,2.875,610,2.875,644,2.917,650,2.875,651,2.875,665,2.875,666,2.875,667,2.875,668,4.099,881,2.875,882,3.366,883,3.366,884,4.687,885,3.366]],["title/properties.html",[126,1.457,703,2.598]],["body/properties.html",[10,0.021,24,0.018,25,0.018,126,1.824,393,2.587,869,4.666,876,4.666,886,5.462,887,5.462,888,5.462]],["title/miscellaneous/variables.html",[737,1.77,889,3.727]],["body/miscellaneous/variables.html",[6,1.315,10,0.021,15,1.095,24,0.008,25,0.008,59,1.556,64,0.671,71,3.327,74,2.469,75,3.662,83,1.05,85,1.4,87,0.196,98,0.75,102,0.863,113,2.737,118,0.933,124,1.663,139,4.822,155,1.752,163,1.116,179,1.209,225,4.366,312,1.663,348,1.831,355,3.954,479,2.004,488,3.954,489,3.954,505,2.478,506,1.362,508,1.209,509,2.004,510,2.567,511,3.31,512,1.362,514,1.829,521,1.004,545,3.828,565,0.863,612,1.663,678,1.362,680,1.362,684,1.362,685,4.993,686,1.362,687,2.258,688,2.258,689,1.362,690,2.891,691,2.891,694,2.891,695,2.258,696,3.363,699,1.362,701,1.209,737,0.928,741,1.362,786,1.362,889,1.362,890,2.643,891,1.594,892,3.937,893,3.937,894,4.364,895,1.594,896,2.643,897,2.643,898,3.937,899,2.643,900,3.937,901,2.643,902,3.937,903,3.937,904,3.937,905,2.643,906,2.643,907,2.643,908,2.643,909,1.594,910,3.937,911,3.937,912,3.937,913,1.594,914,1.594,915,1.594,916,5.408,917,1.594,918,2.643,919,2.643,920,2.643,921,2.643,922,3.384,923,2.643,924,4.705,925,1.594,926,1.594,927,1.594,928,1.594,929,1.594,930,1.594,931,3.937,932,3.937,933,3.937,934,3.937,935,6.568,936,1.594,937,1.594,938,1.594,939,5.845,940,2.643,941,2.643,942,2.643,943,2.643,944,2.643,945,2.643,946,2.643,947,2.643,948,2.643,949,1.594,950,1.594,951,1.594,952,1.594,953,1.594,954,1.594,955,3.937,956,1.594,957,1.594,958,1.594,959,1.594,960,1.594,961,1.594,962,1.594,963,1.594,964,1.594]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"injectables/ApiGatewayService.html":{},"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"modules/EnvModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/NestApplicationValidationPipe.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"injectables/PlayersService.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":216,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"coverage.html":{}}}],["0.0.1",{"_index":887,"title":{},"body":{"properties.html":{}}}],["0.10.8",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["0.14.2",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["0.3.23",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":241,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["0.5.1",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":675,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":697,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":676,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":677,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":698,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":700,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":692,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":214,"title":{"interfaces/EnvironmentVariables-1.html":{}},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"modules/BattleServiceModule.html":{}}}],["1.0.1",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":180,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["100",{"_index":177,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["1000",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":882,"title":{},"body":{"overview.html":{}}}],["11.0.0",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["11.2.0",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":187,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["15",{"_index":186,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["17.13.3",{"_index":725,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":222,"title":{"interfaces/EnvironmentVariables-2.html":{}},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["2.7.1",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":179,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":513,"title":{"interfaces/EnvironmentVariables-3.html":{}},"body":{"overview.html":{}}}],["4.0.2",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["4.1.14",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":885,"title":{},"body":{"overview.html":{}}}],["50",{"_index":178,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["6",{"_index":883,"title":{},"body":{"overview.html":{}}}],["60",{"_index":185,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["7.8.1",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":723,"title":{},"body":{"dependencies.html":{}}}],["8.16.0",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":184,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["9",{"_index":884,"title":{},"body":{"overview.html":{}}}],["abortearly",{"_index":500,"title":{},"body":{"modules/EnvModule.html":{}}}],["admin",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allowunknown",{"_index":501,"title":{},"body":{"modules/EnvModule.html":{}}}],["amazing",{"_index":862,"title":{},"body":{"index.html":{}}}],["amqp",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["amqp://${process.env.rabbitmq_user}:${process.env.rabbitmq_password}@${process.env.rabbitmq_host}:${process.env.rabbitmq_port",{"_index":321,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["amqp://admin:admin@localhost:5672",{"_index":332,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["amqplib",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":15,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api_gateway_host",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_gateway_port",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_gateway_schema",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibody",{"_index":412,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["apicreatedresponse",{"_index":413,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["apigatewaycontroller",{"_index":1,"title":{"controllers/ApiGatewayController.html":{}},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"coverage.html":{}}}],["apigatewaymodule",{"_index":27,"title":{"modules/ApiGatewayModule.html":{}},"body":{"modules/ApiGatewayModule.html":{},"modules.html":{},"overview.html":{}}}],["apigatewayservice",{"_index":14,"title":{"injectables/ApiGatewayService.html":{}},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"injectables/ApiGatewayService.html":{},"coverage.html":{},"overview.html":{}}}],["apiinternalservererrorresponse",{"_index":414,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["apioperation",{"_index":415,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["apioperation({summary",{"_index":392,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["apiproperty",{"_index":452,"title":{},"body":{"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{}}}],["apiproperty()@escape()@maxlength(playersettings.description_length)@trim()@isstring()@isnotempty",{"_index":468,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["apiproperty()@escape()@maxlength(playersettings.name_length)@trim()@isstring()@isnotempty",{"_index":473,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["apiproperty()@escape()@trim()@isstring()@isnotempty",{"_index":444,"title":{},"body":{"classes/CreateBattleDto.html":{}}}],["apiproperty()@isnumber()@isnotempty",{"_index":465,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["apiproperty()@isnumber()@max(1000000000)@isnotempty",{"_index":470,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":457,"title":{},"body":{"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerResponseDto.html":{}}}],["apitags",{"_index":12,"title":{},"body":{"controllers/ApiGatewayController.html":{},"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["apitags(tags.battles",{"_index":421,"title":{},"body":{"controllers/BattlesController.html":{}}}],["apitags(tags.players",{"_index":646,"title":{},"body":{"controllers/PlayersController.html":{}}}],["apitags(tags.root",{"_index":19,"title":{},"body":{"controllers/ApiGatewayController.html":{}}}],["app",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.enablecors",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.use(helmet",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app/shared",{"_index":62,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/PlayerModule.html":{}}}],["app/shared/battles/constants/battle",{"_index":280,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattleWorkerServiceController.html":{},"injectables/BattlesService.html":{}}}],["app/shared/battles/dto/create",{"_index":284,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{}}}],["app/shared/core/constants/broker/broker",{"_index":291,"title":{},"body":{"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{}}}],["app/shared/core/constants/client",{"_index":54,"title":{},"body":{"modules/ApiGatewayModule.html":{},"injectables/BattlesService.html":{},"injectables/PlayersService.html":{}}}],["app/shared/core/types/settings",{"_index":107,"title":{},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/CreateBattleDto.html":{},"classes/CreatePlayerDto.html":{}}}],["app/shared/players/constants/player",{"_index":583,"title":{},"body":{"controllers/PlayerController.html":{},"injectables/PlayersService.html":{}}}],["app/shared/players/dto/create",{"_index":584,"title":{},"body":{"controllers/PlayerController.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{}}}],["app_name",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appdatasource",{"_index":696,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":545,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application/battles.repository",{"_index":313,"title":{},"body":{"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{}}}],["application/players.repository",{"_index":613,"title":{},"body":{"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["applications",{"_index":777,"title":{},"body":{"index.html":{}}}],["apps/.../battles.repository.ts",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../configuration.ts",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../db",{"_index":746,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../env.schema.ts",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":768,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../nest",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../ormconfig.ts",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../players.repository.ts",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../tags.ts",{"_index":749,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/api",{"_index":6,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"injectables/ApiGatewayService.html":{},"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"injectables/BattlesService.html":{},"modules/EnvModule.html":{},"interfaces/EnvironmentVariables.html":{},"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"injectables/PlayersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/battle",{"_index":85,"title":{},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/player",{"_index":514,"title":{},"body":{"interfaces/EnvironmentVariables-3.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["async",{"_index":68,"title":{},"body":{"modules/ApiGatewayModule.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/PlayerController.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["attack",{"_index":224,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"classes/CreatePlayerDto.html":{},"classes/Player.html":{},"entities/PlayerDao.html":{}}}],["attacker",{"_index":219,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["attacker.currenthealth",{"_index":238,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["attacker.id",{"_index":230,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["attackerhealth",{"_index":234,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["author",{"_index":869,"title":{},"body":{"index.html":{},"properties.html":{}}}],["autoloadentities",{"_index":324,"title":{},"body":{"modules/BattleServiceModule.html":{},"modules/PlayerModule.html":{}}}],["automatically",{"_index":553,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["available",{"_index":880,"title":{},"body":{"modules.html":{}}}],["await",{"_index":300,"title":{},"body":{"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/PlayerController.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["aws",{"_index":831,"title":{},"body":{"index.html":{}}}],["backend",{"_index":807,"title":{},"body":{"index.html":{}}}],["backers",{"_index":863,"title":{},"body":{"index.html":{}}}],["baseattack",{"_index":203,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["based",{"_index":226,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["battle",{"_index":83,"title":{"classes/Battle.html":{}},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleResponseDto.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["battle.dao",{"_index":361,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{}}}],["battle.dto",{"_index":287,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{}}}],["battle.dto.ts",{"_index":443,"title":{},"body":{"classes/CreateBattleDto.html":{},"coverage.html":{}}}],["battle.dto.ts:23",{"_index":445,"title":{},"body":{"classes/CreateBattleDto.html":{}}}],["battle.dto.ts:30",{"_index":446,"title":{},"body":{"classes/CreateBattleDto.html":{}}}],["battle_queue",{"_index":757,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["battle_queue_name",{"_index":756,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["battle_service_host",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["battle_service_port",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["battle_service_queue",{"_index":755,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["battle_worker_service",{"_index":761,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["battle_worker_service_host",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["battle_worker_service_port",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["battledao",{"_index":102,"title":{"entities/BattleDao.html":{}},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleTypeOrmRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["battledao.date",{"_index":121,"title":{},"body":{"classes/Battle.html":{}}}],["battledao.player1",{"_index":119,"title":{},"body":{"classes/Battle.html":{}}}],["battledao.player2",{"_index":120,"title":{},"body":{"classes/Battle.html":{}}}],["battledao.status",{"_index":122,"title":{},"body":{"classes/Battle.html":{}}}],["battleengine",{"_index":154,"title":{"classes/BattleEngine.html":{}},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleWorkerServiceController.html":{},"coverage.html":{}}}],["battlemessagepatternsname",{"_index":279,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattleWorkerServiceController.html":{},"injectables/BattlesService.html":{},"miscellaneous/enumerations.html":{}}}],["battlemessagepatternsname.create",{"_index":440,"title":{},"body":{"injectables/BattlesService.html":{}}}],["battlemessagepatternsname.hello",{"_index":438,"title":{},"body":{"injectables/BattlesService.html":{}}}],["battlerepository",{"_index":312,"title":{},"body":{"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["battleresult",{"_index":168,"title":{"interfaces/BattleResult.html":{}},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"coverage.html":{}}}],["battles",{"_index":268,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattlesController.html":{},"miscellaneous/enumerations.html":{}}}],["battles.controlles",{"_index":429,"title":{},"body":{"modules/BattlesModule.html":{}}}],["battles.service",{"_index":420,"title":{},"body":{"controllers/BattlesController.html":{},"modules/BattlesModule.html":{}}}],["battles/battles.module",{"_index":52,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["battles_service",{"_index":760,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["battlescontroller",{"_index":389,"title":{"controllers/BattlesController.html":{}},"body":{"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"coverage.html":{}}}],["battleservice",{"_index":294,"title":{},"body":{"controllers/BattleServiceController.html":{}}}],["battleservicecontroller",{"_index":265,"title":{"controllers/BattleServiceController.html":{}},"body":{"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"coverage.html":{}}}],["battleservicemodule",{"_index":306,"title":{"modules/BattleServiceModule.html":{}},"body":{"modules/BattleServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["battleserviceservice",{"_index":277,"title":{"injectables/BattleServiceService.html":{}},"body":{"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"coverage.html":{},"overview.html":{}}}],["battlesimulation",{"_index":383,"title":{},"body":{"controllers/BattleWorkerServiceController.html":{}}}],["battlesmodule",{"_index":38,"title":{"modules/BattlesModule.html":{}},"body":{"modules/ApiGatewayModule.html":{},"modules/BattlesModule.html":{},"modules.html":{},"overview.html":{}}}],["battlesservice",{"_index":419,"title":{"injectables/BattlesService.html":{}},"body":{"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"injectables/BattlesService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["battlesserviceclient",{"_index":433,"title":{},"body":{"injectables/BattlesService.html":{}}}],["battlestatus",{"_index":116,"title":{},"body":{"classes/Battle.html":{}}}],["battlestatustypes",{"_index":106,"title":{},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/CreateBattleDto.html":{},"miscellaneous/enumerations.html":{}}}],["battlestatustypes.pending",{"_index":153,"title":{},"body":{"entities/BattleDao.html":{}}}],["battletypeormrepository",{"_index":315,"title":{"injectables/BattleTypeOrmRepository.html":{}},"body":{"modules/BattleServiceModule.html":{},"injectables/BattleTypeOrmRepository.html":{},"coverage.html":{}}}],["battleworker",{"_index":512,"title":{},"body":{"interfaces/EnvironmentVariables-2.html":{},"miscellaneous/variables.html":{}}}],["battleworkerservice",{"_index":762,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["battleworkerservicecontroller",{"_index":372,"title":{"controllers/BattleWorkerServiceController.html":{}},"body":{"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"coverage.html":{}}}],["battleworkerservicemodule",{"_index":384,"title":{"modules/BattleWorkerServiceModule.html":{}},"body":{"modules/BattleWorkerServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["battleworkerserviceservice",{"_index":378,"title":{"injectables/BattleWorkerServiceService.html":{}},"body":{"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"coverage.html":{},"overview.html":{}}}],["between",{"_index":210,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattlesController.html":{}}}],["board",{"_index":855,"title":{},"body":{"index.html":{}}}],["body",{"_index":410,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["bootstrap",{"_index":32,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/BattlesModule.html":{},"modules/PlayerModule.html":{},"modules/PlayersModule.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["brave",{"_index":175,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["broker",{"_index":810,"title":{},"body":{"index.html":{}}}],["brokerqueues",{"_index":290,"title":{},"body":{"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"miscellaneous/enumerations.html":{}}}],["brokerqueues.battle_queue_name",{"_index":334,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["brokerqueues.battle_service_queue",{"_index":327,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["browse",{"_index":879,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":877,"title":{},"body":{"modules.html":{}}}],["bufferlogs",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":773,"title":{},"body":{"index.html":{}}}],["calculate",{"_index":223,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["calculation",{"_index":252,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["catch",{"_index":351,"title":{},"body":{"injectables/BattleServiceService.html":{},"controllers/BattlesController.html":{},"injectables/PlayerService.html":{},"controllers/PlayersController.html":{}}}],["catch(error",{"_index":192,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["chance",{"_index":251,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["channel",{"_index":822,"title":{},"body":{"index.html":{}}}],["check",{"_index":256,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"index.html":{}}}],["class",{"_index":21,"title":{"classes/Battle.html":{},"classes/BattleEngine.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"classes/Leaderboard.html":{},"classes/NestApplicationValidationPipe.html":{},"classes/Player.html":{}},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"injectables/ApiGatewayService.html":{},"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"modules/EnvModule.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/NestApplicationValidationPipe.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"injectables/PlayersService.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":84,"title":{},"body":{"classes/Battle.html":{},"classes/BattleEngine.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"classes/Leaderboard.html":{},"classes/NestApplicationValidationPipe.html":{},"classes/Player.html":{},"overview.html":{}}}],["clicks",{"_index":834,"title":{},"body":{"index.html":{}}}],["client",{"_index":297,"title":{},"body":{"controllers/BattleServiceController.html":{}}}],["clientproxy",{"_index":288,"title":{},"body":{"controllers/BattleServiceController.html":{},"injectables/BattlesService.html":{},"injectables/PlayersService.html":{}}}],["clientservices",{"_index":53,"title":{},"body":{"modules/ApiGatewayModule.html":{},"injectables/BattlesService.html":{},"injectables/PlayersService.html":{},"miscellaneous/enumerations.html":{}}}],["clientservices.battles_service",{"_index":77,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["clientservices.players_service",{"_index":65,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["clientsmodule",{"_index":47,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{}}}],["clientsmodule.register",{"_index":326,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["clientsmodule.registerasync",{"_index":63,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["cluster_apigatewaymodule",{"_index":35,"title":{},"body":{"modules/ApiGatewayModule.html":{},"overview.html":{}}}],["cluster_apigatewaymodule_imports",{"_index":36,"title":{},"body":{"modules/ApiGatewayModule.html":{},"overview.html":{}}}],["cluster_apigatewaymodule_providers",{"_index":37,"title":{},"body":{"modules/ApiGatewayModule.html":{},"overview.html":{}}}],["cluster_battleservicemodule",{"_index":307,"title":{},"body":{"modules/BattleServiceModule.html":{},"overview.html":{}}}],["cluster_battleservicemodule_imports",{"_index":308,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["cluster_battleservicemodule_providers",{"_index":309,"title":{},"body":{"modules/BattleServiceModule.html":{},"overview.html":{}}}],["cluster_battlesmodule",{"_index":426,"title":{},"body":{"modules/BattlesModule.html":{},"overview.html":{}}}],["cluster_battlesmodule_providers",{"_index":427,"title":{},"body":{"modules/BattlesModule.html":{},"overview.html":{}}}],["cluster_battleworkerservicemodule",{"_index":385,"title":{},"body":{"modules/BattleWorkerServiceModule.html":{},"overview.html":{}}}],["cluster_battleworkerservicemodule_imports",{"_index":386,"title":{},"body":{"modules/BattleWorkerServiceModule.html":{}}}],["cluster_battleworkerservicemodule_providers",{"_index":387,"title":{},"body":{"modules/BattleWorkerServiceModule.html":{},"overview.html":{}}}],["cluster_playermodule",{"_index":608,"title":{},"body":{"modules/PlayerModule.html":{},"overview.html":{}}}],["cluster_playermodule_imports",{"_index":609,"title":{},"body":{"modules/PlayerModule.html":{}}}],["cluster_playermodule_providers",{"_index":610,"title":{},"body":{"modules/PlayerModule.html":{},"overview.html":{}}}],["cluster_playersmodule",{"_index":650,"title":{},"body":{"modules/PlayersModule.html":{},"overview.html":{}}}],["cluster_playersmodule_providers",{"_index":651,"title":{},"body":{"modules/PlayersModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":665,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":667,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_providers",{"_index":666,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["column",{"_index":135,"title":{},"body":{"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{}}}],["column({type",{"_index":138,"title":{},"body":{"entities/BattleDao.html":{}}}],["column({unique",{"_index":601,"title":{},"body":{"entities/PlayerDao.html":{}}}],["combatant",{"_index":257,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["combatant1",{"_index":200,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["combatant1.baseattack",{"_index":232,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["combatant1.currenthealth",{"_index":215,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["combatant1.hitpoints",{"_index":235,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["combatant1.id",{"_index":231,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["combatant1.username",{"_index":211,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["combatant2",{"_index":205,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["combatant2.baseattack",{"_index":233,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["combatant2.currenthealth",{"_index":217,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["combatant2.hitpoints",{"_index":236,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["combatant2.id",{"_index":254,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["combatant2.username",{"_index":212,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["come",{"_index":812,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":795,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":799,"title":{},"body":{"index.html":{}}}],["config/env.module",{"_index":58,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleWorkerServiceModule.html":{}}}],["config/env.variables",{"_index":60,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["configmodule",{"_index":487,"title":{},"body":{"modules/EnvModule.html":{}}}],["configmodule.forroot",{"_index":492,"title":{},"body":{"modules/EnvModule.html":{}}}],["configservice",{"_index":56,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/EnvModule.html":{}}}],["configservice.get('battle.host",{"_index":78,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["configservice.get('battle.port",{"_index":79,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["configservice.get('player.host",{"_index":72,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["configservice.get('player.port",{"_index":76,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["configuration",{"_index":488,"title":{},"body":{"modules/EnvModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["connection",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["console.error('error",{"_index":193,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["console.log('battle",{"_index":190,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["console.log('createbattledto",{"_index":304,"title":{},"body":{"controllers/BattleServiceController.html":{}}}],["console.log('received",{"_index":382,"title":{},"body":{"controllers/BattleWorkerServiceController.html":{}}}],["const",{"_index":117,"title":{},"body":{"classes/Battle.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"injectables/BattlesService.html":{},"classes/Leaderboard.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"injectables/PlayerTypeOrmRepository.html":{},"injectables/PlayersService.html":{}}}],["constructor",{"_index":91,"title":{},"body":{"classes/Battle.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerResponseDto.html":{},"classes/Leaderboard.html":{},"classes/NestApplicationValidationPipe.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"injectables/PlayersService.html":{}}}],["constructor(battlerepository",{"_index":340,"title":{},"body":{"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{}}}],["constructor(battlesserviceclient",{"_index":431,"title":{},"body":{"injectables/BattlesService.html":{}}}],["constructor(id",{"_index":455,"title":{},"body":{"classes/CreateBattleResponseDto.html":{}}}],["constructor(identifier",{"_index":484,"title":{},"body":{"classes/CreatePlayerResponseDto.html":{},"classes/Leaderboard.html":{}}}],["constructor(name",{"_index":562,"title":{},"body":{"classes/Player.html":{}}}],["constructor(player1",{"_index":92,"title":{},"body":{"classes/Battle.html":{}}}],["constructor(playerrepository",{"_index":620,"title":{},"body":{"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["constructor(playersserviceclient",{"_index":655,"title":{},"body":{"injectables/PlayersService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/ApiGatewayController.html":{},"controllers/BattleServiceController.html":{},"controllers/BattleWorkerServiceController.html":{},"controllers/BattlesController.html":{},"controllers/PlayerController.html":{},"controllers/PlayersController.html":{}}}],["controller",{"_index":0,"title":{"controllers/ApiGatewayController.html":{},"controllers/BattleServiceController.html":{},"controllers/BattleWorkerServiceController.html":{},"controllers/BattlesController.html":{},"controllers/PlayerController.html":{},"controllers/PlayersController.html":{}},"body":{"controllers/ApiGatewayController.html":{},"controllers/BattleServiceController.html":{},"controllers/BattleWorkerServiceController.html":{},"controllers/BattlesController.html":{},"controllers/PlayerController.html":{},"controllers/PlayersController.html":{},"coverage.html":{}}}],["controller('battles",{"_index":293,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattlesController.html":{}}}],["controller('players",{"_index":588,"title":{},"body":{"controllers/PlayerController.html":{},"controllers/PlayersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"controllers/PlayerController.html":{},"modules/PlayerModule.html":{},"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"overview.html":{}}}],["copies",{"_index":199,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["core/constants/db",{"_index":604,"title":{},"body":{"entities/PlayerDao.html":{}}}],["core/constants/swagger/tags",{"_index":18,"title":{},"body":{"controllers/ApiGatewayController.html":{},"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["corrected",{"_index":255,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["courses",{"_index":829,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":672,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":197,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"controllers/PlayerController.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{},"miscellaneous/enumerations.html":{}}}],["create(battle",{"_index":342,"title":{},"body":{"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{}}}],["create(createbattledto",{"_index":391,"title":{},"body":{"controllers/BattlesController.html":{},"injectables/BattlesService.html":{}}}],["create(createplayerdto",{"_index":639,"title":{},"body":{"controllers/PlayersController.html":{},"injectables/PlayersService.html":{}}}],["create(payload",{"_index":270,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/PlayerController.html":{}}}],["create(player",{"_index":623,"title":{},"body":{"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["createbattle",{"_index":751,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["createbattledto",{"_index":286,"title":{"classes/CreateBattleDto.html":{}},"body":{"controllers/BattleServiceController.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleDto.html":{},"coverage.html":{}}}],["createbattleresponsedto",{"_index":283,"title":{"classes/CreateBattleResponseDto.html":{}},"body":{"controllers/BattleServiceController.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleResponseDto.html":{},"coverage.html":{}}}],["createbattleresponsedto(identifier",{"_index":305,"title":{},"body":{"controllers/BattleServiceController.html":{}}}],["createbattleresponsedto})@apiinternalservererrorresponse({description",{"_index":402,"title":{},"body":{"controllers/BattlesController.html":{}}}],["created",{"_index":401,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["createdatecolumn",{"_index":142,"title":{},"body":{"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{}}}],["createdatecolumn({type",{"_index":129,"title":{},"body":{"entities/BattleDao.html":{}}}],["createdbattledao",{"_index":364,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{}}}],["createdplayerdao",{"_index":633,"title":{},"body":{"injectables/PlayerTypeOrmRepository.html":{}}}],["createplayer",{"_index":764,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["createplayerdto",{"_index":459,"title":{"classes/CreatePlayerDto.html":{}},"body":{"classes/CreatePlayerDto.html":{},"controllers/PlayerController.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{},"coverage.html":{}}}],["createplayerresponsedto",{"_index":483,"title":{"classes/CreatePlayerResponseDto.html":{}},"body":{"classes/CreatePlayerResponseDto.html":{},"controllers/PlayerController.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{},"coverage.html":{}}}],["createplayerresponsedto(identifier",{"_index":592,"title":{},"body":{"controllers/PlayerController.html":{}}}],["createplayerresponsedto})@apiinternalservererrorresponse({description",{"_index":641,"title":{},"body":{"controllers/PlayersController.html":{}}}],["createquerybuilder",{"_index":366,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["creates",{"_index":395,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["cunning",{"_index":182,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["current",{"_index":221,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["currentattack",{"_index":239,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["currenthealth",{"_index":201,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["data",{"_index":376,"title":{},"body":{"controllers/BattleWorkerServiceController.html":{}}}],["database",{"_index":113,"title":{},"body":{"classes/Battle.html":{},"classes/CreateBattleDto.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-3.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["database_db",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_host",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_password",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_port",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_user",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":108,"title":{},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{}}}],["db",{"_index":509,"title":{},"body":{"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-3.html":{},"miscellaneous/variables.html":{}}}],["dbtablesnames",{"_index":146,"title":{},"body":{"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{},"miscellaneous/enumerations.html":{}}}],["declarations",{"_index":31,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/BattlesModule.html":{},"modules/PlayerModule.html":{},"modules/PlayersModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["declare",{"_index":152,"title":{},"body":{"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{}}}],["decorator",{"_index":552,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["decorators",{"_index":128,"title":{},"body":{"entities/BattleDao.html":{},"controllers/BattleServiceController.html":{},"controllers/BattleWorkerServiceController.html":{},"controllers/BattlesController.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"entities/LeaderboardDao.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"controllers/PlayersController.html":{}}}],["deeper",{"_index":824,"title":{},"body":{"index.html":{}}}],["default",{"_index":139,"title":{},"body":{"entities/BattleDao.html":{},"classes/CreateBattleDto.html":{},"miscellaneous/variables.html":{}}}],["defender",{"_index":220,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["defender's",{"_index":244,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["defender.defense",{"_index":248,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["defense",{"_index":245,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"classes/CreatePlayerDto.html":{},"classes/Player.html":{},"entities/PlayerDao.html":{}}}],["defined",{"_index":95,"title":{},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/NestApplicationValidationPipe.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{},"index.html":{}}}],["dependencies",{"_index":29,"title":{"dependencies.html":{}},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/BattlesModule.html":{},"modules/PlayerModule.html":{},"modules/PlayersModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":830,"title":{},"body":{"index.html":{}}}],["description",{"_index":393,"title":{},"body":{"controllers/BattlesController.html":{},"classes/CreatePlayerDto.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/Player.html":{},"entities/PlayerDao.html":{},"controllers/PlayersController.html":{},"index.html":{},"properties.html":{}}}],["description_length",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":242,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["development",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["devtools",{"_index":841,"title":{},"body":{"index.html":{}}}],["discord",{"_index":821,"title":{},"body":{"index.html":{}}}],["dive",{"_index":823,"title":{},"body":{"index.html":{}}}],["docker",{"_index":806,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":673,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["don't",{"_index":550,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["dto",{"_index":560,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["durable",{"_index":336,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["during",{"_index":194,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["e2e",{"_index":792,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":774,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":394,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["engine",{"_index":379,"title":{},"body":{"controllers/BattleWorkerServiceController.html":{}}}],["engine.ts",{"_index":158,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"coverage.html":{}}}],["engine.ts:23",{"_index":164,"title":{},"body":{"classes/BattleEngine.html":{}}}],["engine.ts:9",{"_index":161,"title":{},"body":{"classes/BattleEngine.html":{}}}],["engine/battle",{"_index":157,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleWorkerServiceController.html":{},"coverage.html":{}}}],["enterprise",{"_index":844,"title":{},"body":{"index.html":{}}}],["entities",{"_index":124,"title":{},"body":{"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/battle.entity",{"_index":145,"title":{},"body":{"entities/BattleDao.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{}}}],["entities/leaderboard.entity",{"_index":541,"title":{},"body":{"entities/LeaderboardDao.html":{}}}],["entities/player.entity",{"_index":166,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"entities/PlayerDao.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["entity",{"_index":111,"title":{"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{}},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{},"coverage.html":{}}}],["entity(dbtablesnames.battle",{"_index":150,"title":{},"body":{"entities/BattleDao.html":{}}}],["entity(dbtablesnames.leaderboard",{"_index":542,"title":{},"body":{"entities/LeaderboardDao.html":{}}}],["entity(dbtablesnames.player",{"_index":605,"title":{},"body":{"entities/PlayerDao.html":{}}}],["enum",{"_index":115,"title":{},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{}}}],["enumerations",{"_index":738,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env.schema",{"_index":490,"title":{},"body":{"modules/EnvModule.html":{}}}],["env.variables",{"_index":491,"title":{},"body":{"modules/EnvModule.html":{}}}],["envfilepath",{"_index":496,"title":{},"body":{"modules/EnvModule.html":{}}}],["environment",{"_index":505,"title":{},"body":{"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"miscellaneous/variables.html":{}}}],["environmentvariables",{"_index":59,"title":{"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{}},"body":{"modules/ApiGatewayModule.html":{},"modules/EnvModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["envmodule",{"_index":39,"title":{"modules/EnvModule.html":{}},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/EnvModule.html":{},"modules/PlayerModule.html":{},"modules.html":{},"overview.html":{}}}],["envschema",{"_index":489,"title":{},"body":{"modules/EnvModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":196,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"injectables/BattleServiceService.html":{},"controllers/BattlesController.html":{},"injectables/PlayerService.html":{},"controllers/PlayersController.html":{}}}],["error'})@post",{"_index":405,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["error(error",{"_index":353,"title":{},"body":{"injectables/BattleServiceService.html":{},"controllers/BattlesController.html":{},"injectables/PlayerService.html":{},"controllers/PlayersController.html":{}}}],["escape",{"_index":447,"title":{},"body":{"classes/CreateBattleDto.html":{},"classes/CreatePlayerDto.html":{}}}],["example",{"_index":249,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"index.html":{}}}],["exception",{"_index":555,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["execute",{"_index":370,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["experience",{"_index":826,"title":{},"body":{"index.html":{}}}],["explicitly",{"_index":329,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"injectables/ApiGatewayService.html":{},"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"modules/EnvModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/NestApplicationValidationPipe.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"injectables/PlayersService.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{}}}],["exports",{"_index":34,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/BattlesModule.html":{},"modules/PlayerModule.html":{},"modules/PlayersModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["express",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":151,"title":{},"body":{"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"classes/NestApplicationValidationPipe.html":{},"entities/PlayerDao.html":{}}}],["false",{"_index":502,"title":{},"body":{"modules/EnvModule.html":{}}}],["few",{"_index":811,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"injectables/ApiGatewayService.html":{},"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"modules/EnvModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/NestApplicationValidationPipe.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"injectables/PlayersService.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"coverage.html":{}}}],["finished",{"_index":753,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["follow",{"_index":848,"title":{},"body":{"index.html":{}}}],["forbidnonwhitelisted",{"_index":557,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["framework",{"_index":772,"title":{},"body":{"index.html":{}}}],["fromdao",{"_index":90,"title":{},"body":{"classes/Battle.html":{},"classes/Leaderboard.html":{},"classes/Player.html":{}}}],["fromdao(battledao",{"_index":101,"title":{},"body":{"classes/Battle.html":{}}}],["fromdao(leaderboarddao",{"_index":520,"title":{},"body":{"classes/Leaderboard.html":{}}}],["fromdao(playerdao",{"_index":564,"title":{},"body":{"classes/Player.html":{}}}],["full",{"_index":843,"title":{},"body":{"index.html":{}}}],["function",{"_index":683,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":767,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["games",{"_index":517,"title":{},"body":{"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{}}}],["gateway",{"_index":786,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["gateway.controller",{"_index":51,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["gateway.controller.ts",{"_index":8,"title":{},"body":{"controllers/ApiGatewayController.html":{},"coverage.html":{}}}],["gateway.module.ts",{"_index":45,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["gateway.service",{"_index":16,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{}}}],["gateway.service.ts",{"_index":82,"title":{},"body":{"injectables/ApiGatewayService.html":{},"coverage.html":{}}}],["gateway/src/api",{"_index":7,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"injectables/ApiGatewayService.html":{},"coverage.html":{}}}],["gateway/src/battles/battles.controlles.ts",{"_index":390,"title":{},"body":{"controllers/BattlesController.html":{},"coverage.html":{}}}],["gateway/src/battles/battles.controlles.ts:29",{"_index":409,"title":{},"body":{"controllers/BattlesController.html":{}}}],["gateway/src/battles/battles.controlles.ts:49",{"_index":406,"title":{},"body":{"controllers/BattlesController.html":{}}}],["gateway/src/battles/battles.module.ts",{"_index":428,"title":{},"body":{"modules/BattlesModule.html":{}}}],["gateway/src/battles/battles.service.ts",{"_index":430,"title":{},"body":{"injectables/BattlesService.html":{},"coverage.html":{}}}],["gateway/src/battles/battles.service.ts:10",{"_index":432,"title":{},"body":{"injectables/BattlesService.html":{}}}],["gateway/src/battles/battles.service.ts:16",{"_index":435,"title":{},"body":{"injectables/BattlesService.html":{}}}],["gateway/src/battles/battles.service.ts:22",{"_index":434,"title":{},"body":{"injectables/BattlesService.html":{}}}],["gateway/src/config/configuration.ts",{"_index":678,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gateway/src/config/env.module.ts",{"_index":486,"title":{},"body":{"modules/EnvModule.html":{}}}],["gateway/src/config/env.schema.ts",{"_index":680,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gateway/src/config/env.variables.ts",{"_index":504,"title":{},"body":{"interfaces/EnvironmentVariables.html":{},"coverage.html":{}}}],["gateway/src/core/constants/swagger/tags.ts",{"_index":765,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gateway/src/environments/.env.${process.env.node_env",{"_index":497,"title":{},"body":{"modules/EnvModule.html":{}}}],["gateway/src/main.ts",{"_index":682,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["gateway/src/nest",{"_index":684,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gateway/src/players/players.controller.ts",{"_index":638,"title":{},"body":{"controllers/PlayersController.html":{},"coverage.html":{}}}],["gateway/src/players/players.controller.ts:28",{"_index":643,"title":{},"body":{"controllers/PlayersController.html":{}}}],["gateway/src/players/players.controller.ts:48",{"_index":642,"title":{},"body":{"controllers/PlayersController.html":{}}}],["gateway/src/players/players.module.ts",{"_index":652,"title":{},"body":{"modules/PlayersModule.html":{}}}],["gateway/src/players/players.service.ts",{"_index":654,"title":{},"body":{"injectables/PlayersService.html":{},"coverage.html":{}}}],["gateway/src/players/players.service.ts:10",{"_index":656,"title":{},"body":{"injectables/PlayersService.html":{}}}],["gateway/src/players/players.service.ts:16",{"_index":659,"title":{},"body":{"injectables/PlayersService.html":{}}}],["gateway/src/players/players.service.ts:22",{"_index":658,"title":{},"body":{"injectables/PlayersService.html":{}}}],["gateway/src/security/nest",{"_index":686,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":797,"title":{},"body":{"index.html":{}}}],["generated",{"_index":112,"title":{},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{},"index.html":{}}}],["gethello",{"_index":269,"title":{},"body":{"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"controllers/BattleWorkerServiceController.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"controllers/PlayerController.html":{},"injectables/PlayerService.html":{},"controllers/PlayersController.html":{},"miscellaneous/enumerations.html":{}}}],["getting",{"_index":769,"title":{"index.html":{}},"body":{}}],["global",{"_index":50,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/EnvModule.html":{}}}],["gold",{"_index":462,"title":{},"body":{"classes/CreatePlayerDto.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/Player.html":{},"entities/PlayerDao.html":{}}}],["graph",{"_index":836,"title":{},"body":{"index.html":{},"modules.html":{}}}],["grow",{"_index":859,"title":{},"body":{"index.html":{}}}],["handlecreatebattle",{"_index":373,"title":{},"body":{"controllers/BattleWorkerServiceController.html":{}}}],["handlecreatebattle(@payload",{"_index":381,"title":{},"body":{"controllers/BattleWorkerServiceController.html":{}}}],["handlecreatebattle(data",{"_index":375,"title":{},"body":{"controllers/BattleWorkerServiceController.html":{}}}],["hands",{"_index":825,"title":{},"body":{"index.html":{}}}],["handy",{"_index":813,"title":{},"body":{"index.html":{}}}],["health",{"_index":228,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["healthpercentage",{"_index":237,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["hello",{"_index":346,"title":{},"body":{"injectables/BattleServiceService.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"injectables/PlayerService.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{},"miscellaneous/enumerations.html":{}}}],["helmet",{"_index":722,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":832,"title":{},"body":{"index.html":{}}}],["here",{"_index":867,"title":{},"body":{"index.html":{}}}],["hit",{"_index":250,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"classes/CreatePlayerDto.html":{},"classes/Player.html":{},"entities/PlayerDao.html":{}}}],["hitchance",{"_index":246,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["hits",{"_index":243,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["host",{"_index":71,"title":{},"body":{"modules/ApiGatewayModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://docs.nestjs.com/recipes/documentation",{"_index":796,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":873,"title":{},"body":{"index.html":{}}}],["id",{"_index":127,"title":{},"body":{"entities/BattleDao.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{}}}],["identifier",{"_index":299,"title":{},"body":{"controllers/BattleServiceController.html":{},"classes/CreatePlayerResponseDto.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"controllers/PlayerController.html":{},"coverage.html":{}}}],["ignoreenvfile",{"_index":495,"title":{},"body":{"modules/EnvModule.html":{}}}],["implements",{"_index":362,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["import",{"_index":9,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"injectables/ApiGatewayService.html":{},"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"modules/EnvModule.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/NestApplicationValidationPipe.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"injectables/PlayersService.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{}}}],["imports",{"_index":46,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/EnvModule.html":{},"modules/PlayerModule.html":{}}}],["index",{"_index":87,"title":{"index.html":{}},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["infer",{"_index":73,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"injectables/ApiGatewayService.html":{},"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"modules/EnvModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/NestApplicationValidationPipe.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"injectables/PlayersService.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{}}}],["infrastructure",{"_index":804,"title":{},"body":{"index.html":{}}}],["infrastructure/type",{"_index":567,"title":{},"body":{"classes/Player.html":{},"modules/PlayerModule.html":{}}}],["infrastructure/typeorm/battle",{"_index":316,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["infrastructure/typeorm/battle.dao",{"_index":105,"title":{},"body":{"classes/Battle.html":{},"modules/BattleServiceModule.html":{}}}],["infrastructure/typeorm/leaderboard.dao",{"_index":523,"title":{},"body":{"classes/Leaderboard.html":{}}}],["initialattack",{"_index":229,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["inject",{"_index":66,"title":{},"body":{"modules/ApiGatewayModule.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattlesService.html":{},"injectables/PlayerService.html":{},"injectables/PlayersService.html":{}}}],["inject(battlerepository",{"_index":345,"title":{},"body":{"injectables/BattleServiceService.html":{}}}],["inject(brokerqueues.battle_service_queue",{"_index":295,"title":{},"body":{"controllers/BattleServiceController.html":{}}}],["inject(clientservices.battles_service",{"_index":436,"title":{},"body":{"injectables/BattlesService.html":{}}}],["inject(clientservices.players_service",{"_index":660,"title":{},"body":{"injectables/PlayersService.html":{}}}],["inject(playersrepository",{"_index":626,"title":{},"body":{"injectables/PlayerService.html":{}}}],["injectable",{"_index":80,"title":{"injectables/ApiGatewayService.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"injectables/BattleWorkerServiceService.html":{},"injectables/BattlesService.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"injectables/PlayersService.html":{},"injectables/SharedService.html":{}},"body":{"injectables/ApiGatewayService.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"injectables/BattleWorkerServiceService.html":{},"injectables/BattlesService.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"injectables/PlayersService.html":{},"injectables/SharedService.html":{},"coverage.html":{}}}],["injectables",{"_index":81,"title":{},"body":{"injectables/ApiGatewayService.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"injectables/BattleWorkerServiceService.html":{},"injectables/BattlesService.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"injectables/PlayersService.html":{},"injectables/SharedService.html":{},"overview.html":{}}}],["injectrepository",{"_index":359,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["injectrepository(battledao",{"_index":363,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{}}}],["injectrepository(playerdao",{"_index":632,"title":{},"body":{"injectables/PlayerTypeOrmRepository.html":{}}}],["insert",{"_index":367,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["insertresult",{"_index":360,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["insertresult.identifiers[0].id",{"_index":371,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["installcompile",{"_index":784,"title":{},"body":{"index.html":{}}}],["interact",{"_index":837,"title":{},"body":{"index.html":{}}}],["interface",{"_index":167,"title":{"interfaces/BattleResult.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{}},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"coverage.html":{}}}],["interfaces",{"_index":264,"title":{},"body":{"interfaces/BattleResult.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"overview.html":{}}}],["internal",{"_index":403,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["into(battledao",{"_index":368,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{}}}],["into(playerdao",{"_index":635,"title":{},"body":{"injectables/PlayerTypeOrmRepository.html":{}}}],["isglobal",{"_index":494,"title":{},"body":{"modules/EnvModule.html":{}}}],["isnotempty",{"_index":449,"title":{},"body":{"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{}}}],["isnumber",{"_index":476,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["isstring",{"_index":450,"title":{},"body":{"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{}}}],["job",{"_index":852,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":854,"title":{},"body":{"index.html":{}}}],["joi",{"_index":724,"title":{},"body":{"dependencies.html":{}}}],["joi.number().required",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().valid('development').required",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":865,"title":{},"body":{"index.html":{}}}],["js",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["kamil",{"_index":870,"title":{},"body":{"index.html":{}}}],["leaderboard",{"_index":515,"title":{"classes/Leaderboard.html":{}},"body":{"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["leaderboarddao",{"_index":521,"title":{"entities/LeaderboardDao.html":{}},"body":{"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["leaderboarddao.description",{"_index":527,"title":{},"body":{"classes/Leaderboard.html":{}}}],["leaderboarddao.games",{"_index":530,"title":{},"body":{"classes/Leaderboard.html":{}}}],["leaderboarddao.gold",{"_index":528,"title":{},"body":{"classes/Leaderboard.html":{}}}],["leaderboarddao.identifier",{"_index":525,"title":{},"body":{"classes/Leaderboard.html":{}}}],["leaderboarddao.name",{"_index":526,"title":{},"body":{"classes/Leaderboard.html":{}}}],["leaderboarddao.rank",{"_index":531,"title":{},"body":{"classes/Leaderboard.html":{}}}],["leaderboarddao.silver",{"_index":529,"title":{},"body":{"classes/Leaderboard.html":{}}}],["learn",{"_index":816,"title":{},"body":{"index.html":{}}}],["legend",{"_index":30,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/BattlesModule.html":{},"modules/PlayerModule.html":{},"modules/PlayersModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["libs/.../battle",{"_index":739,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../broker",{"_index":742,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../client",{"_index":744,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../player",{"_index":748,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../settings.ts",{"_index":741,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["libs/shared/src/battles/constants/battle",{"_index":750,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/shared/src/battles/dto/create",{"_index":442,"title":{},"body":{"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"coverage.html":{}}}],["libs/shared/src/core/constants/broker/broker",{"_index":754,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/shared/src/core/constants/client",{"_index":758,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/shared/src/core/pipes/nest",{"_index":544,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{},"coverage.html":{}}}],["libs/shared/src/core/types/settings.ts",{"_index":701,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["libs/shared/src/players/constants/player",{"_index":763,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/shared/src/players/dto/create",{"_index":460,"title":{},"body":{"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"coverage.html":{}}}],["libs/shared/src/shared.module.ts",{"_index":669,"title":{},"body":{"modules/SharedModule.html":{}}}],["libs/shared/src/shared.service.ts",{"_index":671,"title":{},"body":{"injectables/SharedService.html":{},"coverage.html":{}}}],["license",{"_index":876,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":857,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":850,"title":{},"body":{"index.html":{}}}],["literal",{"_index":271,"title":{},"body":{"controllers/BattleServiceController.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"controllers/PlayerController.html":{}}}],["load",{"_index":493,"title":{},"body":{"modules/EnvModule.html":{}}}],["localhost",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":171,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["log.push",{"_index":218,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["log.push(`${combatant1.username",{"_index":258,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["log.push(`${combatant2.username",{"_index":260,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["log.push(`battle",{"_index":208,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["logging",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["looking",{"_index":851,"title":{},"body":{"index.html":{}}}],["loop",{"_index":846,"title":{},"body":{"index.html":{}}}],["loserid",{"_index":170,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["manager",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["matching",{"_index":25,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"injectables/ApiGatewayService.html":{},"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"modules/EnvModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/NestApplicationValidationPipe.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"injectables/PlayersService.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.max(0.1",{"_index":247,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["math.max(initialattack",{"_index":240,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["math.random",{"_index":253,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["mau",{"_index":833,"title":{},"body":{"index.html":{}}}],["max",{"_index":477,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["max(1_000_000_000",{"_index":482,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["maxlength",{"_index":478,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["maxlength(playersettings.description_length",{"_index":481,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["maxlength(playersettings.name_length",{"_index":480,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["message",{"_index":281,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattleWorkerServiceController.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"controllers/PlayerController.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["messagepattern",{"_index":289,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattleWorkerServiceController.html":{},"controllers/PlayerController.html":{}}}],["messagepattern(battlemessagepatternsname.create",{"_index":272,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattleWorkerServiceController.html":{}}}],["messagepattern(battlemessagepatternsname.hello",{"_index":275,"title":{},"body":{"controllers/BattleServiceController.html":{}}}],["messagepattern(playermessagepatternsname.create",{"_index":578,"title":{},"body":{"controllers/PlayerController.html":{}}}],["messagepattern(playermessagepatternsname.hello",{"_index":580,"title":{},"body":{"controllers/PlayerController.html":{}}}],["metadata",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":88,"title":{},"body":{"classes/Battle.html":{},"classes/BattleEngine.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"classes/Leaderboard.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{}}}],["microservice",{"_index":788,"title":{},"body":{"index.html":{}}}],["migrations",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrations/*{.ts,.js",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationstablename",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":737,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":856,"title":{},"body":{"index.html":{}}}],["module",{"_index":26,"title":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/BattlesModule.html":{},"modules/EnvModule.html":{},"modules/PlayerModule.html":{},"modules/PlayersModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/BattlesModule.html":{},"modules/EnvModule.html":{},"modules/PlayerModule.html":{},"modules/PlayersModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":28,"title":{"modules.html":{}},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/BattlesModule.html":{},"modules/EnvModule.html":{},"modules/PlayerModule.html":{},"modules/PlayersModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":817,"title":{},"body":{"index.html":{}}}],["mutable",{"_index":198,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["myśliwiec",{"_index":871,"title":{},"body":{"index.html":{}}}],["name",{"_index":64,"title":{},"body":{"modules/ApiGatewayModule.html":{},"classes/Battle.html":{},"classes/BattleEngine.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{},"miscellaneous/variables.html":{}}}],["name.ts",{"_index":740,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["name_length",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["names",{"_index":149,"title":{},"body":{"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{}}}],["names.ts",{"_index":747,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["need",{"_index":109,"title":{},"body":{"classes/Battle.html":{},"index.html":{}}}],["nest",{"_index":778,"title":{},"body":{"index.html":{}}}],["nestapplicationoptions",{"_index":685,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nestapplicationsecurity",{"_index":688,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nestapplicationvalidationpipe",{"_index":543,"title":{"classes/NestApplicationValidationPipe.html":{}},"body":{"classes/NestApplicationValidationPipe.html":{},"coverage.html":{}}}],["nestframework",{"_index":875,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":808,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":11,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"injectables/ApiGatewayService.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"injectables/BattlesService.html":{},"modules/EnvModule.html":{},"classes/NestApplicationValidationPipe.html":{},"controllers/PlayerController.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"injectables/PlayersService.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":57,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/EnvModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["nestjs/microservices",{"_index":49,"title":{},"body":{"modules/ApiGatewayModule.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"controllers/BattleWorkerServiceController.html":{},"injectables/BattlesService.html":{},"controllers/PlayerController.html":{},"injectables/PlayersService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":13,"title":{},"body":{"controllers/ApiGatewayController.html":{},"controllers/BattlesController.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"controllers/PlayersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":319,"title":{},"body":{"modules/BattleServiceModule.html":{},"injectables/BattleTypeOrmRepository.html":{},"modules/PlayerModule.html":{},"injectables/PlayerTypeOrmRepository.html":{},"dependencies.html":{}}}],["new",{"_index":118,"title":{},"body":{"classes/Battle.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"controllers/BattleWorkerServiceController.html":{},"controllers/BattlesController.html":{},"classes/Leaderboard.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"injectables/PlayerService.html":{},"controllers/PlayersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":771,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":783,"title":{},"body":{"index.html":{}}}],["npx",{"_index":798,"title":{},"body":{"index.html":{}}}],["number",{"_index":464,"title":{},"body":{"classes/CreatePlayerDto.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/Player.html":{},"entities/PlayerDao.html":{}}}],["object",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objects",{"_index":559,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["observable",{"_index":407,"title":{},"body":{"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{}}}],["offer",{"_index":853,"title":{},"body":{"index.html":{}}}],["official",{"_index":827,"title":{},"body":{"index.html":{}}}],["open",{"_index":858,"title":{},"body":{"index.html":{}}}],["optional",{"_index":99,"title":{},"body":{"classes/Battle.html":{},"classes/BattleEngine.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerResponseDto.html":{},"classes/Leaderboard.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{}}}],["options",{"_index":70,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{}}}],["options.ts",{"_index":355,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["options.ts:15",{"_index":358,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{}}}],["options.ts:9",{"_index":357,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{}}}],["orm/player",{"_index":615,"title":{},"body":{"modules/PlayerModule.html":{},"injectables/PlayerTypeOrmRepository.html":{},"coverage.html":{}}}],["orm/player.dao",{"_index":568,"title":{},"body":{"classes/Player.html":{},"modules/PlayerModule.html":{}}}],["orm/player.dao.ts",{"_index":594,"title":{},"body":{"entities/PlayerDao.html":{},"coverage.html":{}}}],["orm/player.dao.ts:12",{"_index":602,"title":{},"body":{"entities/PlayerDao.html":{}}}],["orm/player.dao.ts:15",{"_index":597,"title":{},"body":{"entities/PlayerDao.html":{}}}],["orm/player.dao.ts:18",{"_index":598,"title":{},"body":{"entities/PlayerDao.html":{}}}],["orm/player.dao.ts:21",{"_index":603,"title":{},"body":{"entities/PlayerDao.html":{}}}],["orm/player.dao.ts:24",{"_index":599,"title":{},"body":{"entities/PlayerDao.html":{}}}],["orm/player.dao.ts:27",{"_index":596,"title":{},"body":{"entities/PlayerDao.html":{}}}],["orm/player.dao.ts:30",{"_index":595,"title":{},"body":{"entities/PlayerDao.html":{}}}],["orm/player.dao.ts:9",{"_index":600,"title":{},"body":{"entities/PlayerDao.html":{}}}],["ormconfig",{"_index":311,"title":{},"body":{"modules/BattleServiceModule.html":{},"modules/PlayerModule.html":{}}}],["ormconfig.default.options",{"_index":323,"title":{},"body":{"modules/BattleServiceModule.html":{},"modules/PlayerModule.html":{}}}],["out",{"_index":44,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/BattlesModule.html":{},"modules/PlayerModule.html":{},"modules/PlayersModule.html":{},"modules/SharedModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":881,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":800,"title":{},"body":{"index.html":{}}}],["package",{"_index":703,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":97,"title":{},"body":{"classes/Battle.html":{},"classes/BattleEngine.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerResponseDto.html":{},"classes/Leaderboard.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{}}}],["parseint(process.env.database_port",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["part",{"_index":842,"title":{},"body":{"index.html":{}}}],["password",{"_index":511,"title":{},"body":{"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-3.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":437,"title":{},"body":{"injectables/BattlesService.html":{},"injectables/PlayersService.html":{}}}],["patterns",{"_index":282,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattleWorkerServiceController.html":{},"injectables/BattlesService.html":{},"controllers/PlayerController.html":{},"injectables/PlayersService.html":{},"miscellaneous/enumerations.html":{}}}],["payload",{"_index":274,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattleWorkerServiceController.html":{},"injectables/BattlesService.html":{},"classes/NestApplicationValidationPipe.html":{},"controllers/PlayerController.html":{},"injectables/PlayersService.html":{}}}],["payload.createbattledto",{"_index":302,"title":{},"body":{"controllers/BattleServiceController.html":{}}}],["payload.createplayerdto",{"_index":591,"title":{},"body":{"controllers/PlayerController.html":{}}}],["pending",{"_index":453,"title":{},"body":{"classes/CreateBattleDto.html":{},"miscellaneous/enumerations.html":{}}}],["pg",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["platform",{"_index":805,"title":{},"body":{"index.html":{}}}],["player",{"_index":163,"title":{"classes/Player.html":{}},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattlesController.html":{},"classes/CreatePlayerResponseDto.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-3.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["player('1",{"_index":174,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["player('2",{"_index":181,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["player.'})@apibody({type",{"_index":640,"title":{},"body":{"controllers/PlayersController.html":{}}}],["player.controller",{"_index":617,"title":{},"body":{"modules/PlayerModule.html":{}}}],["player.dao",{"_index":631,"title":{},"body":{"injectables/PlayerTypeOrmRepository.html":{}}}],["player.dto",{"_index":585,"title":{},"body":{"controllers/PlayerController.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{}}}],["player.dto.ts",{"_index":461,"title":{},"body":{"classes/CreatePlayerDto.html":{},"coverage.html":{}}}],["player.dto.ts:20",{"_index":474,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["player.dto.ts:28",{"_index":469,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["player.dto.ts:34",{"_index":471,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["player.dto.ts:40",{"_index":475,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["player.dto.ts:45",{"_index":472,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["player.dto.ts:50",{"_index":467,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["player.dto.ts:55",{"_index":466,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["player.service",{"_index":587,"title":{},"body":{"controllers/PlayerController.html":{},"modules/PlayerModule.html":{}}}],["player1",{"_index":100,"title":{},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"classes/CreateBattleDto.html":{}}}],["player1.attack",{"_index":204,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["player1.hitpoints",{"_index":202,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["player2",{"_index":94,"title":{},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"classes/CreateBattleDto.html":{}}}],["player2).then(result",{"_index":189,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["player2.attack",{"_index":207,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["player2.hitpoints",{"_index":206,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["player_service_host",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player_service_port",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["playercontroller",{"_index":576,"title":{"controllers/PlayerController.html":{}},"body":{"controllers/PlayerController.html":{},"modules/PlayerModule.html":{},"coverage.html":{}}}],["playerdao",{"_index":565,"title":{"entities/PlayerDao.html":{}},"body":{"classes/Player.html":{},"entities/PlayerDao.html":{},"modules/PlayerModule.html":{},"injectables/PlayerTypeOrmRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playerdao.attack",{"_index":575,"title":{},"body":{"classes/Player.html":{}}}],["playerdao.defense",{"_index":574,"title":{},"body":{"classes/Player.html":{}}}],["playerdao.description",{"_index":570,"title":{},"body":{"classes/Player.html":{}}}],["playerdao.gold",{"_index":571,"title":{},"body":{"classes/Player.html":{}}}],["playerdao.hit",{"_index":573,"title":{},"body":{"classes/Player.html":{}}}],["playerdao.name",{"_index":569,"title":{},"body":{"classes/Player.html":{}}}],["playerdao.silver",{"_index":572,"title":{},"body":{"classes/Player.html":{}}}],["playermessagepatternsname",{"_index":582,"title":{},"body":{"controllers/PlayerController.html":{},"injectables/PlayersService.html":{},"miscellaneous/enumerations.html":{}}}],["playermessagepatternsname.create",{"_index":663,"title":{},"body":{"injectables/PlayersService.html":{}}}],["playermessagepatternsname.hello",{"_index":661,"title":{},"body":{"injectables/PlayersService.html":{}}}],["playermodule",{"_index":607,"title":{"modules/PlayerModule.html":{}},"body":{"modules/PlayerModule.html":{},"modules.html":{},"overview.html":{}}}],["playerrepository",{"_index":622,"title":{},"body":{"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["players",{"_index":173,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattlesController.html":{},"controllers/PlayerController.html":{},"controllers/PlayersController.html":{},"miscellaneous/enumerations.html":{}}}],["players.'})@apibody({type",{"_index":397,"title":{},"body":{"controllers/BattlesController.html":{}}}],["players.controller",{"_index":653,"title":{},"body":{"modules/PlayersModule.html":{}}}],["players.service",{"_index":645,"title":{},"body":{"controllers/PlayersController.html":{},"modules/PlayersModule.html":{}}}],["players/players.module",{"_index":61,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["players_service",{"_index":759,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["playerscontroller",{"_index":637,"title":{"controllers/PlayersController.html":{}},"body":{"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"coverage.html":{}}}],["playerservice",{"_index":586,"title":{"injectables/PlayerService.html":{}},"body":{"controllers/PlayerController.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"coverage.html":{},"overview.html":{}}}],["playersettings",{"_index":479,"title":{},"body":{"classes/CreatePlayerDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playersmodule",{"_index":40,"title":{"modules/PlayersModule.html":{}},"body":{"modules/ApiGatewayModule.html":{},"modules/PlayersModule.html":{},"modules.html":{},"overview.html":{}}}],["playersrepository",{"_index":612,"title":{},"body":{"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playersservice",{"_index":644,"title":{"injectables/PlayersService.html":{}},"body":{"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"injectables/PlayersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["playersserviceclient",{"_index":657,"title":{},"body":{"injectables/PlayersService.html":{}}}],["playerstatus",{"_index":524,"title":{},"body":{"classes/Leaderboard.html":{}}}],["playertypeormrepository",{"_index":614,"title":{"injectables/PlayerTypeOrmRepository.html":{}},"body":{"modules/PlayerModule.html":{},"injectables/PlayerTypeOrmRepository.html":{},"coverage.html":{}}}],["please",{"_index":820,"title":{},"body":{"index.html":{}}}],["port",{"_index":75,"title":{},"body":{"modules/ApiGatewayModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":411,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["postgres",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgresql",{"_index":809,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":267,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattlesController.html":{},"controllers/PlayerController.html":{},"controllers/PlayersController.html":{}}}],["primarycolumn",{"_index":143,"title":{},"body":{"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{}}}],["primarycolumn({type",{"_index":132,"title":{},"body":{"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{}}}],["private",{"_index":296,"title":{},"body":{"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"injectables/BattlesService.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"injectables/PlayersService.html":{}}}],["process.env.api_gateway_host",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.api_gateway_port",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.api_gateway_schema",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.app_name",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.battle_service_host",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.battle_service_port",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.battle_worker_service_host",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.battle_worker_service_port",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_db",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_host",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_password",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_port",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_user",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.player_service_host",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.player_service_port",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.port",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.rabbitmq_host",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.rabbitmq_password",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.rabbitmq_port",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.rabbitmq_user",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progressive",{"_index":770,"title":{},"body":{"index.html":{}}}],["project",{"_index":781,"title":{},"body":{"index.html":{}}}],["promise",{"_index":165,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/PlayerController.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["properties",{"_index":126,"title":{"properties.html":{}},"body":{"entities/BattleDao.html":{},"interfaces/BattleResult.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"entities/LeaderboardDao.html":{},"classes/NestApplicationValidationPipe.html":{},"entities/PlayerDao.html":{},"properties.html":{}}}],["provide",{"_index":337,"title":{},"body":{"modules/BattleServiceModule.html":{},"modules/PlayerModule.html":{}}}],["providers",{"_index":33,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/BattlesModule.html":{},"modules/EnvModule.html":{},"modules/PlayerModule.html":{},"modules/PlayersModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["public",{"_index":159,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"classes/NestApplicationValidationPipe.html":{}}}],["questions",{"_index":818,"title":{},"body":{"index.html":{}}}],["queue",{"_index":333,"title":{},"body":{"modules/BattleServiceModule.html":{},"controllers/BattleWorkerServiceController.html":{}}}],["queueoptions",{"_index":335,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["queues",{"_index":292,"title":{},"body":{"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{}}}],["queues.ts",{"_index":743,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rabbitmq",{"_index":508,"title":{},"body":{"interfaces/EnvironmentVariables-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rabbitmq_host",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rabbitmq_password",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rabbitmq_port",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rabbitmq_user",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rank",{"_index":518,"title":{},"body":{"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{}}}],["read",{"_index":866,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/ApiGatewayController.html":{},"classes/Battle.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerResponseDto.html":{},"classes/Leaderboard.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{}}}],["real",{"_index":838,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["remaining",{"_index":227,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["removed",{"_index":554,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["repository",{"_index":356,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{},"injectables/PlayerTypeOrmRepository.html":{},"index.html":{}}}],["required",{"_index":398,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["reset",{"_index":43,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/BattlesModule.html":{},"modules/PlayerModule.html":{},"modules/PlayersModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["resources",{"_index":263,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"index.html":{}}}],["responde.dto",{"_index":285,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"controllers/PlayerController.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{}}}],["responde.dto.ts",{"_index":454,"title":{},"body":{"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerResponseDto.html":{},"coverage.html":{}}}],["responde.dto.ts:9",{"_index":456,"title":{},"body":{"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerResponseDto.html":{}}}],["result",{"_index":191,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["results",{"_index":24,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"injectables/ApiGatewayService.html":{},"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"modules/EnvModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/NestApplicationValidationPipe.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"injectables/PlayersService.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":123,"title":{},"body":{"classes/Battle.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"classes/Leaderboard.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{}}}],["returns",{"_index":104,"title":{},"body":{"classes/Battle.html":{},"classes/BattleEngine.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"classes/Leaderboard.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{}}}],["rogue",{"_index":183,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["root",{"_index":766,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["run",{"_index":785,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":418,"title":{},"body":{"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{},"dependencies.html":{}}}],["sanitize",{"_index":416,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["sanitize(createbattledto",{"_index":424,"title":{},"body":{"controllers/BattlesController.html":{}}}],["sanitize(createplayerdto",{"_index":648,"title":{},"body":{"controllers/PlayersController.html":{}}}],["sanitizer",{"_index":417,"title":{},"body":{"controllers/BattlesController.html":{},"classes/CreateBattleDto.html":{},"classes/CreatePlayerDto.html":{},"controllers/PlayersController.html":{},"dependencies.html":{}}}],["scalable",{"_index":775,"title":{},"body":{"index.html":{}}}],["schema",{"_index":506,"title":{},"body":{"interfaces/EnvironmentVariables.html":{},"miscellaneous/variables.html":{}}}],["sdependencies",{"_index":802,"title":{},"body":{"index.html":{}}}],["security.ts",{"_index":687,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":404,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{},"index.html":{}}}],["service",{"_index":348,"title":{},"body":{"injectables/BattleServiceService.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"injectables/PlayerService.html":{},"controllers/PlayersController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["service.'})@get",{"_index":408,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["service.controller",{"_index":314,"title":{},"body":{"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{}}}],["service.controller.ts",{"_index":266,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattleWorkerServiceController.html":{},"coverage.html":{}}}],["service.controller.ts:12",{"_index":374,"title":{},"body":{"controllers/BattleWorkerServiceController.html":{}}}],["service.controller.ts:17",{"_index":276,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattleWorkerServiceController.html":{}}}],["service.controller.ts:22",{"_index":273,"title":{},"body":{"controllers/BattleServiceController.html":{}}}],["service.module.ts",{"_index":310,"title":{},"body":{"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{}}}],["service.service",{"_index":278,"title":{},"body":{"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{}}}],["service.service.ts",{"_index":339,"title":{},"body":{"injectables/BattleServiceService.html":{},"injectables/BattleWorkerServiceService.html":{},"coverage.html":{}}}],["service.service.ts:12",{"_index":344,"title":{},"body":{"injectables/BattleServiceService.html":{}}}],["service.service.ts:15",{"_index":343,"title":{},"body":{"injectables/BattleServiceService.html":{}}}],["service.service.ts:5",{"_index":388,"title":{},"body":{"injectables/BattleWorkerServiceService.html":{}}}],["service.service.ts:6",{"_index":341,"title":{},"body":{"injectables/BattleServiceService.html":{}}}],["service/src/application/battles.repository.ts",{"_index":689,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service/src/application/players.repository.ts",{"_index":699,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service/src/battle",{"_index":156,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"coverage.html":{}}}],["service/src/config/configuration.ts",{"_index":690,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service/src/config/env.module",{"_index":317,"title":{},"body":{"modules/BattleServiceModule.html":{},"modules/PlayerModule.html":{}}}],["service/src/config/env.schema.ts",{"_index":691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service/src/config/env.variables.ts",{"_index":507,"title":{},"body":{"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"coverage.html":{}}}],["service/src/core/constants/db",{"_index":147,"title":{},"body":{"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"miscellaneous/enumerations.html":{}}}],["service/src/entities/battle.entity.ts",{"_index":86,"title":{},"body":{"classes/Battle.html":{},"coverage.html":{}}}],["service/src/entities/battle.entity.ts:13",{"_index":103,"title":{},"body":{"classes/Battle.html":{}}}],["service/src/entities/battle.entity.ts:4",{"_index":96,"title":{},"body":{"classes/Battle.html":{}}}],["service/src/entities/leaderboard.entity.ts",{"_index":516,"title":{},"body":{"classes/Leaderboard.html":{},"coverage.html":{}}}],["service/src/entities/leaderboard.entity.ts:16",{"_index":522,"title":{},"body":{"classes/Leaderboard.html":{}}}],["service/src/entities/leaderboard.entity.ts:3",{"_index":519,"title":{},"body":{"classes/Leaderboard.html":{}}}],["service/src/entities/player.entity.ts",{"_index":561,"title":{},"body":{"classes/Player.html":{},"coverage.html":{}}}],["service/src/entities/player.entity.ts:14",{"_index":566,"title":{},"body":{"classes/Player.html":{}}}],["service/src/entities/player.entity.ts:3",{"_index":563,"title":{},"body":{"classes/Player.html":{}}}],["service/src/infrastructure/type",{"_index":593,"title":{},"body":{"entities/PlayerDao.html":{},"injectables/PlayerTypeOrmRepository.html":{},"coverage.html":{}}}],["service/src/infrastructure/typeorm/battle",{"_index":354,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{},"coverage.html":{}}}],["service/src/infrastructure/typeorm/battle.dao.ts",{"_index":125,"title":{},"body":{"entities/BattleDao.html":{},"coverage.html":{}}}],["service/src/infrastructure/typeorm/battle.dao.ts:10",{"_index":134,"title":{},"body":{"entities/BattleDao.html":{}}}],["service/src/infrastructure/typeorm/battle.dao.ts:13",{"_index":136,"title":{},"body":{"entities/BattleDao.html":{}}}],["service/src/infrastructure/typeorm/battle.dao.ts:16",{"_index":137,"title":{},"body":{"entities/BattleDao.html":{}}}],["service/src/infrastructure/typeorm/battle.dao.ts:19",{"_index":131,"title":{},"body":{"entities/BattleDao.html":{}}}],["service/src/infrastructure/typeorm/battle.dao.ts:22",{"_index":141,"title":{},"body":{"entities/BattleDao.html":{}}}],["service/src/infrastructure/typeorm/leaderboard.dao.ts",{"_index":532,"title":{},"body":{"entities/LeaderboardDao.html":{},"coverage.html":{}}}],["service/src/infrastructure/typeorm/leaderboard.dao.ts:12",{"_index":537,"title":{},"body":{"entities/LeaderboardDao.html":{}}}],["service/src/infrastructure/typeorm/leaderboard.dao.ts:15",{"_index":538,"title":{},"body":{"entities/LeaderboardDao.html":{}}}],["service/src/infrastructure/typeorm/leaderboard.dao.ts:18",{"_index":533,"title":{},"body":{"entities/LeaderboardDao.html":{}}}],["service/src/infrastructure/typeorm/leaderboard.dao.ts:21",{"_index":535,"title":{},"body":{"entities/LeaderboardDao.html":{}}}],["service/src/infrastructure/typeorm/leaderboard.dao.ts:24",{"_index":540,"title":{},"body":{"entities/LeaderboardDao.html":{}}}],["service/src/infrastructure/typeorm/leaderboard.dao.ts:27",{"_index":534,"title":{},"body":{"entities/LeaderboardDao.html":{}}}],["service/src/infrastructure/typeorm/leaderboard.dao.ts:30",{"_index":539,"title":{},"body":{"entities/LeaderboardDao.html":{}}}],["service/src/infrastructure/typeorm/leaderboard.dao.ts:9",{"_index":536,"title":{},"body":{"entities/LeaderboardDao.html":{}}}],["service/src/main.ts",{"_index":693,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["service/src/nest",{"_index":694,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service/src/ormconfig.ts",{"_index":695,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service/src/player.controller.ts",{"_index":577,"title":{},"body":{"controllers/PlayerController.html":{},"coverage.html":{}}}],["service/src/player.controller.ts:13",{"_index":581,"title":{},"body":{"controllers/PlayerController.html":{}}}],["service/src/player.controller.ts:18",{"_index":579,"title":{},"body":{"controllers/PlayerController.html":{}}}],["service/src/player.module.ts",{"_index":611,"title":{},"body":{"modules/PlayerModule.html":{}}}],["service/src/player.service.ts",{"_index":619,"title":{},"body":{"injectables/PlayerService.html":{},"coverage.html":{}}}],["service/src/player.service.ts:12",{"_index":625,"title":{},"body":{"injectables/PlayerService.html":{}}}],["service/src/player.service.ts:16",{"_index":624,"title":{},"body":{"injectables/PlayerService.html":{}}}],["service/src/player.service.ts:6",{"_index":621,"title":{},"body":{"injectables/PlayerService.html":{}}}],["services",{"_index":55,"title":{},"body":{"modules/ApiGatewayModule.html":{},"injectables/BattlesService.html":{},"injectables/PlayersService.html":{}}}],["services.ts",{"_index":745,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["set",{"_index":330,"title":{},"body":{"modules/BattleServiceModule.html":{},"classes/CreateBattleDto.html":{}}}],["setup",{"_index":782,"title":{},"body":{"index.html":{}}}],["shared.service",{"_index":670,"title":{},"body":{"modules/SharedModule.html":{}}}],["sharedmodule",{"_index":41,"title":{"modules/SharedModule.html":{}},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/PlayerModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedservice",{"_index":668,"title":{"injectables/SharedService.html":{}},"body":{"modules/SharedModule.html":{},"injectables/SharedService.html":{},"coverage.html":{},"overview.html":{}}}],["side",{"_index":776,"title":{},"body":{"index.html":{}}}],["silver",{"_index":463,"title":{},"body":{"classes/CreatePlayerDto.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/Player.html":{},"entities/PlayerDao.html":{}}}],["simulate",{"_index":172,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["simulatebattle",{"_index":160,"title":{},"body":{"classes/BattleEngine.html":{}}}],["simulatebattle(player1",{"_index":162,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["simulation",{"_index":195,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"injectables/ApiGatewayService.html":{},"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"modules/EnvModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/NestApplicationValidationPipe.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"injectables/PlayersService.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"index.html":{}}}],["sponsors",{"_index":861,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":787,"title":{},"body":{"index.html":{}}}],["started",{"_index":752,"title":{"index.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["starter",{"_index":780,"title":{},"body":{"index.html":{}}}],["starts",{"_index":209,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["statements",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":89,"title":{},"body":{"classes/Battle.html":{},"classes/Leaderboard.html":{},"classes/Player.html":{}}}],["status",{"_index":114,"title":{},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/CreateBattleDto.html":{}}}],["stay",{"_index":845,"title":{},"body":{"index.html":{}}}],["store",{"_index":110,"title":{},"body":{"classes/Battle.html":{}}}],["string",{"_index":93,"title":{},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"controllers/BattleWorkerServiceController.html":{},"injectables/BattleWorkerServiceService.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"injectables/PlayerService.html":{}}}],["stripunknown",{"_index":503,"title":{},"body":{"modules/EnvModule.html":{}}}],["successfully",{"_index":400,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["summary",{"_index":422,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["super",{"_index":549,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["support",{"_index":819,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":878,"title":{},"body":{"modules.html":{}}}],["symbol('battlerepository",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol('playersrepository",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":148,"title":{},"body":{"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":702,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":17,"title":{},"body":{"controllers/ApiGatewayController.html":{},"controllers/BattlesController.html":{},"controllers/PlayersController.html":{},"miscellaneous/enumerations.html":{}}}],["test",{"_index":791,"title":{},"body":{"index.html":{}}}],["test:covdocumentation",{"_index":794,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":793,"title":{},"body":{"index.html":{}}}],["tests",{"_index":789,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":860,"title":{},"body":{"index.html":{}}}],["this.battlerepository",{"_index":365,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{}}}],["this.battlerepository.create(battle",{"_index":350,"title":{},"body":{"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{}}}],["this.battleservice.create",{"_index":301,"title":{},"body":{"controllers/BattleServiceController.html":{}}}],["this.battleservice.gethello",{"_index":298,"title":{},"body":{"controllers/BattleServiceController.html":{}}}],["this.battlesservice.create(createbattledto",{"_index":425,"title":{},"body":{"controllers/BattlesController.html":{}}}],["this.battlesservice.hello",{"_index":423,"title":{},"body":{"controllers/BattlesController.html":{}}}],["this.battlesserviceclient.send",{"_index":441,"title":{},"body":{"injectables/BattlesService.html":{}}}],["this.battlesserviceclient.send(pattern",{"_index":439,"title":{},"body":{"injectables/BattlesService.html":{}}}],["this.battleworkerserviceservice.gethello",{"_index":380,"title":{},"body":{"controllers/BattleWorkerServiceController.html":{}}}],["this.client.emit(battlemessagepatternsname.create",{"_index":303,"title":{},"body":{"controllers/BattleServiceController.html":{}}}],["this.id",{"_index":458,"title":{},"body":{"classes/CreateBattleResponseDto.html":{}}}],["this.identifier",{"_index":485,"title":{},"body":{"classes/CreatePlayerResponseDto.html":{}}}],["this.playerrepository",{"_index":634,"title":{},"body":{"injectables/PlayerTypeOrmRepository.html":{}}}],["this.playerrepository.create(player",{"_index":627,"title":{},"body":{"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["this.playerservice.create",{"_index":590,"title":{},"body":{"controllers/PlayerController.html":{}}}],["this.playerservice.gethello",{"_index":589,"title":{},"body":{"controllers/PlayerController.html":{}}}],["this.playersservice.create(createplayerdto",{"_index":649,"title":{},"body":{"controllers/PlayersController.html":{}}}],["this.playersservice.hello",{"_index":647,"title":{},"body":{"controllers/PlayersController.html":{}}}],["this.playersserviceclient.send",{"_index":664,"title":{},"body":{"injectables/PlayersService.html":{}}}],["this.playersserviceclient.send(pattern",{"_index":662,"title":{},"body":{"injectables/PlayersService.html":{}}}],["this.simulatebattle(player1",{"_index":188,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["throw",{"_index":352,"title":{},"body":{"injectables/BattleServiceService.html":{},"controllers/BattlesController.html":{},"classes/NestApplicationValidationPipe.html":{},"injectables/PlayerService.html":{},"controllers/PlayersController.html":{}}}],["time",{"_index":839,"title":{},"body":{"index.html":{}}}],["timestamptz",{"_index":130,"title":{},"body":{"entities/BattleDao.html":{}}}],["touch",{"_index":868,"title":{},"body":{"index.html":{}}}],["transform",{"_index":558,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["transformer",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":48,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{}}}],["transport.rmq",{"_index":328,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["transport.tcp",{"_index":69,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["trim",{"_index":448,"title":{},"body":{"classes/CreateBattleDto.html":{},"classes/CreatePlayerDto.html":{}}}],["true",{"_index":74,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"controllers/BattlesController.html":{},"modules/EnvModule.html":{},"classes/NestApplicationValidationPipe.html":{},"entities/PlayerDao.html":{},"modules/PlayerModule.html":{},"controllers/PlayersController.html":{},"miscellaneous/variables.html":{}}}],["true})@apicreatedresponse({description",{"_index":399,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["try",{"_index":349,"title":{},"body":{"injectables/BattleServiceService.html":{},"controllers/BattlesController.html":{},"injectables/PlayerService.html":{},"controllers/PlayersController.html":{}}}],["tsconfig.json",{"_index":801,"title":{},"body":{"index.html":{}}}],["turn",{"_index":213,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["twitter",{"_index":874,"title":{},"body":{"index.html":{}}}],["two",{"_index":396,"title":{},"body":{"controllers/BattlesController.html":{}}}],["type",{"_index":98,"title":{},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":144,"title":{},"body":{"entities/BattleDao.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleTypeOrmRepository.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{},"injectables/PlayerTypeOrmRepository.html":{},"coverage.html":{},"dependencies.html":{}}}],["typeorm.repository",{"_index":616,"title":{},"body":{"modules/PlayerModule.html":{}}}],["typeorm.repository.ts",{"_index":628,"title":{},"body":{"injectables/PlayerTypeOrmRepository.html":{},"coverage.html":{}}}],["typeorm.repository.ts:15",{"_index":630,"title":{},"body":{"injectables/PlayerTypeOrmRepository.html":{}}}],["typeorm.repository.ts:9",{"_index":629,"title":{},"body":{"injectables/PlayerTypeOrmRepository.html":{}}}],["typeormmodule",{"_index":318,"title":{},"body":{"modules/BattleServiceModule.html":{},"modules/PlayerModule.html":{}}}],["typeormmodule.forfeature([battledao",{"_index":325,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["typeormmodule.forfeature([playerdao",{"_index":618,"title":{},"body":{"modules/PlayerModule.html":{}}}],["typeormmodule.forroot",{"_index":322,"title":{},"body":{"modules/BattleServiceModule.html":{},"modules/PlayerModule.html":{}}}],["typescript",{"_index":779,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":140,"title":{},"body":{"entities/BattleDao.html":{}}}],["unique",{"_index":606,"title":{},"body":{"entities/PlayerDao.html":{}}}],["unit",{"_index":790,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":888,"title":{},"body":{"properties.html":{}}}],["update",{"_index":261,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["updates",{"_index":847,"title":{},"body":{"index.html":{}}}],["url",{"_index":320,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["urls",{"_index":331,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["use",{"_index":551,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["useclass",{"_index":338,"title":{},"body":{"modules/BattleServiceModule.html":{},"modules/PlayerModule.html":{}}}],["used",{"_index":803,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":67,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["user",{"_index":510,"title":{},"body":{"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-3.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":262,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["username",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":840,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":133,"title":{},"body":{"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{}}}],["validation.pipe.ts",{"_index":546,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:3",{"_index":548,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["validationoptions",{"_index":499,"title":{},"body":{"modules/EnvModule.html":{}}}],["validationpipe",{"_index":547,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["validationschema",{"_index":498,"title":{},"body":{"modules/EnvModule.html":{}}}],["validator",{"_index":451,"title":{},"body":{"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"classes/NestApplicationValidationPipe.html":{},"dependencies.html":{}}}],["value",{"_index":225,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values(createdbattledao",{"_index":369,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{}}}],["values(createdplayerdao",{"_index":636,"title":{},"body":{"injectables/PlayerTypeOrmRepository.html":{}}}],["variable",{"_index":679,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":889,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":886,"title":{},"body":{"properties.html":{}}}],["video",{"_index":828,"title":{},"body":{"index.html":{}}}],["visit",{"_index":815,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":835,"title":{},"body":{"index.html":{}}}],["void",{"_index":377,"title":{},"body":{"controllers/BattleWorkerServiceController.html":{}}}],["warrior",{"_index":176,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["website",{"_index":872,"title":{},"body":{"index.html":{}}}],["whitelist",{"_index":556,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["winnerid",{"_index":169,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["wins",{"_index":259,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["worker",{"_index":155,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"interfaces/EnvironmentVariables-2.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["working",{"_index":814,"title":{},"body":{"index.html":{}}}],["world",{"_index":347,"title":{},"body":{"injectables/BattleServiceService.html":{},"injectables/BattleWorkerServiceService.html":{},"injectables/PlayerService.html":{}}}],["x",{"_index":849,"title":{},"body":{"index.html":{}}}],["yaml",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["you'd",{"_index":864,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":42,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/BattlesModule.html":{},"modules/PlayerModule.html":{},"modules/PlayersModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/ApiGatewayController.html":{"url":"controllers/ApiGatewayController.html","title":"controller - ApiGatewayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApiGatewayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/api-gateway.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ApiGatewayService } from './api-gateway.service';\nimport { Tags } from './core/constants/swagger/tags';\n\n@ApiTags(Tags.ROOT)\n@Controller()\nexport class ApiGatewayController {\n  constructor(private readonly apiGatewayService: ApiGatewayService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiGatewayModule.html":{"url":"modules/ApiGatewayModule.html","title":"module - ApiGatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiGatewayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApiGatewayModule\n\n\n\ncluster_ApiGatewayModule_imports\n\n\n\ncluster_ApiGatewayModule_providers\n\n\n\n\nBattlesModule\n\nBattlesModule\n\n\n\nApiGatewayModule\n\nApiGatewayModule\n\nApiGatewayModule -->\n\nBattlesModule->ApiGatewayModule\n\n\n\n\n\nEnvModule\n\nEnvModule\n\nApiGatewayModule -->\n\nEnvModule->ApiGatewayModule\n\n\n\n\n\nPlayersModule\n\nPlayersModule\n\nApiGatewayModule -->\n\nPlayersModule->ApiGatewayModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nApiGatewayModule -->\n\nSharedModule->ApiGatewayModule\n\n\n\n\n\nApiGatewayService\n\nApiGatewayService\n\nApiGatewayModule -->\n\nApiGatewayService->ApiGatewayModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api-gateway/src/api-gateway.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiGatewayService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ApiGatewayController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BattlesModule\n                        \n                        \n                            EnvModule\n                        \n                        \n                            PlayersModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ClientsModule, Transport } from '@nestjs/microservices';\nimport { Global, Module } from '@nestjs/common';\n\nimport { ApiGatewayController } from './api-gateway.controller';\nimport { ApiGatewayService } from './api-gateway.service';\nimport { BattlesModule } from './battles/battles.module';\nimport { ClientServices } from '@app/shared/core/constants/client-services';\nimport { ConfigService } from '@nestjs/config';\nimport { EnvModule } from './config/env.module';\nimport { EnvironmentVariables } from './config/env.variables';\nimport { PlayersModule } from './players/players.module';\nimport { SharedModule } from '@app/shared';\n\n@Global()\n@Module({\n  imports: [\n    EnvModule,\n    ClientsModule.registerAsync([\n      {\n        name: ClientServices.PLAYERS_SERVICE,\n        inject: [ConfigService],\n        useFactory: async (\n          configService: ConfigService,\n        ) => ({\n          transport: Transport.TCP,\n          options: {\n            host: configService.get('player.host', { infer: true }),\n            port: configService.get('player.port', { infer: true }),\n          },\n        }),\n      },\n      {\n        name: ClientServices.BATTLES_SERVICE,\n        inject: [ConfigService],\n        useFactory: async (\n          configService: ConfigService,\n        ) => ({\n          transport: Transport.TCP,\n          options: {\n            host: configService.get('battle.host', { infer: true }),\n            port: configService.get('battle.port', { infer: true }),\n          },\n        }),\n      }\n    ]),\n    SharedModule,\n    PlayersModule,\n    BattlesModule\n  ],\n  controllers: [ApiGatewayController],\n  providers: [ApiGatewayService],\n  exports: [ClientsModule],\n})\nexport class ApiGatewayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiGatewayService.html":{"url":"injectables/ApiGatewayService.html","title":"injectable - ApiGatewayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiGatewayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/api-gateway.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ApiGatewayService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Battle.html":{"url":"classes/Battle.html","title":"class - Battle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Battle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/battle-service/src/entities/battle.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromDao\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(player1: string, player2: string)\n                    \n                \n                        \n                            \n                                Defined in apps/battle-service/src/entities/battle.entity.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        player1\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        player2\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromDao\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromDao(battleDao: BattleDao)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/battle-service/src/entities/battle.entity.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                battleDao\n                                            \n                                                            BattleDao\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Battle\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BattleDao } from '../infrastructure/typeorm/battle.dao';\nimport { BattleStatusTypes } from '@app/shared/core/types/settings';\n\nexport class Battle {\n  constructor(\n    readonly player1: string,\n    readonly player2: string,\n    //readonly date: Date, //No need to store the date in the entity, as it will be generated by the database\n    //readonly status: BattleStatusTypes, //ENUM BattleStatus\n  ) {}\n\n  \n  static fromDao(battleDao: BattleDao): Battle {\n    const battle = new Battle(\n        battleDao.player1,\n        battleDao.player2,\n        //battleDao.date,\n        //battleDao.status,\n    );\n\n    return battle;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/BattleDao.html":{"url":"entities/BattleDao.html","title":"entity - BattleDao","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  BattleDao\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/battle-service/src/infrastructure/typeorm/battle.dao.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                date\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                player1\n                            \n                            \n                                    \n                                    \n                                player2\n                            \n                            \n                                    \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamptz'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/battle-service/src/infrastructure/typeorm/battle.dao.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn({type: 'uuid', generated: 'uuid'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/battle-service/src/infrastructure/typeorm/battle.dao.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        player1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/battle-service/src/infrastructure/typeorm/battle.dao.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        player2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/battle-service/src/infrastructure/typeorm/battle.dao.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BattleStatusTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: BattleStatusTypes, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/battle-service/src/infrastructure/typeorm/battle.dao.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, PrimaryColumn } from 'typeorm';\n\nimport { Battle } from '../../entities/battle.entity';\nimport { BattleStatusTypes } from '@app/shared/core/types/settings';\nimport { DbTablesNames } from 'apps/battle-service/src/core/constants/db-table-names';\n\n@Entity(DbTablesNames.BATTLE)\nexport class BattleDao extends Battle {\n  @PrimaryColumn({ type: 'uuid', generated: 'uuid' })\n  id: string;\n\n  @Column()\n  declare player1: string;\n\n  @Column()\n  declare player2: string;\n\n  @CreateDateColumn({ type: 'timestamptz' })\n  declare date: Date;\n\n  @Column({type: 'enum', enum: BattleStatusTypes, default: BattleStatusTypes.PENDING})\n  declare status: BattleStatusTypes;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BattleEngine.html":{"url":"classes/BattleEngine.html","title":"class - BattleEngine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BattleEngine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/battle-worker-service/src/battle-engine/battle-engine.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                simulateBattle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/battle-worker-service/src/battle-engine/battle-engine.ts:9\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        simulateBattle\n                        \n                    \n                \n            \n            \n                \n                        \n                    simulateBattle(player1: Player, player2: Player)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/battle-worker-service/src/battle-engine/battle-engine.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                player1\n                                            \n                                                            Player\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                player2\n                                            \n                                                            Player\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Player } from \"../entities/player.entity\";\n\ninterface BattleResult {\n    winnerId: string;\n    loserId: string;\n    log: string[];\n}\n\nclass BattleEngine {\n\n    constructor() {\n        //Simulate some players\n        const player1 = new Player('1', 'Player1', 'A brave warrior', 100, 50, 20, 10, 100);\n        const player2 = new Player('2', 'Player2', 'A cunning rogue', 80, 60, 15, 12, 80);\n        // Simulate a battle\n        this.simulateBattle(player1, player2).then(result => {\n            console.log('Battle Result:', result);\n        }).catch(error => {\n            console.error('Error during battle simulation:', error);\n        });\n    }\n\n    public async simulateBattle(player1: Player, player2: Player): Promise {\n        const log: string[] = [];\n        // Create mutable copies of players for battle simulation\n        let combatant1 = { ...player1, currentHealth: player1.hitPoints, baseAttack: player1.attack };\n        let combatant2 = { ...player2, currentHealth: player2.hitPoints, baseAttack: player2.attack };\n        \n        log.push(`Battle starts between ${combatant1.username} and ${combatant2.username}!`);\n    \n        let turn = 1;\n        while (combatant1.currentHealth > 0 && combatant2.currentHealth > 0) {\n            log.push(`--- Turn ${turn} ---`);\n\n            // Attacker and Defender for the current turn\n            let attacker = turn % 2 !== 0 ? combatant1 : combatant2;\n            let defender = turn % 2 !== 0 ? combatant2 : combatant1;\n\n            // Calculate current attack value based on remaining health\n            const initialAttack = attacker.id === combatant1.id ? combatant1.baseAttack : combatant2.baseAttack;\n            const attackerHealth = attacker.id === combatant1.id ? combatant1.hitPoints : combatant2.hitPoints;\n            const healthPercentage = 1 - (attacker.currentHealth / attackerHealth);\n            const currentAttack = Math.max(initialAttack * 0.5, initialAttack * healthPercentage);\n\n            // Determine if the attack hits based on defender's defense\n            const hitChance = Math.max(0.1, 1 - (defender.defense / (currentAttack + defender.defense))); // Example hit chance calculation\n            const hit = Math.random()  0) {\n            winnerId = combatant1.id;\n            loserId = combatant2.id; // Corrected to check the other combatant\n            log.push(`${combatant1.username} wins!`);\n        } else {\n            winnerId = combatant2.id;\n            loserId = combatant1.id; // Corrected to check the other combatant\n            log.push(`${combatant2.username} wins!`);\n        }\n\n        //Update the user's resources\n        return { winnerId, loserId, log };\n    }\n}\n\nexport { BattleEngine, BattleResult };\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BattleResult.html":{"url":"interfaces/BattleResult.html","title":"interface - BattleResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BattleResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/battle-worker-service/src/battle-engine/battle-engine.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            log\n                                        \n                                \n                                \n                                        \n                                            loserId\n                                        \n                                \n                                \n                                        \n                                            winnerId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        log\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        log:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loserId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        winnerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        winnerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Player } from \"../entities/player.entity\";\n\ninterface BattleResult {\n    winnerId: string;\n    loserId: string;\n    log: string[];\n}\n\nclass BattleEngine {\n\n    constructor() {\n        //Simulate some players\n        const player1 = new Player('1', 'Player1', 'A brave warrior', 100, 50, 20, 10, 100);\n        const player2 = new Player('2', 'Player2', 'A cunning rogue', 80, 60, 15, 12, 80);\n        // Simulate a battle\n        this.simulateBattle(player1, player2).then(result => {\n            console.log('Battle Result:', result);\n        }).catch(error => {\n            console.error('Error during battle simulation:', error);\n        });\n    }\n\n    public async simulateBattle(player1: Player, player2: Player): Promise {\n        const log: string[] = [];\n        // Create mutable copies of players for battle simulation\n        let combatant1 = { ...player1, currentHealth: player1.hitPoints, baseAttack: player1.attack };\n        let combatant2 = { ...player2, currentHealth: player2.hitPoints, baseAttack: player2.attack };\n        \n        log.push(`Battle starts between ${combatant1.username} and ${combatant2.username}!`);\n    \n        let turn = 1;\n        while (combatant1.currentHealth > 0 && combatant2.currentHealth > 0) {\n            log.push(`--- Turn ${turn} ---`);\n\n            // Attacker and Defender for the current turn\n            let attacker = turn % 2 !== 0 ? combatant1 : combatant2;\n            let defender = turn % 2 !== 0 ? combatant2 : combatant1;\n\n            // Calculate current attack value based on remaining health\n            const initialAttack = attacker.id === combatant1.id ? combatant1.baseAttack : combatant2.baseAttack;\n            const attackerHealth = attacker.id === combatant1.id ? combatant1.hitPoints : combatant2.hitPoints;\n            const healthPercentage = 1 - (attacker.currentHealth / attackerHealth);\n            const currentAttack = Math.max(initialAttack * 0.5, initialAttack * healthPercentage);\n\n            // Determine if the attack hits based on defender's defense\n            const hitChance = Math.max(0.1, 1 - (defender.defense / (currentAttack + defender.defense))); // Example hit chance calculation\n            const hit = Math.random()  0) {\n            winnerId = combatant1.id;\n            loserId = combatant2.id; // Corrected to check the other combatant\n            log.push(`${combatant1.username} wins!`);\n        } else {\n            winnerId = combatant2.id;\n            loserId = combatant1.id; // Corrected to check the other combatant\n            log.push(`${combatant2.username} wins!`);\n        }\n\n        //Update the user's resources\n        return { winnerId, loserId, log };\n    }\n}\n\nexport { BattleEngine, BattleResult };\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BattleServiceController.html":{"url":"controllers/BattleServiceController.html","title":"controller - BattleServiceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BattleServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/battle-service/src/battle-service.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                battles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern(BattleMessagePatternsName.CREATE)\n                \n            \n\n                    \n                        \n                            Defined in apps/battle-service/src/battle-service.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern(BattleMessagePatternsName.HELLO)\n                \n            \n\n                    \n                        \n                            Defined in apps/battle-service/src/battle-service.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Inject } from '@nestjs/common';\nimport { BattleServiceService } from './battle-service.service';\nimport { BattleMessagePatternsName } from '@app/shared/battles/constants/battle-message-patterns-name';\nimport { CreateBattleResponseDto } from '@app/shared/battles/dto/create-battle-responde.dto';\nimport { CreateBattleDto } from '@app/shared/battles/dto/create-battle.dto';\nimport { ClientProxy, MessagePattern, Payload } from '@nestjs/microservices';\nimport { BrokerQueues } from '@app/shared/core/constants/broker/broker-queues';\n\n@Controller('battles')\nexport class BattleServiceController {\n  constructor(private readonly battleService: BattleServiceService,\n    @Inject(BrokerQueues.BATTLE_SERVICE_QUEUE) private readonly client: ClientProxy\n  ) {\n  }\n\n  @MessagePattern(BattleMessagePatternsName.HELLO)\n  getHello(): string {\n    return this.battleService.getHello();\n  }\n\n  @MessagePattern(BattleMessagePatternsName.CREATE)\n  async create(\n    @Payload() payload: { createBattleDto: CreateBattleDto },\n  ): Promise {\n    const identifier: string = await this.battleService.create(\n      payload.createBattleDto,\n    );\n    this.client.emit(BattleMessagePatternsName.CREATE, payload.createBattleDto);\n    console.log('createBattleDto', payload.createBattleDto);\n    return new CreateBattleResponseDto(identifier);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BattleServiceModule.html":{"url":"modules/BattleServiceModule.html","title":"module - BattleServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    BattleServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BattleServiceModule\n\n\n\ncluster_BattleServiceModule_imports\n\n\n\ncluster_BattleServiceModule_providers\n\n\n\n\nEnvModule\n\nEnvModule\n\n\n\nBattleServiceModule\n\nBattleServiceModule\n\nBattleServiceModule -->\n\nEnvModule->BattleServiceModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nBattleServiceModule -->\n\nSharedModule->BattleServiceModule\n\n\n\n\n\nBattleServiceService\n\nBattleServiceService\n\nBattleServiceModule -->\n\nBattleServiceService->BattleServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/battle-service/src/battle-service.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BattleServiceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BattleServiceController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EnvModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import * as ormconfig from './ormconfig';\n\nimport { ClientsModule, Transport } from '@nestjs/microservices';\n\nimport { BattleDao } from './infrastructure/typeorm/battle.dao';\nimport { BattleRepository } from './application/battles.repository';\nimport { BattleServiceController } from './battle-service.controller';\nimport { BattleServiceService } from './battle-service.service';\nimport { BattleTypeOrmRepository } from './infrastructure/typeorm/battle-typeorm-options';\nimport { BrokerQueues } from '@app/shared/core/constants/broker/broker-queues';\nimport { EnvModule } from 'apps/battle-service/src/config/env.module';\nimport { Module } from '@nestjs/common';\nimport { SharedModule } from '@app/shared';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n//URL `'amqp://${process.env.RABBITMQ_USER}:${process.env.RABBITMQ_PASSWORD}@${process.env.RABBITMQ_HOST}:${process.env.RABBITMQ_PORT}'`\n@Module({\n  imports: [\n    EnvModule,\n    TypeOrmModule.forRoot({\n      ...ormconfig.default.options,\n      autoLoadEntities: true,\n    }),\n    TypeOrmModule.forFeature([BattleDao]),\n    SharedModule,\n    ClientsModule.register([\n      {\n        name: BrokerQueues.BATTLE_SERVICE_QUEUE,\n        transport: Transport.RMQ, // Explicitly set to Transport.RMQ\n        options: {\n          urls: ['amqp://admin:admin@localhost:5672'],\n          queue: BrokerQueues.BATTLE_QUEUE_NAME,\n          queueOptions: {\n            durable: true,\n          },\n        },\n      },\n    ]), // 1 = Transport.RMQ\n  ],\n  controllers: [ BattleServiceController],\n  providers: [\n    BattleServiceService,\n    { provide: BattleRepository, useClass: BattleTypeOrmRepository },\n  ],\n})\nexport class BattleServiceModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BattleServiceService.html":{"url":"injectables/BattleServiceService.html","title":"injectable - BattleServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BattleServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/battle-service/src/battle-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(battleRepository: BattleRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/battle-service/src/battle-service.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        battleRepository\n                                                  \n                                                        \n                                                                        BattleRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(battle: Battle)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/battle-service/src/battle-service.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                battle\n                                            \n                                                            Battle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/battle-service/src/battle-service.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { Battle } from './entities/battle.entity';\nimport { BattleRepository } from './application/battles.repository';\n\n@Injectable()\nexport class BattleServiceService {\n\n  constructor(\n    @Inject(BattleRepository)\n    private readonly battleRepository: BattleRepository,\n  ) {}\n  getHello(): string {\n    return 'Hello World from Battle Service!';\n  }\n   async create(battle: Battle): Promise {\n      try {\n        return await this.battleRepository.create(battle);\n      } catch (error) {\n        throw new Error(error);\n      }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BattleTypeOrmRepository.html":{"url":"injectables/BattleTypeOrmRepository.html","title":"injectable - BattleTypeOrmRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BattleTypeOrmRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/battle-service/src/infrastructure/typeorm/battle-typeorm-options.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(battleRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/battle-service/src/infrastructure/typeorm/battle-typeorm-options.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        battleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(battle: Battle)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/battle-service/src/infrastructure/typeorm/battle-typeorm-options.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                battle\n                                            \n                                                            Battle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { InsertResult, Repository } from 'typeorm';\nimport { BattleRepository } from '../../application/battles.repository';\nimport { BattleDao } from './battle.dao';\nimport { Battle } from '../../entities/battle.entity';\n\n@Injectable()\nexport class BattleTypeOrmRepository implements BattleRepository {\n  constructor(\n    @InjectRepository(BattleDao)\n    private readonly battleRepository: Repository,\n  ) {}\n\n  async create(battle: Battle): Promise {\n    const createdBattleDao: BattleDao =\n      await this.battleRepository.create(battle);\n\n    const insertResult: InsertResult = await this.battleRepository\n      .createQueryBuilder()\n      .insert()\n      .into(BattleDao)\n      .values(createdBattleDao)\n      .execute();\n\n    return insertResult.identifiers[0].id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BattleWorkerServiceController.html":{"url":"controllers/BattleWorkerServiceController.html","title":"controller - BattleWorkerServiceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BattleWorkerServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/battle-worker-service/src/battle-worker-service.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                            \n                                    \n                                handleCreateBattle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/battle-worker-service/src/battle-worker-service.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleCreateBattle\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleCreateBattle(data: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern(BattleMessagePatternsName.CREATE)\n                \n            \n\n                    \n                        \n                            Defined in apps/battle-worker-service/src/battle-worker-service.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { BattleWorkerServiceService } from './battle-worker-service.service';\nimport { MessagePattern, Payload } from '@nestjs/microservices';\nimport { BattleMessagePatternsName } from '@app/shared/battles/constants/battle-message-patterns-name';\nimport { BattleEngine } from './battle-engine/battle-engine';\n\n@Controller()\nexport class BattleWorkerServiceController {\n  constructor(private readonly battleWorkerServiceService: BattleWorkerServiceService) {}\n\n  @Get()\n  getHello(): string {\n    return this.battleWorkerServiceService.getHello();\n  }\n\n  @MessagePattern(BattleMessagePatternsName.CREATE)\n  handleCreateBattle(@Payload() data: any){\n    console.log('Received data from queue:', data);\n    const battleSimulation = new BattleEngine();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BattleWorkerServiceModule.html":{"url":"modules/BattleWorkerServiceModule.html","title":"module - BattleWorkerServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    BattleWorkerServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BattleWorkerServiceModule\n\n\n\ncluster_BattleWorkerServiceModule_imports\n\n\n\ncluster_BattleWorkerServiceModule_providers\n\n\n\n\nEnvModule\n\nEnvModule\n\n\n\nBattleWorkerServiceModule\n\nBattleWorkerServiceModule\n\nBattleWorkerServiceModule -->\n\nEnvModule->BattleWorkerServiceModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nBattleWorkerServiceModule -->\n\nSharedModule->BattleWorkerServiceModule\n\n\n\n\n\nBattleWorkerServiceService\n\nBattleWorkerServiceService\n\nBattleWorkerServiceModule -->\n\nBattleWorkerServiceService->BattleWorkerServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/battle-worker-service/src/battle-worker-service.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BattleWorkerServiceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BattleWorkerServiceController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EnvModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BattleWorkerServiceController } from './battle-worker-service.controller';\nimport { BattleWorkerServiceService } from './battle-worker-service.service';\nimport { EnvModule } from './config/env.module';\nimport { Module } from '@nestjs/common';\nimport { SharedModule } from '@app/shared';\n\n@Module({\n  imports: [\n     SharedModule,\n     EnvModule\n  ],\n  controllers: [BattleWorkerServiceController],\n  providers: [BattleWorkerServiceService],\n})\nexport class BattleWorkerServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BattleWorkerServiceService.html":{"url":"injectables/BattleWorkerServiceService.html","title":"injectable - BattleWorkerServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BattleWorkerServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/battle-worker-service/src/battle-worker-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/battle-worker-service/src/battle-worker-service.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class BattleWorkerServiceService {\n  getHello(): string {\n    return 'Hello World from Battle Worker Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BattlesController.html":{"url":"controllers/BattlesController.html","title":"controller - BattlesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BattlesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/battles/battles.controlles.ts\n        \n\n            \n                Prefix\n            \n            \n                battles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createBattleDto: CreateBattleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a new battle', description: 'This endpoint creates a new battle between two players.'})@ApiBody({type: CreateBattleDto, required: true})@ApiCreatedResponse({description: 'The player has been successfully created.', type: CreateBattleResponseDto})@ApiInternalServerErrorResponse({description: 'Internal server error'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/battles/battles.controlles.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createBattleDto\n                                            \n                                                            CreateBattleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get Hello from Player Service', description: 'This endpoint returns a hello message from the player service.'})@Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/battles/battles.controlles.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post } from '@nestjs/common';\nimport {\n  ApiBody,\n  ApiCreatedResponse,\n  ApiInternalServerErrorResponse,\n  ApiOperation,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { CreateBattleResponseDto } from '@app/shared/battles/dto/create-battle-responde.dto';\nimport { sanitize } from 'class-sanitizer';\nimport { Observable } from 'rxjs';\nimport { Tags } from '../core/constants/swagger/tags';\nimport { BattlesService } from './battles.service';\nimport { CreateBattleDto } from '@app/shared/battles/dto/create-battle.dto';\n\n\n@ApiTags(Tags.BATTLES)\n@Controller('battles')\nexport class BattlesController {\n  constructor(private readonly battlesService: BattlesService) {}\n\n  @ApiOperation({\n    summary: 'Get Hello from Player Service',\n    description:\n      'This endpoint returns a hello message from the player service.',\n  })\n  @Get()\n  getHello(): Observable {\n    return this.battlesService.hello();\n  }\n\n  @ApiOperation({\n    summary: 'Create a new battle',\n    description: 'This endpoint creates a new battle between two players.',\n  })\n  @ApiBody({\n    type: CreateBattleDto,\n    required: true,\n  })\n  @ApiCreatedResponse({\n    description: 'The player has been successfully created.',\n    type: CreateBattleResponseDto,\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'Internal server error',\n  })\n  @Post()\n  create(\n    @Body() createBattleDto: CreateBattleDto,\n  ): Observable {\n    try {\n      sanitize(createBattleDto);\n\n      return this.battlesService.create(createBattleDto);\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BattlesModule.html":{"url":"modules/BattlesModule.html","title":"module - BattlesModule","body":"\n                   \n\n\n\n\n    Modules\n    BattlesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BattlesModule\n\n\n\ncluster_BattlesModule_providers\n\n\n\n\nBattlesService\n\nBattlesService\n\n\n\nBattlesModule\n\nBattlesModule\n\nBattlesModule -->\n\nBattlesService->BattlesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api-gateway/src/battles/battles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BattlesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BattlesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BattlesController } from './battles.controlles';\nimport { BattlesService } from './battles.service';\nimport { Module } from '@nestjs/common';\n\n@Module({\n  providers: [BattlesService],\n  controllers: [BattlesController],\n})\nexport class BattlesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BattlesService.html":{"url":"injectables/BattlesService.html","title":"injectable - BattlesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BattlesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/battles/battles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                hello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(battlesServiceClient: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/api-gateway/src/battles/battles.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        battlesServiceClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createBattleDto: CreateBattleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/battles/battles.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createBattleDto\n                                            \n                                                            CreateBattleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hello\n                        \n                    \n                \n            \n            \n                \nhello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/battles/battles.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BattleMessagePatternsName } from '@app/shared/battles/constants/battle-message-patterns-name';\nimport { CreateBattleResponseDto } from '@app/shared/battles/dto/create-battle-responde.dto';\nimport { CreateBattleDto } from '@app/shared/battles/dto/create-battle.dto';\nimport { ClientServices } from '@app/shared/core/constants/client-services';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class BattlesService {\n  constructor(\n    @Inject(ClientServices.BATTLES_SERVICE)\n    private readonly battlesServiceClient: ClientProxy,\n  ) {}\n\n  hello(): Observable {\n    const pattern = BattleMessagePatternsName.HELLO;\n    const payload = '';\n    return this.battlesServiceClient.send(pattern, payload);\n  }\n\n  create(\n    createBattleDto: CreateBattleDto,\n  ): Observable {\n    const pattern = BattleMessagePatternsName.CREATE;\n    const payload = { createBattleDto };\n    return this.battlesServiceClient.send(\n      pattern,\n      payload,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBattleDto.html":{"url":"classes/CreateBattleDto.html","title":"class - CreateBattleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBattleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/battles/dto/create-battle.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                player1\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                player2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        player1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Escape()@Trim()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/battles/dto/create-battle.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        player2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Escape()@Trim()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/battles/dto/create-battle.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Escape, Trim } from 'class-sanitizer';\nimport {\n  IsNotEmpty,\n  IsString,\n} from 'class-validator';\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { BattleStatusTypes } from '@app/shared/core/types/settings';\n\nexport class CreateBattleDto {\n  // @ApiProperty()\n  // @Escape()\n  // @Trim()\n  // @IsString()\n  // @IsNotEmpty()\n  // id: string;\n\n  @ApiProperty()\n  @Escape()\n  @Trim()\n  @IsString()\n  @IsNotEmpty()\n  player1: string;\n\n  @ApiProperty()\n  @Escape()\n  @Trim()\n  @IsString()\n  @IsNotEmpty()\n  player2: string;\n\n  /*\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  status: BattleStatusTypes;*/ //Will be set as PENDING by default in the database\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBattleResponseDto.html":{"url":"classes/CreateBattleResponseDto.html","title":"class - CreateBattleResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBattleResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/battles/dto/create-battle-responde.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in libs/shared/src/battles/dto/create-battle-responde.dto.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/battles/dto/create-battle-responde.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateBattleResponseDto {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  readonly id: string;\n\n  constructor(id: string) {\n    this.id = id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePlayerDto.html":{"url":"classes/CreatePlayerDto.html","title":"class - CreatePlayerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePlayerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/players/dto/create-player.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                attack\n                            \n                            \n                                    \n                                    \n                                    \n                                defense\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                gold\n                            \n                            \n                                    \n                                    \n                                    \n                                hit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                silver\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        attack\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/players/dto/create-player.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        defense\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/players/dto/create-player.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Escape()@MaxLength(PlayerSettings.DESCRIPTION_LENGTH)@Trim()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/players/dto/create-player.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        gold\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@Max(1000000000)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/players/dto/create-player.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        hit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/players/dto/create-player.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Escape()@MaxLength(PlayerSettings.NAME_LENGTH)@Trim()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/players/dto/create-player.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        silver\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@Max(1000000000)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/players/dto/create-player.dto.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Escape, Trim } from 'class-sanitizer';\nimport {\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n  Max,\n  MaxLength,\n} from 'class-validator';\n\nimport { PlayerSettings } from '@app/shared/core/types/settings';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreatePlayerDto {\n  @ApiProperty()\n  @Escape()\n  @MaxLength(PlayerSettings.NAME_LENGTH)\n  @Trim()\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty()\n  @Escape()\n  @MaxLength(PlayerSettings.DESCRIPTION_LENGTH)\n  @Trim()\n  @IsString()\n  @IsNotEmpty()\n  description: string;\n\n  @ApiProperty()\n  @IsNumber()\n  @Max(1_000_000_000)\n  @IsNotEmpty()\n  gold: number;\n\n  @ApiProperty()\n  @IsNumber()\n  @Max(1_000_000_000)\n  @IsNotEmpty()\n  silver: number;\n\n  @ApiProperty()\n  @IsNumber()\n  @IsNotEmpty()\n  hit: number;\n\n  @ApiProperty()\n  @IsNumber()\n  @IsNotEmpty()\n  defense: number;\n\n  @ApiProperty()\n  @IsNumber()\n  @IsNotEmpty()\n  attack: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePlayerResponseDto.html":{"url":"classes/CreatePlayerResponseDto.html","title":"class - CreatePlayerResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePlayerResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/players/dto/create-player-responde.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                identifier\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(identifier: string)\n                    \n                \n                        \n                            \n                                Defined in libs/shared/src/players/dto/create-player-responde.dto.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        identifier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/players/dto/create-player-responde.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreatePlayerResponseDto {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  readonly identifier: string;\n\n  constructor(identifier: string) {\n    this.identifier = identifier;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EnvModule.html":{"url":"modules/EnvModule.html","title":"module - EnvModule","body":"\n                   \n\n\n\n\n    Modules\n    EnvModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api-gateway/src/config/env.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { configuration } from './configuration';\nimport { envSchema } from './env.schema';\nimport { EnvironmentVariables } from './env.variables';\n\n@Global()\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [configuration],\n      isGlobal: true,\n      //* ignoreEnvFile: true,\n      envFilePath: [\n        `apps/api-gateway/src/environments/.env.${process.env.NODE_ENV}`,\n      ],\n      validationSchema: envSchema,\n      validationOptions: {\n        abortEarly: true,\n        allowUnknown: false,\n        stripUnknown: true,\n      },\n    }),\n  ],\n  providers: [ConfigService],\n})\nexport class EnvModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnvironmentVariables.html":{"url":"interfaces/EnvironmentVariables.html","title":"interface - EnvironmentVariables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EnvironmentVariables\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/config/env.variables.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            battle\n                                        \n                                \n                                \n                                        \n                                            environment\n                                        \n                                \n                                \n                                        \n                                            host\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            player\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                                \n                                        \n                                            schema\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        battle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        battle:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        environment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        player\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        player:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schema\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schema:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EnvironmentVariables {\n  environment: string;\n  name: string;\n  schema: string;\n  host: string;\n  port: number;\n  player: {\n    host: string;\n    port: number;\n  };\n  battle: {\n    host: string;\n    port: number;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnvironmentVariables-1.html":{"url":"interfaces/EnvironmentVariables-1.html","title":"interface - EnvironmentVariables-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EnvironmentVariables\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/battle-service/src/config/env.variables.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            battle\n                                        \n                                \n                                \n                                        \n                                            database\n                                        \n                                \n                                \n                                        \n                                            environment\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                                \n                                        \n                                            rabbitmq\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        battle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        battle:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        database:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        environment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rabbitmq\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rabbitmq:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EnvironmentVariables {\n  environment: string;\n  name: string;\n  port: number;\n  battle: {\n    host: string;\n    port: number;\n  };\n  database: {\n    host: string;\n    port: number;\n    db: string;\n    user: string;\n    password: string;\n  };\n  rabbitmq: {\n    host: string;\n    port: number;\n    user: string;\n    password: string;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnvironmentVariables-2.html":{"url":"interfaces/EnvironmentVariables-2.html","title":"interface - EnvironmentVariables-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EnvironmentVariables\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/battle-worker-service/src/config/env.variables.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            battleworker\n                                        \n                                \n                                \n                                        \n                                            environment\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        battleworker\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        battleworker:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        environment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EnvironmentVariables {\n  environment: string;\n  name: string;\n  port: number;\n  battleworker: {\n    host: string;\n    port: number;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnvironmentVariables-3.html":{"url":"interfaces/EnvironmentVariables-3.html","title":"interface - EnvironmentVariables-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EnvironmentVariables\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/player-service/src/config/env.variables.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            database\n                                        \n                                \n                                \n                                        \n                                            environment\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            player\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        database:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        environment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        player\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        player:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EnvironmentVariables {\n  environment: string;\n  name: string;\n  port: number;\n  player: {\n    host: string;\n    port: number;\n  };\n\n  database: {\n    host: string;\n    port: number;\n    db: string;\n    user: string;\n    password: string;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Leaderboard.html":{"url":"classes/Leaderboard.html","title":"class - Leaderboard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Leaderboard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/battle-service/src/entities/leaderboard.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromDao\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(identifier: string, name: string, description: string, gold: number, silver: number, games: number, rank: number)\n                    \n                \n                        \n                            \n                                Defined in apps/battle-service/src/entities/leaderboard.entity.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gold\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        silver\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        games\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rank\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromDao\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromDao(leaderboardDao: LeaderboardDao)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/battle-service/src/entities/leaderboard.entity.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                leaderboardDao\n                                            \n                                                            LeaderboardDao\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Leaderboard\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LeaderboardDao } from '../infrastructure/typeorm/leaderboard.dao';\n\nexport class Leaderboard {\n  constructor(\n    readonly identifier: string,\n    readonly name: string,\n    readonly description: string, \n    readonly gold: number, \n    readonly silver: number,\n    readonly games: number,\n    readonly rank: number,\n    //readonly playerStatus\n  ) {}\n\n  \n  static fromDao(leaderboardDao: LeaderboardDao): Leaderboard {\n    const leaderboard = new Leaderboard(\n      leaderboardDao.identifier,\n      leaderboardDao.name,\n      leaderboardDao.description,\n      leaderboardDao.gold,\n      leaderboardDao.silver, \n      leaderboardDao.games,\n      leaderboardDao.rank,\n    );\n    return leaderboard;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/LeaderboardDao.html":{"url":"entities/LeaderboardDao.html","title":"entity - LeaderboardDao","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  LeaderboardDao\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/battle-service/src/infrastructure/typeorm/leaderboard.dao.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                games\n                            \n                            \n                                    \n                                    \n                                gold\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                identifier\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                rank\n                            \n                            \n                                    \n                                    \n                                silver\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/battle-service/src/infrastructure/typeorm/leaderboard.dao.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        games\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/battle-service/src/infrastructure/typeorm/leaderboard.dao.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        gold\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/battle-service/src/infrastructure/typeorm/leaderboard.dao.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn({type: 'uuid', generated: 'uuid'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/battle-service/src/infrastructure/typeorm/leaderboard.dao.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        identifier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/battle-service/src/infrastructure/typeorm/leaderboard.dao.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/battle-service/src/infrastructure/typeorm/leaderboard.dao.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        rank\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/battle-service/src/infrastructure/typeorm/leaderboard.dao.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        silver\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/battle-service/src/infrastructure/typeorm/leaderboard.dao.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, PrimaryColumn } from 'typeorm';\n\nimport { DbTablesNames } from 'apps/battle-service/src/core/constants/db-table-names';\nimport { Leaderboard } from '../../entities/leaderboard.entity';\n\n@Entity(DbTablesNames.LEADERBOARD)\nexport class LeaderboardDao extends Leaderboard {\n  @PrimaryColumn({ type: 'uuid', generated: 'uuid' })\n  id: string;\n\n  @Column()\n  declare identifier: string;\n\n  @Column()\n  declare name: string;\n\n  @Column()\n  declare description: string;\n\n  @Column()\n  declare gold: number;\n\n  @Column()\n  declare silver: number;\n\n  @Column()\n  declare games: number;\n\n  @Column()\n  declare rank: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NestApplicationValidationPipe.html":{"url":"classes/NestApplicationValidationPipe.html","title":"class - NestApplicationValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NestApplicationValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/core/pipes/nest-application-validation.pipe.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in libs/shared/src/core/pipes/nest-application-validation.pipe.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationPipe } from '@nestjs/common';\n\nexport class NestApplicationValidationPipe extends ValidationPipe {\n  public constructor() {\n    super({\n      //* properties that don't use any validator decorator automatically removed and throw an exception\n      whitelist: true,\n      forbidNonWhitelisted: true,\n      //* transform payload objects to dto\n      transform: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Player.html":{"url":"classes/Player.html","title":"class - Player","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Player\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/player-service/src/entities/player.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromDao\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, description: string, gold: number, silver: number, hit: number, defense: number, attack: number)\n                    \n                \n                        \n                            \n                                Defined in apps/player-service/src/entities/player.entity.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gold\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        silver\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        defense\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        attack\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromDao\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromDao(playerDao: PlayerDao)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/player-service/src/entities/player.entity.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerDao\n                                            \n                                                            PlayerDao\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Player\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PlayerDao } from '../infrastructure/type-orm/player.dao';\n\nexport class Player {\n  constructor(\n    readonly name: string,\n    readonly description: string,\n    readonly gold: number,\n    readonly silver: number,\n    readonly hit: number,\n    readonly defense: number,\n    readonly attack: number,\n  ) {}\n\n  static fromDao(playerDao: PlayerDao): Player {\n    const player = new Player(\n      playerDao.name,\n      playerDao.description,\n      playerDao.gold,\n      playerDao.silver,\n      playerDao.hit,\n      playerDao.defense,\n      playerDao.attack,\n    );\n\n    return player;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PlayerController.html":{"url":"controllers/PlayerController.html","title":"controller - PlayerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PlayerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/player-service/src/player.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                players\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern(PlayerMessagePatternsName.CREATE)\n                \n            \n\n                    \n                        \n                            Defined in apps/player-service/src/player.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern(PlayerMessagePatternsName.HELLO)\n                \n            \n\n                    \n                        \n                            Defined in apps/player-service/src/player.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { PlayerMessagePatternsName } from '@app/shared/players/constants/player-message-patterns-name';\nimport { CreatePlayerResponseDto } from '@app/shared/players/dto/create-player-responde.dto';\nimport { CreatePlayerDto } from '@app/shared/players/dto/create-player.dto';\nimport { Controller } from '@nestjs/common';\nimport { MessagePattern, Payload } from '@nestjs/microservices';\nimport { PlayerService } from './player.service';\n\n@Controller('players')\nexport class PlayerController {\n  constructor(private readonly playerService: PlayerService) {}\n\n  @MessagePattern(PlayerMessagePatternsName.HELLO)\n  getHello(): string {\n    return this.playerService.getHello();\n  }\n\n  @MessagePattern(PlayerMessagePatternsName.CREATE)\n  async create(\n    @Payload() payload: { createPlayerDto: CreatePlayerDto },\n  ): Promise {\n    const identifier: string = await this.playerService.create(\n      payload.createPlayerDto,\n    );\n\n    return new CreatePlayerResponseDto(identifier);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/PlayerDao.html":{"url":"entities/PlayerDao.html","title":"entity - PlayerDao","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  PlayerDao\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/player-service/src/infrastructure/type-orm/player.dao.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                attack\n                            \n                            \n                                    \n                                    \n                                defense\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                gold\n                            \n                            \n                                    \n                                    \n                                hit\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                silver\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attack\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/player-service/src/infrastructure/type-orm/player.dao.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        defense\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/player-service/src/infrastructure/type-orm/player.dao.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/player-service/src/infrastructure/type-orm/player.dao.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        gold\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/player-service/src/infrastructure/type-orm/player.dao.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        hit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/player-service/src/infrastructure/type-orm/player.dao.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn({type: 'uuid', generated: 'uuid'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/player-service/src/infrastructure/type-orm/player.dao.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/player-service/src/infrastructure/type-orm/player.dao.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        silver\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/player-service/src/infrastructure/type-orm/player.dao.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryColumn } from 'typeorm';\n\nimport { DbTablesNames } from '../../core/constants/db-table-names';\nimport { Player } from '../../entities/player.entity';\n\n@Entity(DbTablesNames.PLAYER)\nexport class PlayerDao extends Player {\n  @PrimaryColumn({ type: 'uuid', generated: 'uuid' })\n  id: string;\n\n  @Column({ unique: true })\n  declare name: string;\n\n  @Column()\n  declare description: string;\n\n  @Column()\n  declare gold: number;\n\n  @Column()\n  declare silver: number;\n\n  @Column()\n  declare hit: number;\n\n  @Column()\n  declare defense: number;\n\n  @Column()\n  declare attack: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlayerModule.html":{"url":"modules/PlayerModule.html","title":"module - PlayerModule","body":"\n                   \n\n\n\n\n    Modules\n    PlayerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PlayerModule\n\n\n\ncluster_PlayerModule_imports\n\n\n\ncluster_PlayerModule_providers\n\n\n\n\nEnvModule\n\nEnvModule\n\n\n\nPlayerModule\n\nPlayerModule\n\nPlayerModule -->\n\nEnvModule->PlayerModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nPlayerModule -->\n\nSharedModule->PlayerModule\n\n\n\n\n\nPlayerService\n\nPlayerService\n\nPlayerModule -->\n\nPlayerService->PlayerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/player-service/src/player.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PlayerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PlayerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EnvModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import * as ormconfig from './ormconfig';\n\nimport { SharedModule } from '@app/shared';\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { EnvModule } from 'apps/player-service/src/config/env.module';\nimport { PlayersRepository } from './application/players.repository';\nimport { PlayerTypeOrmRepository } from './infrastructure/type-orm/player-typeorm.repository';\nimport { PlayerDao } from './infrastructure/type-orm/player.dao';\nimport { PlayerController } from './player.controller';\nimport { PlayerService } from './player.service';\n\n@Module({\n  imports: [\n    EnvModule,\n    TypeOrmModule.forRoot({\n      ...ormconfig.default.options,\n      autoLoadEntities: true,\n    }),\n    TypeOrmModule.forFeature([PlayerDao]),\n    SharedModule,\n  ],\n  controllers: [PlayerController],\n  providers: [\n    PlayerService,\n    { provide: PlayersRepository, useClass: PlayerTypeOrmRepository },\n  ],\n})\nexport class PlayerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/player-service/src/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(playerRepository: PlayersRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/player-service/src/player.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        playerRepository\n                                                  \n                                                        \n                                                                        PlayersRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(player: Player)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/player-service/src/player.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                player\n                                            \n                                                            Player\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/player-service/src/player.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { PlayersRepository } from './application/players.repository';\nimport { Player } from './entities/player.entity';\n\n@Injectable()\nexport class PlayerService {\n  constructor(\n    @Inject(PlayersRepository)\n    private readonly playerRepository: PlayersRepository,\n  ) {}\n\n  getHello(): string {\n    return 'Hello World from Player Service!';\n  }\n\n  async create(player: Player): Promise {\n    try {\n      return await this.playerRepository.create(player);\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerTypeOrmRepository.html":{"url":"injectables/PlayerTypeOrmRepository.html","title":"injectable - PlayerTypeOrmRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerTypeOrmRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/player-service/src/infrastructure/type-orm/player-typeorm.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(playerRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/player-service/src/infrastructure/type-orm/player-typeorm.repository.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        playerRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(player: Player)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/player-service/src/infrastructure/type-orm/player-typeorm.repository.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                player\n                                            \n                                                            Player\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { InsertResult, Repository } from 'typeorm';\nimport { PlayersRepository } from '../../application/players.repository';\nimport { Player } from '../../entities/player.entity';\nimport { PlayerDao } from './player.dao';\n\n@Injectable()\nexport class PlayerTypeOrmRepository implements PlayersRepository {\n  constructor(\n    @InjectRepository(PlayerDao)\n    private readonly playerRepository: Repository,\n  ) {}\n\n  async create(player: Player): Promise {\n    const createdPlayerDao: PlayerDao =\n      await this.playerRepository.create(player);\n\n    const insertResult: InsertResult = await this.playerRepository\n      .createQueryBuilder()\n      .insert()\n      .into(PlayerDao)\n      .values(createdPlayerDao)\n      .execute();\n\n    return insertResult.identifiers[0].id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PlayersController.html":{"url":"controllers/PlayersController.html","title":"controller - PlayersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PlayersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/players/players.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                players\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPlayerDto: CreatePlayerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a new player', description: 'This endpoint creates a new player.'})@ApiBody({type: CreatePlayerDto, required: true})@ApiCreatedResponse({description: 'The player has been successfully created.', type: CreatePlayerResponseDto})@ApiInternalServerErrorResponse({description: 'Internal server error'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/players/players.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPlayerDto\n                                            \n                                                            CreatePlayerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get Hello from Player Service', description: 'This endpoint returns a hello message from the player service.'})@Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/players/players.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post } from '@nestjs/common';\nimport {\n  ApiBody,\n  ApiCreatedResponse,\n  ApiInternalServerErrorResponse,\n  ApiOperation,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { CreatePlayerResponseDto } from '@app/shared/players/dto/create-player-responde.dto';\nimport { CreatePlayerDto } from '@app/shared/players/dto/create-player.dto';\nimport { sanitize } from 'class-sanitizer';\nimport { Observable } from 'rxjs';\nimport { Tags } from '../core/constants/swagger/tags';\nimport { PlayersService } from './players.service';\n\n@ApiTags(Tags.PLAYERS)\n@Controller('players')\nexport class PlayersController {\n  constructor(private readonly playersService: PlayersService) {}\n\n  @ApiOperation({\n    summary: 'Get Hello from Player Service',\n    description:\n      'This endpoint returns a hello message from the player service.',\n  })\n  @Get()\n  getHello(): Observable {\n    return this.playersService.hello();\n  }\n\n  @ApiOperation({\n    summary: 'Create a new player',\n    description: 'This endpoint creates a new player.',\n  })\n  @ApiBody({\n    type: CreatePlayerDto,\n    required: true,\n  })\n  @ApiCreatedResponse({\n    description: 'The player has been successfully created.',\n    type: CreatePlayerResponseDto,\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'Internal server error',\n  })\n  @Post()\n  create(\n    @Body() createPlayerDto: CreatePlayerDto,\n  ): Observable {\n    try {\n      sanitize(createPlayerDto);\n\n      return this.playersService.create(createPlayerDto);\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlayersModule.html":{"url":"modules/PlayersModule.html","title":"module - PlayersModule","body":"\n                   \n\n\n\n\n    Modules\n    PlayersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PlayersModule\n\n\n\ncluster_PlayersModule_providers\n\n\n\n\nPlayersService\n\nPlayersService\n\n\n\nPlayersModule\n\nPlayersModule\n\nPlayersModule -->\n\nPlayersService->PlayersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api-gateway/src/players/players.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PlayersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PlayersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PlayersController } from './players.controller';\nimport { PlayersService } from './players.service';\n\n@Module({\n  providers: [PlayersService],\n  controllers: [PlayersController],\n})\nexport class PlayersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayersService.html":{"url":"injectables/PlayersService.html","title":"injectable - PlayersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/players/players.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                hello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(playersServiceClient: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/api-gateway/src/players/players.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        playersServiceClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createPlayerDto: CreatePlayerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/players/players.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPlayerDto\n                                            \n                                                            CreatePlayerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hello\n                        \n                    \n                \n            \n            \n                \nhello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/players/players.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ClientServices } from '@app/shared/core/constants/client-services';\nimport { PlayerMessagePatternsName } from '@app/shared/players/constants/player-message-patterns-name';\nimport { CreatePlayerResponseDto } from '@app/shared/players/dto/create-player-responde.dto';\nimport { CreatePlayerDto } from '@app/shared/players/dto/create-player.dto';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class PlayersService {\n  constructor(\n    @Inject(ClientServices.PLAYERS_SERVICE)\n    private readonly playersServiceClient: ClientProxy,\n  ) {}\n\n  hello(): Observable {\n    const pattern = PlayerMessagePatternsName.HELLO;\n    const payload = '';\n    return this.playersServiceClient.send(pattern, payload);\n  }\n\n  create(\n    createPlayerDto: CreatePlayerDto,\n  ): Observable {\n    const pattern = PlayerMessagePatternsName.CREATE;\n    const payload = { createPlayerDto };\n    return this.playersServiceClient.send(\n      pattern,\n      payload,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nSharedService \n\nSharedService \n\n\n\nSharedModule\n\nSharedModule\n\nSharedService  -->\n\nSharedModule->SharedService \n\n\n\n\n\nSharedService\n\nSharedService\n\nSharedModule -->\n\nSharedService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/shared/src/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SharedService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SharedService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SharedService } from './shared.service';\n\n@Module({\n  providers: [SharedService],\n  exports: [SharedService],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SharedService.html":{"url":"injectables/SharedService.html","title":"injectable - SharedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SharedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/shared.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class SharedService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/api-gateway/src/api-gateway.controller.ts\n            \n            controller\n            ApiGatewayController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/api-gateway.service.ts\n            \n            injectable\n            ApiGatewayService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/battles/battles.controlles.ts\n            \n            controller\n            BattlesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/battles/battles.service.ts\n            \n            injectable\n            BattlesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        apps/api-gateway/src/config/configuration.ts\n            \n            variable\n            configuration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/api-gateway/src/config/env.schema.ts\n            \n            variable\n            envSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/config/env.variables.ts\n            \n            interface\n            EnvironmentVariables\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        apps/api-gateway/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/api-gateway/src/nest-application-options.ts\n            \n            variable\n            nestApplicationOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/players/players.controller.ts\n            \n            controller\n            PlayersController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/players/players.service.ts\n            \n            injectable\n            PlayersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        apps/api-gateway/src/security/nest-application-security.ts\n            \n            variable\n            nestApplicationSecurity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/battle-service/src/application/battles.repository.ts\n            \n            variable\n            BattleRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/battle-service/src/battle-service.controller.ts\n            \n            controller\n            BattleServiceController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/battle-service/src/battle-service.service.ts\n            \n            injectable\n            BattleServiceService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        apps/battle-service/src/config/configuration.ts\n            \n            variable\n            configuration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/battle-service/src/config/env.schema.ts\n            \n            variable\n            envSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/battle-service/src/config/env.variables.ts\n            \n            interface\n            EnvironmentVariables\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/battle-service/src/entities/battle.entity.ts\n            \n            class\n            Battle\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/battle-service/src/entities/leaderboard.entity.ts\n            \n            class\n            Leaderboard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/battle-service/src/infrastructure/typeorm/battle-typeorm-options.ts\n            \n            injectable\n            BattleTypeOrmRepository\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/battle-service/src/infrastructure/typeorm/battle.dao.ts\n            \n            entity\n            BattleDao\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/battle-service/src/infrastructure/typeorm/leaderboard.dao.ts\n            \n            entity\n            LeaderboardDao\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/battle-service/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/battle-service/src/nest-application-options.ts\n            \n            variable\n            nestApplicationOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/battle-service/src/ormconfig.ts\n            \n            variable\n            AppDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/battle-worker-service/src/battle-engine/battle-engine.ts\n            \n            class\n            BattleEngine\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/battle-worker-service/src/battle-engine/battle-engine.ts\n            \n            interface\n            BattleResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/battle-worker-service/src/battle-worker-service.controller.ts\n            \n            controller\n            BattleWorkerServiceController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/battle-worker-service/src/battle-worker-service.service.ts\n            \n            injectable\n            BattleWorkerServiceService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/battle-worker-service/src/config/configuration.ts\n            \n            variable\n            configuration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/battle-worker-service/src/config/env.schema.ts\n            \n            variable\n            envSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/battle-worker-service/src/config/env.variables.ts\n            \n            interface\n            EnvironmentVariables\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        apps/battle-worker-service/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/battle-worker-service/src/nest-application-options.ts\n            \n            variable\n            nestApplicationOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/player-service/src/application/players.repository.ts\n            \n            variable\n            PlayersRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/player-service/src/config/configuration.ts\n            \n            variable\n            configuration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/player-service/src/config/env.schema.ts\n            \n            variable\n            envSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/player-service/src/config/env.variables.ts\n            \n            interface\n            EnvironmentVariables\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/player-service/src/entities/player.entity.ts\n            \n            class\n            Player\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/player-service/src/infrastructure/type-orm/player-typeorm.repository.ts\n            \n            injectable\n            PlayerTypeOrmRepository\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/player-service/src/infrastructure/type-orm/player.dao.ts\n            \n            entity\n            PlayerDao\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/player-service/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/player-service/src/nest-application-options.ts\n            \n            variable\n            nestApplicationOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/player-service/src/ormconfig.ts\n            \n            variable\n            AppDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/player-service/src/player.controller.ts\n            \n            controller\n            PlayerController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/player-service/src/player.service.ts\n            \n            injectable\n            PlayerService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/shared/src/battles/dto/create-battle-responde.dto.ts\n            \n            class\n            CreateBattleResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/shared/src/battles/dto/create-battle.dto.ts\n            \n            class\n            CreateBattleDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/shared/src/core/pipes/nest-application-validation.pipe.ts\n            \n            class\n            NestApplicationValidationPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        libs/shared/src/core/types/settings.ts\n            \n            variable\n            PlayerSettings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/shared/src/players/dto/create-player-responde.dto.ts\n            \n            class\n            CreatePlayerResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/shared/src/players/dto/create-player.dto.ts\n            \n            class\n            CreatePlayerDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/shared/src/shared.service.ts\n            \n            injectable\n            SharedService\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/microservices : ^11.1.0\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : ^11.2.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            amqp-connection-manager : ^4.1.14\n        \n            amqplib : ^0.10.8\n        \n            class-sanitizer : ^1.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.2\n        \n            helmet : ^8.1.0\n        \n            joi : ^17.13.3\n        \n            js-yaml : ^4.1.0\n        \n            pg : ^8.16.0\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.23\n        \n            yaml : ^2.7.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BattleMessagePatternsName   (libs/.../battle-message-patterns-name.ts)\n                        \n                        \n                            BattleStatusTypes   (libs/.../settings.ts)\n                        \n                        \n                            BrokerQueues   (libs/.../broker-queues.ts)\n                        \n                        \n                            ClientServices   (libs/.../client-services.ts)\n                        \n                        \n                            DbTablesNames   (apps/.../db-table-names.ts)\n                        \n                        \n                            DbTablesNames   (apps/.../db-table-names.ts)\n                        \n                        \n                            PlayerMessagePatternsName   (libs/.../player-message-patterns-name.ts)\n                        \n                        \n                            Tags   (apps/.../tags.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/shared/src/battles/constants/battle-message-patterns-name.ts\n    \n        \n            \n                \n                    \n                        \n                        BattleMessagePatternsName\n                    \n                \n                        \n                            \n                                 HELLO\n                            \n                        \n                        \n                            \n                                Value : getHello\n                            \n                        \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                Value : createBattle\n                            \n                        \n            \n        \n\n    libs/shared/src/core/types/settings.ts\n    \n        \n            \n                \n                    \n                        \n                        BattleStatusTypes\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 STARTED\n                            \n                        \n                        \n                            \n                                Value : STARTED\n                            \n                        \n                        \n                            \n                                 FINISHED\n                            \n                        \n                        \n                            \n                                Value : FINISHED\n                            \n                        \n            \n        \n\n    libs/shared/src/core/constants/broker/broker-queues.ts\n    \n        \n            \n                \n                    \n                        \n                        BrokerQueues\n                    \n                \n                        \n                            \n                                 BATTLE_SERVICE_QUEUE\n                            \n                        \n                        \n                            \n                                Value : battle_service_queue\n                            \n                        \n                        \n                            \n                                 BATTLE_QUEUE_NAME\n                            \n                        \n                        \n                            \n                                Value : battle_queue\n                            \n                        \n            \n        \n\n    libs/shared/src/core/constants/client-services.ts\n    \n        \n            \n                \n                    \n                        \n                        ClientServices\n                    \n                \n                        \n                            \n                                 PLAYERS_SERVICE\n                            \n                        \n                        \n                            \n                                Value : PlayersService\n                            \n                        \n                        \n                            \n                                 BATTLES_SERVICE\n                            \n                        \n                        \n                            \n                                Value : BattlesService\n                            \n                        \n                        \n                            \n                                 BATTLE_WORKER_SERVICE\n                            \n                        \n                        \n                            \n                                Value : BattleWorkerService\n                            \n                        \n            \n        \n\n    apps/battle-service/src/core/constants/db-table-names.ts\n    \n        \n            \n                \n                    \n                        \n                        DbTablesNames\n                    \n                \n                        \n                            \n                                 BATTLE\n                            \n                        \n                        \n                            \n                                Value : battle\n                            \n                        \n                        \n                            \n                                 LEADERBOARD\n                            \n                        \n                        \n                            \n                                Value : leaderboard\n                            \n                        \n            \n        \n\n    apps/player-service/src/core/constants/db-table-names.ts\n    \n        \n            \n                \n                    \n                        \n                        DbTablesNames\n                    \n                \n                        \n                            \n                                 PLAYER\n                            \n                        \n                        \n                            \n                                Value : player\n                            \n                        \n            \n        \n\n    libs/shared/src/players/constants/player-message-patterns-name.ts\n    \n        \n            \n                \n                    \n                        \n                        PlayerMessagePatternsName\n                    \n                \n                        \n                            \n                                 HELLO\n                            \n                        \n                        \n                            \n                                Value : getHello\n                            \n                        \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                Value : createPlayer\n                            \n                        \n            \n        \n\n    apps/api-gateway/src/core/constants/swagger/tags.ts\n    \n        \n            \n                \n                    \n                        \n                        Tags\n                    \n                \n                        \n                            \n                                 ROOT\n                            \n                        \n                        \n                            \n                                Value : Root\n                            \n                        \n                        \n                            \n                                 PLAYERS\n                            \n                        \n                        \n                            \n                                Value : Players\n                            \n                        \n                        \n                            \n                                 BATTLES\n                            \n                        \n                        \n                            \n                                Value : Battles\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api-gateway/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/battle-service/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/battle-worker-service/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/player-service/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# API Gateway\n$ npm run start:dev\n\n#Player microservice\n$ npm run start:dev player-service\n\n#Battle microservice\n$ npm run start:dev battle-service\n\n#Battle Worker Service microservice\n$ npm run start:dev battle-worker-service\n\nRun tests (Not defined)\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDocumentation\nProject documentation generated by Compodoc (https://docs.nestjs.com/recipes/documentation).\nTo generate the documentation:\nExample :$ npx @compodoc/compodoc -p tsconfig.json -sDependencies and resources used on this project\n\nInfrastructure platform: Docker\nBackend Framework: NestJS\nDatabase: PostgreSQL\nMessage Broker: RabbitMQ\n\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiGatewayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BattleServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BattlesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BattleWorkerServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EnvModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EnvModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EnvModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EnvModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlayerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlayersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApiGatewayModule\n\n\n\ncluster_ApiGatewayModule_imports\n\n\n\ncluster_ApiGatewayModule_providers\n\n\n\ncluster_BattleServiceModule\n\n\n\ncluster_BattleServiceModule_providers\n\n\n\ncluster_BattlesModule\n\n\n\ncluster_BattlesModule_providers\n\n\n\ncluster_BattleWorkerServiceModule\n\n\n\ncluster_BattleWorkerServiceModule_providers\n\n\n\ncluster_PlayerModule\n\n\n\ncluster_PlayerModule_providers\n\n\n\ncluster_PlayersModule\n\n\n\ncluster_PlayersModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nBattlesModule\n\nBattlesModule\n\n\n\nApiGatewayModule\n\nApiGatewayModule\n\nApiGatewayModule -->\n\nBattlesModule->ApiGatewayModule\n\n\n\n\n\nEnvModule\n\nEnvModule\n\nApiGatewayModule -->\n\nEnvModule->ApiGatewayModule\n\n\n\n\n\nBattleServiceModule\n\nBattleServiceModule\n\nBattleServiceModule -->\n\nEnvModule->BattleServiceModule\n\n\n\n\n\nBattleWorkerServiceModule\n\nBattleWorkerServiceModule\n\nBattleWorkerServiceModule -->\n\nEnvModule->BattleWorkerServiceModule\n\n\n\n\n\nPlayerModule\n\nPlayerModule\n\nPlayerModule -->\n\nEnvModule->PlayerModule\n\n\n\n\n\nPlayersModule\n\nPlayersModule\n\nApiGatewayModule -->\n\nPlayersModule->ApiGatewayModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nApiGatewayModule -->\n\nSharedModule->ApiGatewayModule\n\n\n\nBattleServiceModule -->\n\nSharedModule->BattleServiceModule\n\n\n\nBattleWorkerServiceModule -->\n\nSharedModule->BattleWorkerServiceModule\n\n\n\nPlayerModule -->\n\nSharedModule->PlayerModule\n\n\n\n\n\nSharedService \n\nSharedService \n\nSharedService  -->\n\nSharedModule->SharedService \n\n\n\n\n\nApiGatewayService\n\nApiGatewayService\n\nApiGatewayModule -->\n\nApiGatewayService->ApiGatewayModule\n\n\n\n\n\nBattleServiceService\n\nBattleServiceService\n\nBattleServiceModule -->\n\nBattleServiceService->BattleServiceModule\n\n\n\n\n\nBattlesService\n\nBattlesService\n\nBattlesModule -->\n\nBattlesService->BattlesModule\n\n\n\n\n\nBattleWorkerServiceService\n\nBattleWorkerServiceService\n\nBattleWorkerServiceModule -->\n\nBattleWorkerServiceService->BattleWorkerServiceModule\n\n\n\n\n\nPlayerService\n\nPlayerService\n\nPlayerModule -->\n\nPlayerService->PlayerModule\n\n\n\n\n\nPlayersService\n\nPlayersService\n\nPlayersModule -->\n\nPlayersService->PlayersModule\n\n\n\n\n\nSharedService\n\nSharedService\n\nSharedModule -->\n\nSharedService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppDataSource   (apps/.../ormconfig.ts)\n                        \n                        \n                            AppDataSource   (apps/.../ormconfig.ts)\n                        \n                        \n                            BattleRepository   (apps/.../battles.repository.ts)\n                        \n                        \n                            configuration   (apps/.../configuration.ts)\n                        \n                        \n                            configuration   (apps/.../configuration.ts)\n                        \n                        \n                            configuration   (apps/.../configuration.ts)\n                        \n                        \n                            configuration   (apps/.../configuration.ts)\n                        \n                        \n                            envSchema   (apps/.../env.schema.ts)\n                        \n                        \n                            envSchema   (apps/.../env.schema.ts)\n                        \n                        \n                            envSchema   (apps/.../env.schema.ts)\n                        \n                        \n                            envSchema   (apps/.../env.schema.ts)\n                        \n                        \n                            nestApplicationOptions   (apps/.../nest-application-options.ts)\n                        \n                        \n                            nestApplicationOptions   (apps/.../nest-application-options.ts)\n                        \n                        \n                            nestApplicationOptions   (apps/.../nest-application-options.ts)\n                        \n                        \n                            nestApplicationOptions   (apps/.../nest-application-options.ts)\n                        \n                        \n                            nestApplicationSecurity   (apps/.../nest-application-security.ts)\n                        \n                        \n                            PlayerSettings   (libs/.../settings.ts)\n                        \n                        \n                            PlayersRepository   (apps/.../players.repository.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/battle-service/src/ormconfig.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AppDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DataSource({\n  type: 'postgres',\n  host: process.env.DATABASE_HOST,\n  port: parseInt(process.env.DATABASE_PORT!),\n  database: process.env.DATABASE_DB,\n  username: process.env.DATABASE_USER,\n  password: process.env.DATABASE_PASSWORD,\n  entities: [BattleDao, LeaderboardDao],\n  migrations: ['./migrations/*{.ts,.js}'],\n  migrationsTableName: 'migrations',\n  logging: true,\n  synchronize: true,\n})\n                    \n                \n\n\n        \n    \n\n    apps/player-service/src/ormconfig.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AppDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DataSource({\n  type: 'postgres',\n  host: process.env.DATABASE_HOST,\n  port: parseInt(process.env.DATABASE_PORT!),\n  database: process.env.DATABASE_DB,\n  username: process.env.DATABASE_USER,\n  password: process.env.DATABASE_PASSWORD,\n  entities: [PlayerDao],\n  migrations: ['./migrations/*{.ts,.js}'],\n  migrationsTableName: 'migrations',\n  logging: true,\n  synchronize: true,\n})\n                    \n                \n\n\n        \n    \n\n    apps/battle-service/src/application/battles.repository.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BattleRepository\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol('BattleRepository')\n                    \n                \n\n\n        \n    \n\n    apps/api-gateway/src/config/configuration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): EnvironmentVariables => ({\n  environment: process.env.NODE_ENV || 'development',\n  name: process.env.APP_NAME || 'api-gateway',\n  schema: process.env.API_GATEWAY_SCHEMA || 'http',\n  host: process.env.API_GATEWAY_HOST || 'localhost',\n  port: +process.env.API_GATEWAY_PORT!,\n  player: {\n    host: process.env.PLAYER_SERVICE_HOST || 'localhost',\n    port: +process.env.PLAYER_SERVICE_PORT!,\n  },\n  battle: {\n    host: process.env.BATTLE_SERVICE_HOST || 'localhost',\n    port: +process.env.BATTLE_SERVICE_PORT!,\n  }\n})\n                    \n                \n\n\n        \n    \n\n    apps/battle-service/src/config/configuration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): EnvironmentVariables => ({\n  environment: process.env.NODE_ENV || 'development',\n  name: process.env.APP_NAME || 'battle-service',\n  port: +process.env.PORT!,\n  battle: {\n    host: process.env.BATTLE_SERVICE_HOST || 'localhost',\n    port: +process.env.BATTLE_SERVICE_PORT!,\n  },\n  database: {\n    host: process.env.DATABASE_HOST || 'localhost',\n    port: +process.env.DATABASE_PORT!,\n    db: process.env.DATABASE_DB || 'battle-database',\n    user: process.env.DATABASE_USER || 'admin',\n    password: process.env.DATABASE_PASSWORD || 'admin',\n  },\n  rabbitmq: {\n    host: process.env.RABBITMQ_HOST || 'localhost',\n    port: +process.env.RABBITMQ_PORT!,\n    user: process.env.RABBITMQ_USER || 'admin',\n    password: process.env.RABBITMQ_PASSWORD || 'admin',\n  }\n})\n                    \n                \n\n\n        \n    \n\n    apps/battle-worker-service/src/config/configuration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): EnvironmentVariables => ({\n  environment: process.env.NODE_ENV || 'development',\n  name: process.env.APP_NAME || 'battle-worker-service',\n  port: +process.env.PORT!,\n  battleworker: {\n    host: process.env.BATTLE_WORKER_SERVICE_HOST || 'localhost',\n    port: +process.env.BATTLE_WORKER_SERVICE_PORT!,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    apps/player-service/src/config/configuration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): EnvironmentVariables => ({\n  environment: process.env.NODE_ENV || 'development',\n  name: process.env.APP_NAME || 'player-service',\n  port: +process.env.PORT!,\n  player: {\n    host: process.env.PLAYER_SERVICE_HOST || 'localhost',\n    port: +process.env.PLAYER_SERVICE_PORT!,\n  },\n  database: {\n    host: process.env.DATABASE_HOST || 'localhost',\n    port: +process.env.DATABASE_PORT!,\n    db: process.env.DATABASE_DB || 'player-database',\n    user: process.env.DATABASE_USER || 'admin',\n    password: process.env.DATABASE_PASSWORD || 'admin',\n  },\n})\n                    \n                \n\n\n        \n    \n\n    apps/api-gateway/src/config/env.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        envSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  NODE_ENV: Joi.string().valid('development').required(),\n  APP_NAME: Joi.string().required(),\n  API_GATEWAY_SCHEMA: Joi.string().required(),\n  API_GATEWAY_HOST: Joi.string().required(),\n  API_GATEWAY_PORT: Joi.number().required(),\n  PLAYER_SERVICE_HOST: Joi.string().required(),\n  PLAYER_SERVICE_PORT: Joi.number().required(),\n  BATTLE_SERVICE_HOST: Joi.string().required(),\n  BATTLE_SERVICE_PORT: Joi.number().required(),\n})\n                    \n                \n\n\n        \n    \n\n    apps/battle-service/src/config/env.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        envSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  NODE_ENV: Joi.string().valid('development').required(),\n  APP_NAME: Joi.string().required(),\n  PORT: Joi.number().required(),\n  BATTLE_SERVICE_HOST: Joi.string().required(),\n  BATTLE_SERVICE_PORT: Joi.number().required(),\n  DATABASE_HOST: Joi.string().required(),\n  DATABASE_PORT: Joi.number().required(),\n  DATABASE_DB: Joi.string().required(),\n  DATABASE_USER: Joi.string().required(),\n  DATABASE_PASSWORD: Joi.string().required(),\n  RABBITMQ_HOST: Joi.string().required(),\n  RABBITMQ_PORT: Joi.number().required(),\n  RABBITMQ_USER: Joi.string().required(),\n  RABBITMQ_PASSWORD: Joi.string().required(),\n})\n                    \n                \n\n\n        \n    \n\n    apps/battle-worker-service/src/config/env.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        envSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  NODE_ENV: Joi.string().valid('development').required(),\n  APP_NAME: Joi.string().required(),\n  PORT: Joi.number().required(),\n  BATTLE_WORKER_SERVICE_HOST: Joi.string().required(),\n  BATTLE_WORKER_SERVICE_PORT: Joi.number().required(),\n})\n                    \n                \n\n\n        \n    \n\n    apps/player-service/src/config/env.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        envSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  NODE_ENV: Joi.string().valid('development').required(),\n  APP_NAME: Joi.string().required(),\n  PORT: Joi.number().required(),\n  PLAYER_SERVICE_HOST: Joi.string().required(),\n  PLAYER_SERVICE_PORT: Joi.number().required(),\n  DATABASE_HOST: Joi.string().required(),\n  DATABASE_PORT: Joi.number().required(),\n  DATABASE_DB: Joi.string().required(),\n  DATABASE_USER: Joi.string().required(),\n  DATABASE_PASSWORD: Joi.string().required(),\n})\n                    \n                \n\n\n        \n    \n\n    apps/api-gateway/src/nest-application-options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nestApplicationOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NestApplicationOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  bufferLogs: true,\n}\n                    \n                \n\n\n        \n    \n\n    apps/battle-service/src/nest-application-options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nestApplicationOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NestApplicationOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  bufferLogs: true,\n}\n                    \n                \n\n\n        \n    \n\n    apps/battle-worker-service/src/nest-application-options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nestApplicationOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NestApplicationOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  bufferLogs: true,\n}\n                    \n                \n\n\n        \n    \n\n    apps/player-service/src/nest-application-options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nestApplicationOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NestApplicationOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  bufferLogs: true,\n}\n                    \n                \n\n\n        \n    \n\n    apps/api-gateway/src/security/nest-application-security.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nestApplicationSecurity\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication) => {\n  app.use(helmet());\n  app.enableCors();\n}\n                    \n                \n\n\n        \n    \n\n    libs/shared/src/core/types/settings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PlayerSettings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  NAME_LENGTH: 20,\n  DESCRIPTION_LENGTH: 1000,\n}\n                    \n                \n\n\n        \n    \n\n    apps/player-service/src/application/players.repository.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PlayersRepository\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol('PlayersRepository')\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
