var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/ApiGatewayController.html",[0,1.356,1,2.494]],["body/controllers/ApiGatewayController.html",[0,2.207,1,4.06,2,1.789,3,0.288,4,0.255,5,0.255,6,1.6,7,3.291,8,4.094,9,0.601,10,0.021,11,0.92,12,3.634,13,2.421,14,3.73,15,3.634,16,4.094,17,3.291,18,3.634,19,4.792,20,0.288,21,0.07,22,2.788,23,1.435,24,0.017,25,0.017]],["title/modules/ApiGatewayModule.html",[26,1.087,27,2.494]],["body/modules/ApiGatewayModule.html",[1,3.369,2,1.55,3,0.171,4,0.151,5,0.151,6,0.948,7,1.949,9,0.599,10,0.021,11,0.545,14,3.49,15,3.147,16,2.425,20,0.171,21,0.042,24,0.012,25,0.012,26,1.469,27,4.719,28,1.19,29,1.263,30,1.434,31,1.434,32,1.263,33,2.323,34,2.097,35,2.425,36,2.425,37,2.425,38,3.775,39,3.031,40,3.775,41,3.031,42,2.097,43,1.434,44,1.344,45,2.839,46,2.612,47,3.546,48,4.191,49,1.434,50,3.546,51,2.839,52,2.839,53,1.949,54,2.153,55,2.153,56,5.292,57,2.153,58,2.425,59,1.122,60,2.839,61,2.839,62,1.949,63,2.839,64,0.708,65,2.839,66,2.415,67,4.15,68,1.966,69,4.15,70,3.546,71,2.415,72,2.839,73,5.397,74,2.556,75,2.415,76,2.839,77,2.839,78,2.839,79,2.839]],["title/injectables/ApiGatewayService.html",[14,2.113,80,0.975]],["body/injectables/ApiGatewayService.html",[3,0.318,4,0.281,5,0.281,6,1.767,7,3.633,9,0.475,10,0.02,11,1.016,14,3.652,20,0.318,21,0.077,24,0.018,25,0.018,80,1.685,81,2.354,82,4.52]],["title/classes/Battle.html",[21,0.053,83,0.923]],["body/classes/Battle.html",[3,0.23,4,0.204,5,0.204,9,0.46,10,0.021,20,0.23,21,0.056,23,1.843,24,0.015,25,0.015,64,0.873,83,1.714,84,1.706,85,1.549,86,3.275,87,0.471,88,1.619,89,4.375,90,3.885,91,1.808,92,3.834,93,1.503,94,3.631,95,1.042,96,3.834,97,1.534,98,0.771,99,1.534,100,3.224,101,5.122,102,3.471,103,3.834,104,1.212,105,3.275,106,3.517,107,2.633,108,4.928,109,3.275,110,3.834,111,1.937,112,2.633,113,2.413,114,2.908,115,3.275,116,3.834,117,1.516,118,1.353,119,3.834,120,3.834,121,3.834,122,3.834,123,1.148]],["title/entities/BattleDao.html",[102,1.965,111,1.835]],["body/entities/BattleDao.html",[3,0.205,4,0.181,5,0.181,9,0.526,10,0.021,20,0.205,21,0.05,24,0.014,25,0.014,83,1.202,85,1.755,87,0.419,93,1.451,94,3.418,95,1.253,98,0.983,100,3.418,102,2.558,106,4.229,107,2.341,108,5.262,111,1.723,112,3.247,114,4.117,115,5.009,124,2.146,125,2.913,126,1.579,127,3.418,128,2.435,129,3.409,130,4.729,131,3.409,132,2.586,133,4.447,134,3.409,135,4.671,136,3.409,137,3.409,138,4.729,139,3.586,140,3.409,141,3.409,142,4.04,143,3.586,144,1.723,145,2.586,146,2.341,147,2.586,148,2.146,149,2.586,150,3.409,151,2.341,152,4.447,153,3.409]],["title/classes/BattleEngine.html",[21,0.053,154,2.286]],["body/classes/BattleEngine.html",[3,0.135,4,0.12,5,0.12,9,0.202,10,0.021,20,0.135,21,0.033,24,0.01,25,0.01,64,0.383,68,2.019,83,1.084,84,1.001,85,1.145,87,0.276,88,1.101,91,1.505,93,1.093,94,3.456,95,0.709,97,0.673,98,0.338,99,0.673,100,3.021,104,0.711,117,2.401,118,1.23,123,0.673,154,2.683,155,2.019,156,2.019,157,2.927,158,1.706,159,3.232,160,3.483,161,2.249,162,2.976,163,1.714,164,2.249,165,1.76,166,1.416,167,0.889,168,2.392,169,4.1,170,4.1,171,3.641,172,2.976,173,2.026,174,1.922,175,1.922,176,1.922,177,2.976,178,1.922,179,1.706,180,1.922,181,1.922,182,1.922,183,1.922,184,2.976,185,1.922,186,1.922,187,1.922,188,1.922,189,1.922,190,1.922,191,2.976,192,1.922,193,1.922,194,1.922,195,2.976,196,1.309,197,0.84,198,1.922,199,1.922,200,3.641,201,2.976,202,1.922,203,2.976,204,1.922,205,3.641,206,1.922,207,1.922,208,1.922,209,1.922,210,1.706,211,1.922,212,1.922,213,4.691,214,2.927,215,1.922,216,3.937,217,1.922,218,1.922,219,2.976,220,2.976,221,2.976,222,2.641,223,1.922,224,2.192,225,1.545,226,2.641,227,1.922,228,1.922,229,2.976,230,2.976,231,4.1,232,1.922,233,1.922,234,2.976,235,1.922,236,1.922,237,2.976,238,1.922,239,2.976,240,1.922,241,1.922,242,1.922,243,1.922,244,1.922,245,1.416,246,1.922,247,1.922,248,2.976,249,1.706,250,2.192,251,1.922,252,1.922,253,1.922,254,2.976,255,2.976,256,2.641,257,2.976,258,1.922,259,2.976,260,1.922,261,1.922,262,1.922,263,1.706]],["title/interfaces/BattleResult.html",[167,1.436,168,2.494]],["body/interfaces/BattleResult.html",[3,0.139,4,0.123,5,0.123,9,0.208,10,0.022,20,0.139,21,0.034,24,0.01,25,0.01,68,1.097,83,1.104,85,0.622,87,0.285,91,0.818,93,1.425,94,3.068,98,0.653,100,2.733,117,2.422,118,1.258,123,0.693,126,1.19,154,2.242,155,1.097,156,1.097,157,1.59,158,1.756,159,1.756,162,1.979,163,1.3,165,1.17,166,1.458,167,0.916,168,2.981,169,4.944,170,4.944,171,4.747,172,3.044,173,2.073,174,1.979,175,1.979,176,1.979,177,3.044,178,1.979,179,1.756,180,1.979,181,1.979,182,1.979,183,1.979,184,3.044,185,1.979,186,1.979,187,1.979,188,1.979,189,1.979,190,1.979,191,3.044,192,1.979,193,1.979,194,1.979,195,3.044,196,1.348,197,0.865,198,1.979,199,1.979,200,3.709,201,3.044,202,1.979,203,3.044,204,1.979,205,3.709,206,1.979,207,1.979,208,1.979,209,1.979,210,1.756,211,1.979,212,1.979,213,4.747,214,2.981,215,1.979,216,3.99,217,1.979,218,1.979,219,3.044,220,3.044,221,3.044,222,2.702,223,1.979,224,2.242,225,1.59,226,2.702,227,1.979,228,1.979,229,3.044,230,3.044,231,4.164,232,1.979,233,1.979,234,3.044,235,1.979,236,1.979,237,3.044,238,1.979,239,3.044,240,1.979,241,1.979,242,1.979,243,1.979,244,1.979,245,1.458,246,1.979,247,1.979,248,3.044,249,1.756,250,2.242,251,1.979,252,1.979,253,1.979,254,3.044,255,3.044,256,2.702,257,3.044,258,1.979,259,3.044,260,1.979,261,1.979,262,1.979,263,1.756,264,1.348]],["title/controllers/BattleServiceController.html",[0,1.356,265,2.494]],["body/controllers/BattleServiceController.html",[0,1.237,2,1.237,3,0.199,4,0.176,5,0.176,9,0.582,10,0.021,11,0.636,20,0.199,21,0.048,22,1.928,23,1.388,24,0.013,25,0.013,49,1.674,64,0.79,66,1.928,68,2.532,83,1.179,85,1.436,87,0.407,88,1.465,93,1.218,95,0.943,97,0.992,98,0.804,99,0.992,104,1.465,117,1.31,118,1.169,123,1.388,128,1.832,156,2.532,165,2.342,197,1.996,265,3.183,266,2.512,267,2.275,268,2.512,269,2.743,270,2.83,271,2.697,272,3.96,273,3.313,274,3.369,275,4.635,276,2.83,277,2.697,278,2.275,279,2.275,280,2.512,281,1.674,282,1.928,283,1.928,284,3.515,285,1.928,286,3.111,287,2.512,288,3.515,289,2.512,290,2.512,291,2.83,292,2.83,293,2.83,294,3.313,295,3.313,296,1.792,297,3.313,298,3.313,299,1.928,300,1.928,301,3.313,302,5.347,303,3.313,304,3.313,305,3.313]],["title/modules/BattleServiceModule.html",[26,1.087,306,2.494]],["body/modules/BattleServiceModule.html",[2,1.649,3,0.186,4,0.164,5,0.164,9,0.616,10,0.021,11,0.594,20,0.186,21,0.045,24,0.013,25,0.013,26,1.542,28,1.297,29,1.377,30,1.563,31,1.563,32,1.377,33,2.439,34,1.563,39,3.121,41,3.121,42,2.232,43,1.563,44,1.465,46,2.78,47,2.643,48,3.773,49,1.563,62,2.125,64,0.527,70,3.773,74,2.092,83,1.123,85,1.186,102,1.674,105,2.643,144,1.563,156,1.465,214,2.125,265,3.537,277,3.594,278,2.125,290,2.346,291,2.643,292,2.643,306,4.609,307,2.643,308,3.094,309,2.643,310,2.643,311,3.773,312,2.78,313,2.346,314,2.643,315,3.033,316,3.094,317,2.643,318,2.643,319,1.947,320,3.094,321,3.094,322,2.643,323,2.643,324,2.643,325,3.094,326,3.094,327,3.094,328,5.15,329,3.094,330,2.643,331,3.094,332,3.094,333,2.643,334,3.094,335,3.094,336,3.094,337,2.643,338,2.643]],["title/injectables/BattleServiceService.html",[80,0.975,277,2.113]],["body/injectables/BattleServiceService.html",[3,0.222,4,0.197,5,0.197,9,0.509,10,0.021,11,0.711,20,0.222,21,0.054,23,1.108,24,0.014,25,0.014,64,0.853,66,2.153,68,2.683,80,1.343,81,1.647,83,1.661,85,1.63,87,0.455,88,1.581,91,1.766,93,1.139,95,1.153,97,1.497,98,0.753,99,1.497,104,1.581,118,1.306,123,1.497,145,2.806,156,2.874,165,2.528,196,2.153,197,1.868,269,2.874,277,2.91,296,2.002,300,2.153,312,4.113,313,2.806,339,2.806,340,3.161,341,3.701,342,4.273,343,3.701,344,3.701,345,3.701,346,1.87,347,2.806,348,2.153,349,2.541,350,3.161,351,2.541,352,2.329,353,2.541]],["title/injectables/BattleTypeOrmRepository.html",[80,0.975,315,2.494]],["body/injectables/BattleTypeOrmRepository.html",[3,0.218,4,0.192,5,0.192,9,0.583,10,0.021,11,0.695,20,0.218,21,0.053,23,1.084,24,0.014,25,0.014,64,0.84,68,2.653,80,1.323,81,1.611,83,1.6,85,1.504,87,0.445,88,1.558,91,1.74,95,1.003,97,1.475,98,0.742,99,1.475,102,2.666,104,1.145,117,1.948,123,1.084,144,3.039,145,2.746,165,2.49,197,1.84,296,1.959,300,2.867,312,3.786,313,2.746,315,3.384,319,2.279,340,3.093,342,4.21,350,3.093,354,4.786,355,2.746,356,4.561,357,3.62,358,3.62,359,3.093,360,4.786,361,3.62,362,3.093,363,3.62,364,3.62,365,3.62,366,3.093,367,3.093,368,3.62,369,3.62,370,3.093,371,3.093]],["title/controllers/BattleWorkerServiceController.html",[0,1.356,372,2.494]],["body/controllers/BattleWorkerServiceController.html",[0,1.876,2,1.391,3,0.224,4,0.198,5,0.198,9,0.57,10,0.021,11,0.715,20,0.224,21,0.054,22,2.167,23,1.115,24,0.014,25,0.014,49,1.882,64,0.856,83,1.277,85,1.526,87,0.458,88,1.588,93,1.144,95,1.022,97,1.115,98,0.56,99,1.115,104,1.588,117,1.472,118,1.315,123,1.115,128,1.986,154,3.162,155,3.169,156,2.692,157,2.557,266,2.824,269,2.882,272,4.291,274,2.167,276,3.182,278,2.557,279,2.557,280,2.824,281,1.882,282,2.167,289,2.824,333,3.182,372,3.449,373,5.023,374,3.724,375,3.724,376,6.085,377,3.724,378,3.307,379,3.724,380,3.724,381,3.724,382,3.724,383,3.724]],["title/modules/BattleWorkerServiceModule.html",[26,1.087,384,2.494]],["body/modules/BattleWorkerServiceModule.html",[2,1.942,3,0.236,4,0.209,5,0.209,9,0.58,10,0.021,11,0.753,20,0.236,21,0.057,24,0.015,25,0.015,26,1.747,28,1.645,29,1.746,30,1.983,31,1.983,32,1.746,33,2.764,34,1.983,39,3.358,41,3.358,42,2.629,43,1.983,44,1.858,46,3.274,58,3.352,62,2.695,83,1.323,85,1.054,155,2.943,156,1.858,278,2.695,310,3.352,314,3.352,372,4.007,378,3.866,384,4.831,385,3.352,386,3.352,387,3.924]],["title/injectables/BattleWorkerServiceService.html",[80,0.975,378,2.113]],["body/injectables/BattleWorkerServiceService.html",[3,0.282,4,0.25,5,0.25,9,0.421,10,0.021,11,0.902,20,0.282,21,0.069,24,0.017,25,0.017,80,1.568,81,2.09,83,1.194,85,1.568,87,0.577,88,1.846,93,1.329,95,0.955,104,1.485,123,1.406,155,3.237,156,2.765,269,3.148,339,3.561,346,2.373,347,3.561,348,2.732,378,3.397,388,4.696]],["title/controllers/BattlesController.html",[0,1.356,389,2.494]],["body/controllers/BattlesController.html",[0,1.05,2,1.05,3,0.169,4,0.149,5,0.149,6,1.629,9,0.568,10,0.021,11,0.54,12,2.132,13,1.421,17,1.931,18,2.132,20,0.169,21,0.06,22,1.636,23,0.842,24,0.012,25,0.012,64,0.479,74,1.331,83,1.454,87,0.345,88,1.303,95,0.838,97,0.842,98,0.808,99,0.842,104,1.698,118,2.019,123,1.234,128,1.629,163,1.789,173,1.636,196,2.398,197,2.136,210,3.125,267,1.931,268,2.132,269,2.544,281,2.082,283,2.398,284,3.125,285,1.636,286,3.685,287,2.132,293,2.402,346,2.715,348,2.838,349,1.931,351,1.931,352,1.77,353,1.931,389,2.83,390,2.402,391,2.402,392,3.521,393,2.831,394,4.59,395,3.521,396,4.121,397,2.811,398,3.521,399,2.402,400,3.521,401,3.521,402,2.811,403,3.521,404,3.125,405,2.402,406,2.811,407,3.928,408,2.402,409,2.811,410,3.521,411,3.521,412,3.521,413,3.521,414,3.521,415,4.168,416,2.402,417,1.77,418,1.77,419,2.639,420,2.402,421,2.811,422,3.521,423,2.811,424,2.811,425,2.811]],["title/modules/BattlesModule.html",[26,1.087,38,2.286]],["body/modules/BattlesModule.html",[2,2.122,3,0.27,4,0.239,5,0.239,6,1.502,9,0.559,10,0.021,11,0.864,20,0.27,21,0.066,24,0.016,25,0.016,26,1.865,28,1.885,29,2.002,30,2.273,31,2.273,32,2.002,33,2.95,34,2.273,38,4.339,42,2.871,43,2.273,44,2.13,389,4.277,419,3.729,420,3.842,426,3.842,427,3.842,428,4.497,429,4.497]],["title/injectables/BattlesService.html",[80,0.975,419,1.965]],["body/injectables/BattlesService.html",[3,0.203,4,0.18,5,0.18,6,1.951,9,0.585,10,0.021,11,0.649,20,0.203,21,0.049,23,1.012,24,0.013,25,0.013,49,1.708,53,2.321,54,2.563,55,2.563,64,0.921,66,1.966,80,1.262,81,1.504,83,0.859,87,0.415,88,1.486,91,1.659,95,1.099,97,1.407,98,0.707,99,1.407,104,1.486,117,2.309,123,1.407,197,2.018,274,3.399,279,2.321,280,2.563,281,1.708,282,1.966,283,1.966,284,3.565,285,1.966,286,3.793,287,2.563,288,4.43,296,1.829,346,2.952,391,2.887,407,4.216,418,2.128,419,2.543,430,2.887,431,3.38,432,3.38,433,4.7,434,3.38,435,3.38,436,3.38,437,4.617,438,3.38,439,3.38,440,3.38,441,3.38]],["title/classes/CreateBattleDto.html",[21,0.053,286,2.113]],["body/classes/CreateBattleDto.html",[3,0.233,4,0.206,5,0.206,9,0.555,10,0.021,13,1.963,20,0.233,21,0.085,24,0.015,25,0.015,84,1.729,87,0.477,93,1.467,94,3.655,95,1.051,98,0.778,100,3.655,106,3.548,107,2.668,113,2.445,114,2.946,126,1.726,127,2.445,128,2.043,139,2.946,286,3.007,330,3.319,417,2.445,442,4.403,443,3.319,444,5.167,445,3.885,446,3.885,447,5.288,448,5.288,449,4.425,450,4.425,451,2.26,452,4.425,453,3.319]],["title/classes/CreateBattleResponseDto.html",[21,0.053,283,2.113]],["body/classes/CreateBattleResponseDto.html",[3,0.258,4,0.228,5,0.228,9,0.496,10,0.021,13,2.172,20,0.258,21,0.081,23,1.826,24,0.016,25,0.016,64,0.733,83,1.551,84,1.913,87,0.528,91,1.518,93,1.516,95,1.123,97,1.287,98,0.831,99,1.287,126,1.844,127,4.19,128,1.7,283,3.212,442,4.625,449,3.791,450,3.791,451,2.501,452,3.791,454,3.26,455,5.521,456,4.717,457,3.673,458,4.299]],["title/classes/CreatePlayerDto.html",[21,0.053,459,2.113]],["body/classes/CreatePlayerDto.html",[3,0.193,4,0.17,5,0.17,9,0.512,10,0.021,13,1.619,20,0.193,21,0.077,24,0.013,25,0.013,64,0.895,84,1.426,87,0.394,93,1.299,95,1.307,98,0.966,107,2.2,126,1.512,128,2.539,224,3.305,245,3.305,250,3.305,393,2.487,417,2.017,447,4.486,448,4.486,449,4.505,450,3.606,451,1.864,452,4.505,459,2.634,460,4.975,461,2.737,462,3.305,463,3.305,464,3.203,465,5.251,466,3.204,467,3.204,468,3.204,469,3.204,470,4.528,471,3.204,472,3.204,473,3.204,474,3.204,475,3.204,476,6.248,477,3.204,478,3.204,479,2.43,480,3.204,481,3.204,482,4.528]],["title/classes/CreatePlayerResponseDto.html",[21,0.053,483,2.113]],["body/classes/CreatePlayerResponseDto.html",[3,0.258,4,0.228,5,0.228,9,0.496,10,0.021,13,2.172,20,0.258,21,0.081,23,1.826,24,0.016,25,0.016,64,0.733,84,1.913,87,0.528,91,1.518,93,1.516,95,1.123,97,1.287,98,0.831,99,1.287,126,1.844,128,1.7,163,1.826,299,3.873,449,3.791,450,3.791,451,2.501,452,3.791,454,3.26,456,4.717,457,3.673,460,4.625,483,3.212,484,4.717,485,4.299]],["title/modules/EnvModule.html",[26,1.087,39,1.835]],["body/modules/EnvModule.html",[3,0.256,4,0.227,5,0.227,6,1.835,9,0.596,10,0.021,11,0.819,20,0.256,21,0.062,24,0.016,25,0.016,26,1.645,28,1.789,33,2.021,39,2.777,46,2.686,50,4.695,56,4.695,57,3.236,59,1.687,74,3.04,486,4.267,487,4.267,488,4.609,489,4.167,490,4.267,491,4.267,492,4.267,493,4.267,494,4.267,495,4.267,496,4.267,497,4.267,498,4.267,499,4.267,500,4.267,501,4.267,502,4.267,503,4.267]],["title/interfaces/EnvironmentVariables.html",[59,1.436,167,1.436]],["body/interfaces/EnvironmentVariables.html",[3,0.238,4,0.211,5,0.211,6,1.324,10,0.021,20,0.238,24,0.015,25,0.015,59,2.07,64,1.064,71,3.877,75,3.877,83,1.586,87,0.487,93,1.646,98,1.069,126,1.749,163,1.868,167,1.567,264,2.306,271,3.63,464,3.072,504,3.386,505,3.927,506,5.33]],["title/interfaces/EnvironmentVariables-1.html",[59,1.202,167,1.202,214,2.089]],["body/interfaces/EnvironmentVariables-1.html",[3,0.232,4,0.205,5,0.205,10,0.021,20,0.232,24,0.015,25,0.015,59,2.034,64,1.052,71,3.367,75,3.928,83,1.57,85,1.036,87,0.474,93,1.64,98,1.072,113,3.886,126,1.718,167,1.526,264,2.245,271,3.848,464,3.132,505,3.886,507,2.65,508,5.274,509,2.927,510,3.902,511,3.902]],["title/interfaces/EnvironmentVariables-2.html",[59,1.202,167,1.202,222,2.307]],["body/interfaces/EnvironmentVariables-2.html",[3,0.268,4,0.237,5,0.237,10,0.021,20,0.268,24,0.016,25,0.016,59,2.235,64,1.113,71,2.597,75,3.918,85,1.198,87,0.548,93,1.591,98,1.035,126,1.889,155,2.114,167,1.764,264,2.597,271,3.29,464,3.091,505,4.108,507,3.065,512,5.575]],["title/interfaces/EnvironmentVariables-3.html",[59,1.202,167,1.202,513,2.598]],["body/interfaces/EnvironmentVariables-3.html",[3,0.248,4,0.22,5,0.22,10,0.021,20,0.248,24,0.015,25,0.015,59,2.127,64,1.081,71,3.131,75,3.922,87,0.508,93,1.628,98,1.059,113,3.991,126,1.797,163,1.898,167,1.633,264,2.404,271,3.689,464,3.114,505,3.991,507,2.837,509,3.133,510,3.133,511,3.133,514,1.732]],["title/classes/Leaderboard.html",[21,0.053,515,2.286]],["body/classes/Leaderboard.html",[3,0.216,4,0.191,5,0.191,9,0.322,10,0.021,20,0.216,21,0.052,23,2.019,24,0.014,25,0.014,64,1.069,84,1.596,85,1.497,87,0.441,88,1.548,89,4.229,90,3.714,91,1.729,93,1.558,95,0.996,97,1.466,98,0.737,99,1.466,104,1.134,117,1.418,118,1.266,123,1.074,299,2.849,393,2.641,462,3.51,463,3.51,464,3.334,484,3.065,515,4.17,516,3.065,517,4.764,518,4.764,519,3.587,520,4.897,521,3.948,522,3.587,523,3.587,524,3.587,525,3.587,526,3.587,527,3.587,528,3.587,529,3.587,530,3.587,531,3.587]],["title/entities/LeaderboardDao.html",[111,1.835,521,2.286]],["body/entities/LeaderboardDao.html",[3,0.19,4,0.168,5,0.168,9,0.468,10,0.021,20,0.19,21,0.046,24,0.013,25,0.013,64,0.89,85,1.812,87,0.389,93,1.49,95,1.331,98,1.001,111,1.602,112,3.085,124,1.995,126,1.501,127,3.285,128,2.586,132,2.403,133,4.306,135,5.34,142,2.708,143,3.407,144,1.602,146,2.176,147,2.403,148,1.995,149,2.403,151,2.176,152,4.856,299,3.037,393,2.472,462,3.285,463,3.285,464,3.098,515,2.828,517,4.459,518,4.459,521,2.828,532,2.708,533,3.169,534,3.169,535,3.169,536,3.169,537,3.169,538,3.169,539,3.169,540,3.169,541,3.169,542,3.169]],["title/classes/NestApplicationValidationPipe.html",[21,0.053,543,2.754]],["body/classes/NestApplicationValidationPipe.html",[3,0.271,4,0.24,5,0.24,9,0.405,10,0.021,11,0.867,20,0.271,21,0.066,24,0.016,25,0.016,74,2.955,84,2.009,91,2.203,95,0.918,126,1.508,151,3.911,159,4.319,274,2.627,352,2.842,451,2.627,543,4.319,544,4.866,545,3.911,546,3.857,547,6.24,548,4.514,549,4.514,550,4.514,551,4.514,552,4.514,553,4.514,554,4.514,555,4.514,556,4.514,557,4.514,558,5.696,559,4.514,560,4.514]],["title/classes/Player.html",[21,0.053,163,1.087]],["body/classes/Player.html",[3,0.216,4,0.191,5,0.191,9,0.323,10,0.021,20,0.216,21,0.053,23,1.985,24,0.014,25,0.014,64,1.023,84,1.601,87,0.442,88,1.552,89,4.235,90,3.722,91,1.732,93,1.475,95,0.998,97,1.469,98,0.738,99,1.469,104,1.138,117,1.422,118,1.27,123,1.077,163,1.985,224,3.515,245,3.515,250,3.515,393,2.645,462,3.515,463,3.515,464,3.395,514,2.341,561,3.074,562,3.598,563,3.598,564,4.907,565,3.397,566,3.598,567,3.074,568,3.074,569,3.598,570,3.598,571,3.598,572,3.598,573,3.598,574,3.598,575,3.598]],["title/controllers/PlayerController.html",[0,1.356,576,2.494]],["body/controllers/PlayerController.html",[0,1.323,2,1.323,3,0.213,4,0.188,5,0.188,9,0.579,10,0.021,11,0.68,20,0.213,21,0.052,22,2.062,23,1.061,24,0.014,25,0.014,49,1.791,64,0.828,68,2.624,87,0.435,88,1.535,93,1.262,95,0.988,97,1.061,98,0.834,99,1.061,104,1.535,117,1.401,118,1.251,123,1.454,128,1.92,163,1.061,165,2.454,173,2.062,197,2.069,267,2.433,269,2.823,270,3.027,271,2.826,274,3.468,281,1.791,282,2.062,285,2.062,289,2.687,299,2.062,300,2.062,459,3.224,483,2.062,514,2.322,576,3.335,577,3.027,578,4.856,579,3.544,580,4.856,581,3.544,582,2.687,583,3.027,584,3.683,585,2.687,586,3.224,587,3.027,588,3.027,589,3.544,590,3.544,591,3.544,592,3.544]],["title/entities/PlayerDao.html",[111,1.835,565,1.965]],["body/entities/PlayerDao.html",[3,0.185,4,0.164,5,0.164,9,0.461,10,0.021,20,0.185,21,0.045,24,0.013,25,0.013,64,0.876,74,2.084,87,0.378,93,1.404,95,1.321,98,0.994,111,1.555,112,3.021,124,1.937,126,1.47,127,3.233,128,2.566,132,2.334,133,4.25,135,5.282,143,3.337,144,1.555,146,2.113,148,1.937,149,2.334,151,2.113,152,4.814,163,1.317,166,1.937,224,3.233,245,3.233,250,3.233,393,2.432,462,3.233,463,3.233,464,3.175,514,2.77,565,2.38,593,5.011,594,2.629,595,3.078,596,3.078,597,3.078,598,3.078,599,3.078,600,3.078,601,3.078,602,3.078,603,3.078,604,3.078,605,3.078,606,3.078]],["title/modules/PlayerModule.html",[26,1.087,607,2.494]],["body/modules/PlayerModule.html",[2,1.802,3,0.211,4,0.187,5,0.187,9,0.618,10,0.021,11,0.674,20,0.211,21,0.051,24,0.014,25,0.014,26,1.651,28,1.472,29,1.563,30,1.775,31,1.775,32,1.563,33,2.612,34,1.775,39,3.25,41,3.25,42,2.439,43,1.775,44,1.663,46,3.038,62,2.411,74,1.663,311,4.123,317,3,318,3,319,2.211,322,3,323,3,324,3,337,3,338,3,514,2.023,565,1.9,567,4.123,568,3,576,3.787,586,3.742,587,3,607,4.731,608,3,609,3.512,610,3,611,3.512,612,3.038,613,2.663,614,3.314,615,2.663,616,3.512,617,3.512,618,3.512]],["title/injectables/PlayerService.html",[80,0.975,586,2.113]],["body/injectables/PlayerService.html",[3,0.225,4,0.199,5,0.199,9,0.512,10,0.021,11,0.72,20,0.225,21,0.055,23,1.122,24,0.014,25,0.014,64,0.86,66,2.181,68,2.701,80,1.355,81,1.668,87,0.46,88,1.595,91,1.781,93,1.149,95,1.16,97,1.51,98,0.759,99,1.51,104,1.595,118,1.323,123,1.51,163,1.963,165,2.549,166,2.359,196,2.181,197,1.884,269,2.889,296,2.028,300,2.181,346,1.894,347,2.842,348,2.181,349,2.574,351,2.574,352,2.359,353,2.574,514,2.557,586,2.935,612,3.84,613,2.842,619,3.202,620,3.202,621,3.748,622,4.31,623,4.31,624,3.748,625,3.748,626,3.748,627,3.202]],["title/injectables/PlayerTypeOrmRepository.html",[80,0.975,614,2.494]],["body/injectables/PlayerTypeOrmRepository.html",[3,0.218,4,0.192,5,0.192,9,0.583,10,0.021,11,0.695,20,0.218,21,0.053,23,1.084,24,0.014,25,0.014,64,0.84,68,2.653,80,1.323,81,1.611,87,0.445,88,1.558,91,1.74,95,1.003,97,1.475,98,0.742,99,1.475,104,1.145,117,1.948,123,1.084,144,1.829,163,1.884,165,2.49,166,2.279,197,1.84,296,1.959,300,2.867,319,2.279,356,4.561,359,3.093,360,4.786,362,3.093,366,3.093,367,3.093,370,3.093,371,3.093,514,2.348,565,2.666,593,4.249,612,3.102,613,2.746,614,3.384,615,4.249,620,3.093,622,4.21,623,4.21,627,3.093,628,3.093,629,3.62,630,3.62,631,3.62,632,3.62,633,3.62,634,3.62,635,3.62,636,3.62]],["title/controllers/PlayersController.html",[0,1.356,637,2.494]],["body/controllers/PlayersController.html",[0,1.065,2,1.065,3,0.171,4,0.152,5,0.152,6,1.643,9,0.571,10,0.021,11,0.548,12,2.163,13,1.441,17,1.959,18,2.163,20,0.171,21,0.061,22,1.66,23,0.854,24,0.012,25,0.012,64,0.486,74,1.351,87,0.35,88,1.317,95,0.847,97,0.854,98,0.814,99,0.854,104,1.71,118,2.031,123,1.247,128,1.647,163,1.973,173,1.66,196,2.423,197,2.148,267,1.959,269,2.562,281,2.105,285,1.66,346,2.733,348,2.862,349,1.959,351,1.959,352,1.796,353,1.959,392,3.558,393,2.845,394,4.621,395,3.558,398,3.558,399,2.437,400,3.558,401,3.558,403,3.558,404,3.159,405,2.437,407,3.951,408,2.437,410,3.558,411,3.558,412,3.558,413,3.558,414,3.558,415,4.203,416,2.437,417,1.796,418,1.796,422,3.558,459,3.7,483,2.423,584,3.159,585,2.163,588,2.437,637,2.86,638,2.437,639,2.437,640,2.852,641,2.852,642,2.852,643,2.852,644,2.661,645,2.437,646,2.852,647,2.852,648,2.852,649,2.852]],["title/modules/PlayersModule.html",[26,1.087,40,2.286]],["body/modules/PlayersModule.html",[2,2.122,3,0.27,4,0.239,5,0.239,6,1.502,9,0.559,10,0.021,11,0.864,20,0.27,21,0.066,24,0.016,25,0.016,26,1.865,28,1.885,29,2.002,30,2.273,31,2.273,32,2.002,33,2.95,34,2.273,40,4.339,42,2.871,43,2.273,44,2.13,637,4.277,644,3.729,645,3.842,650,3.842,651,3.842,652,4.497,653,4.497]],["title/injectables/PlayersService.html",[80,0.975,644,1.965]],["body/injectables/PlayersService.html",[3,0.203,4,0.18,5,0.18,6,1.951,9,0.585,10,0.021,11,0.649,20,0.203,21,0.049,23,1.012,24,0.013,25,0.013,49,1.708,53,2.321,54,2.563,55,2.563,64,0.921,66,1.966,80,1.262,81,1.504,87,0.415,88,1.486,91,1.659,95,1.099,97,1.407,98,0.707,99,1.407,104,1.486,117,2.309,123,1.407,163,1.012,197,2.018,274,3.399,281,1.708,282,1.966,285,1.966,288,4.43,296,1.829,346,2.952,407,4.216,418,2.128,437,4.617,459,3.793,483,1.966,582,2.563,583,2.887,584,3.565,585,2.563,639,2.887,644,2.543,654,2.887,655,3.38,656,3.38,657,4.7,658,3.38,659,3.38,660,3.38,661,3.38,662,3.38,663,3.38,664,3.38]],["title/modules/SharedModule.html",[26,1.087,41,1.835]],["body/modules/SharedModule.html",[3,0.269,4,0.238,5,0.238,9,0.509,10,0.021,11,0.86,20,0.269,21,0.066,24,0.016,25,0.016,26,1.862,28,1.878,29,1.994,30,2.264,31,2.264,32,1.994,33,2.945,34,3.142,41,3.534,42,2.864,43,2.264,44,2.122,665,3.827,666,3.827,667,3.827,668,4.58,669,4.48,670,4.48]],["title/injectables/SharedService.html",[80,0.975,668,2.286]],["body/injectables/SharedService.html",[3,0.321,4,0.284,5,0.284,9,0.479,10,0.02,11,1.025,20,0.321,21,0.078,24,0.018,25,0.018,80,1.694,81,2.376,668,3.972,671,4.561]],["title/coverage.html",[672,3.745]],["body/coverage.html",[0,1.892,1,1.281,5,0.099,6,2.043,7,2.063,8,1.594,10,0.021,14,1.085,21,0.084,24,0.009,25,0.009,32,1.925,59,1.71,80,1.536,82,1.594,83,0.764,85,1.823,86,1.594,98,0.281,102,1.009,111,1.906,118,0.659,125,1.594,144,0.943,148,1.174,154,1.174,155,2.843,156,2.4,157,2.063,158,2.278,163,0.899,167,1.874,168,1.281,216,5.529,265,1.281,266,2.278,277,1.085,283,1.085,286,1.085,299,1.085,312,1.174,315,1.281,339,2.278,354,1.594,355,3.596,372,1.281,378,1.085,389,1.281,390,1.594,419,1.009,430,1.594,442,2.278,443,1.594,454,2.278,459,1.085,460,2.278,461,1.594,479,1.415,483,1.085,488,3.28,489,3.28,504,1.594,507,2.59,514,2.563,515,1.174,516,1.594,521,1.174,532,1.594,543,1.415,544,1.594,545,3.479,546,1.594,561,1.594,565,1.009,576,1.281,577,1.594,586,1.085,593,2.278,594,1.594,612,1.174,614,1.281,615,1.415,619,1.594,628,1.594,637,1.281,638,1.594,644,1.009,654,1.594,668,1.174,671,1.594,672,1.415,673,1.594,674,1.865,675,6.938,676,6.303,677,4.741,678,1.594,679,6.57,680,1.594,681,3.004,682,1.594,683,4.325,684,1.594,685,3.695,686,1.594,687,1.594,688,1.594,689,1.594,690,3.223,691,3.223,692,1.865,693,3.223,694,3.223,695,2.567,696,2.567,697,3.004,698,1.865,699,1.594,700,1.865,701,1.415,702,1.865]],["title/dependencies.html",[29,1.942,703,2.598]],["body/dependencies.html",[10,0.021,11,0.825,13,2.172,21,0.089,24,0.016,25,0.016,29,1.913,49,2.172,57,3.26,144,2.172,319,2.706,417,2.706,418,2.706,451,2.501,704,6.099,705,4.299,706,4.299,707,4.299,708,4.299,709,4.299,710,4.299,711,4.299,712,4.299,713,4.299,714,4.299,715,4.299,716,4.299,717,4.299,718,4.299,719,4.299,720,4.299,721,4.299,722,4.299,723,4.299,724,4.299,725,4.299,726,4.299,727,5.521,728,4.299,729,4.299,730,4.299,731,4.299,732,4.299,733,4.299,734,4.299,735,4.299,736,4.299]],["title/miscellaneous/enumerations.html",[737,1.77,738,3.727]],["body/miscellaneous/enumerations.html",[6,1.159,10,0.021,17,3.287,24,0.014,25,0.014,53,3.287,83,1.217,85,0.932,87,0.426,106,3.287,146,4.057,147,3.63,148,3.719,163,1.433,173,2.785,197,1.787,225,4.96,268,3.63,269,2.267,279,3.287,281,2.985,282,3.437,290,3.63,346,2.419,419,1.877,453,4.09,514,1.454,515,3.013,582,3.63,644,1.877,701,2.632,737,2.019,738,2.965,739,3.47,740,5.908,741,2.965,742,3.47,743,4.787,744,3.47,745,4.787,746,4.787,747,5.908,748,3.47,749,3.47,750,3.47,751,3.47,752,4.09,753,4.787,754,3.47,755,4.787,756,3.47,757,3.47,758,3.47,759,3.47,760,3.47,761,3.47,762,3.47,763,3.47,764,3.47,765,3.47,766,4.787]],["title/miscellaneous/functions.html",[737,1.77,767,3.727]],["body/miscellaneous/functions.html",[6,1.69,10,0.018,24,0.018,25,0.018,32,3.29,85,1.641,87,0.622,155,2.397,514,2.121,682,4.324,693,5.61,737,2.945,767,4.324,768,6.821]],["title/index.html",[87,0.374,752,2.598,769,3.041]],["body/index.html",[4,0.14,10,0.02,24,0.011,25,0.011,44,2.767,109,2.255,226,2.002,249,3.952,256,4.431,263,2.983,356,2.002,393,1.25,404,2.002,545,4.012,672,2.002,673,3.361,770,2.64,771,2.64,772,4.702,773,3.934,774,2.64,775,2.64,776,2.64,777,3.934,778,4.702,779,2.64,780,2.64,781,5.211,782,2.64,783,6.22,784,2.64,785,6.052,786,2.255,787,2.64,788,2.64,789,3.934,790,2.64,791,3.934,792,2.64,793,4.702,794,2.64,795,3.934,796,2.64,797,2.64,798,2.64,799,2.64,800,2.64,801,5.211,802,6.22,803,2.64,804,3.934,805,2.64,806,2.64,807,2.64,808,2.64,809,2.64,810,3.934,811,5.211,812,2.64,813,3.934,814,2.64,815,3.934,816,5.572,817,5.211,818,2.64,819,3.934,820,2.64,821,2.64,822,2.64,823,2.64,824,5.211,825,2.64,826,2.64,827,2.64,828,2.64,829,2.64,830,3.934,831,2.64,832,2.64,833,2.64,834,2.64,835,2.64,836,2.64,837,2.64,838,2.64,839,3.934,840,2.64,841,2.64,842,4.452,843,3.934,844,2.64,845,2.64,846,2.64,847,2.64,848,2.64,849,2.64,850,2.64,851,2.64,852,3.934,853,2.64,854,2.255,855,2.64,856,2.64,857,4.702,858,2.64,859,2.64,860,2.64,861,2.64,862,2.64,863,3.934,864,2.64,865,2.64,866,2.64,867,2.64,868,2.64,869,3.934,870,2.64,871,2.64,872,2.64,873,3.934,874,3.934,875,2.64,876,2.64,877,2.64,878,2.64,879,2.64,880,2.64,881,2.64,882,2.64,883,2.64,884,2.64,885,2.64,886,2.255,887,2.64,888,2.64,889,2.64,890,2.64,891,2.64,892,2.64,893,2.255]],["title/modules.html",[28,2.07]],["body/modules.html",[10,0.016,24,0.016,25,0.016,27,3.149,28,1.922,38,2.886,39,3.33,40,2.886,41,2.317,306,3.149,384,3.149,607,3.149,842,6.005,854,5.63,894,7.029,895,7.029,896,7.264,897,6.59]],["title/overview.html",[898,4.219]],["body/overview.html",[2,1.258,10,0.021,14,3.139,24,0.013,25,0.013,26,1.009,27,4.784,28,1.412,29,1.5,30,1.703,31,1.703,32,1.5,33,1.596,34,1.703,35,2.879,36,2.879,37,2.879,38,3.861,39,3.209,40,3.861,41,3.41,42,2.37,43,1.703,44,1.596,81,1.5,84,1.5,124,2.121,264,1.961,277,3.139,306,4.562,307,2.879,309,2.879,378,3.139,384,4.562,385,2.879,386,2.879,419,2.919,426,2.879,427,2.879,513,2.879,586,3.139,607,4.562,608,2.879,610,2.879,644,2.919,650,2.879,651,2.879,665,2.879,666,2.879,667,2.879,668,4.101,898,2.879,899,3.37,900,3.37,901,4.691,902,3.37]],["title/properties.html",[126,1.457,703,2.598]],["body/properties.html",[10,0.021,24,0.018,25,0.018,126,1.825,393,2.587,886,4.667,893,4.667,903,5.463,904,5.463,905,5.463]],["title/miscellaneous/variables.html",[737,1.77,906,3.727]],["body/miscellaneous/variables.html",[6,1.317,10,0.021,15,1.212,24,0.008,25,0.008,59,1.558,64,0.672,71,3.33,74,2.471,75,3.664,83,1.111,85,1.401,87,0.196,98,0.75,102,0.865,113,2.965,118,0.935,124,1.667,139,4.824,155,1.867,163,1.18,179,1.212,225,4.369,312,1.667,348,1.972,355,3.957,479,2.008,488,3.957,489,3.957,505,2.481,506,1.365,508,1.365,509,2.008,510,2.571,511,3.314,512,1.365,514,1.831,521,1.006,545,3.831,565,0.865,612,1.667,678,1.365,680,1.365,684,1.365,685,4.997,686,1.365,687,2.262,688,2.262,689,1.365,690,2.896,691,2.896,694,2.896,695,2.262,696,3.368,699,1.365,701,1.212,737,0.93,741,1.365,786,3.368,906,1.365,907,2.647,908,1.598,909,3.942,910,3.942,911,4.369,912,1.598,913,2.647,914,2.647,915,3.942,916,2.647,917,3.942,918,2.647,919,3.942,920,3.942,921,3.942,922,2.647,923,2.647,924,2.647,925,2.647,926,1.598,927,3.942,928,3.942,929,1.598,930,1.598,931,1.598,932,1.598,933,5.412,934,1.598,935,2.647,936,2.647,937,2.647,938,2.647,939,3.39,940,2.647,941,4.71,942,1.598,943,1.598,944,1.598,945,1.598,946,1.598,947,1.598,948,3.942,949,3.942,950,3.942,951,3.942,952,6.571,953,1.598,954,1.598,955,1.598,956,5.849,957,2.647,958,2.647,959,2.647,960,2.647,961,2.647,962,2.647,963,2.647,964,2.647,965,2.647,966,1.598,967,1.598,968,1.598,969,1.598,970,1.598,971,1.598,972,3.942,973,1.598,974,1.598,975,1.598,976,1.598,977,1.598,978,1.598,979,1.598,980,1.598,981,1.598]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"injectables/ApiGatewayService.html":{},"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"modules/EnvModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/NestApplicationValidationPipe.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"injectables/PlayersService.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":216,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"coverage.html":{}}}],["0.0.1",{"_index":904,"title":{},"body":{"properties.html":{}}}],["0.10.8",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["0.14.2",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["0.3.23",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":241,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["0.5.1",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":675,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":697,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":676,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":677,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":698,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":700,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":692,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":214,"title":{"interfaces/EnvironmentVariables-1.html":{}},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"modules/BattleServiceModule.html":{}}}],["1.0.1",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":180,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["100",{"_index":177,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["1000",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":899,"title":{},"body":{"overview.html":{}}}],["11.0.0",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["11.2.0",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":187,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["15",{"_index":186,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["17.13.3",{"_index":725,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":222,"title":{"interfaces/EnvironmentVariables-2.html":{}},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["2.7.1",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":179,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":513,"title":{"interfaces/EnvironmentVariables-3.html":{}},"body":{"overview.html":{}}}],["4.0.2",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["4.1.14",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":902,"title":{},"body":{"overview.html":{}}}],["50",{"_index":178,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["6",{"_index":900,"title":{},"body":{"overview.html":{}}}],["60",{"_index":185,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["7.8.1",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":723,"title":{},"body":{"dependencies.html":{}}}],["8.16.0",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":184,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["9",{"_index":901,"title":{},"body":{"overview.html":{}}}],["abortearly",{"_index":500,"title":{},"body":{"modules/EnvModule.html":{}}}],["admin",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allowing",{"_index":831,"title":{},"body":{"index.html":{}}}],["allowunknown",{"_index":501,"title":{},"body":{"modules/EnvModule.html":{}}}],["amazing",{"_index":879,"title":{},"body":{"index.html":{}}}],["amqp",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["amqp://${process.env.rabbitmq_user}:${process.env.rabbitmq_password}@${process.env.rabbitmq_host}:${process.env.rabbitmq_port",{"_index":321,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["amqp://admin:admin@localhost:5672",{"_index":332,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["amqplib",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":15,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"miscellaneous/variables.html":{}}}],["api_gateway_host",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_gateway_port",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_gateway_schema",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibody",{"_index":412,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["apicreatedresponse",{"_index":413,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["apigatewaycontroller",{"_index":1,"title":{"controllers/ApiGatewayController.html":{}},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"coverage.html":{}}}],["apigatewaymodule",{"_index":27,"title":{"modules/ApiGatewayModule.html":{}},"body":{"modules/ApiGatewayModule.html":{},"modules.html":{},"overview.html":{}}}],["apigatewayservice",{"_index":14,"title":{"injectables/ApiGatewayService.html":{}},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"injectables/ApiGatewayService.html":{},"coverage.html":{},"overview.html":{}}}],["apiinternalservererrorresponse",{"_index":414,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["apioperation",{"_index":415,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["apioperation({summary",{"_index":392,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["apiproperty",{"_index":452,"title":{},"body":{"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{}}}],["apiproperty()@escape()@maxlength(playersettings.description_length)@trim()@isstring()@isnotempty",{"_index":468,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["apiproperty()@escape()@maxlength(playersettings.name_length)@trim()@isstring()@isnotempty",{"_index":473,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["apiproperty()@escape()@trim()@isstring()@isnotempty",{"_index":444,"title":{},"body":{"classes/CreateBattleDto.html":{}}}],["apiproperty()@isnumber()@isnotempty",{"_index":465,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["apiproperty()@isnumber()@max(1000000000)@isnotempty",{"_index":470,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":457,"title":{},"body":{"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerResponseDto.html":{}}}],["apitags",{"_index":12,"title":{},"body":{"controllers/ApiGatewayController.html":{},"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["apitags(tags.battles",{"_index":421,"title":{},"body":{"controllers/BattlesController.html":{}}}],["apitags(tags.players",{"_index":646,"title":{},"body":{"controllers/PlayersController.html":{}}}],["apitags(tags.root",{"_index":19,"title":{},"body":{"controllers/ApiGatewayController.html":{}}}],["app",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.enablecors",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.use(helmet",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app/shared",{"_index":62,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/PlayerModule.html":{}}}],["app/shared/battles/constants/battle",{"_index":280,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattleWorkerServiceController.html":{},"injectables/BattlesService.html":{}}}],["app/shared/battles/dto/create",{"_index":284,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{}}}],["app/shared/core/constants/broker/broker",{"_index":291,"title":{},"body":{"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{}}}],["app/shared/core/constants/client",{"_index":54,"title":{},"body":{"modules/ApiGatewayModule.html":{},"injectables/BattlesService.html":{},"injectables/PlayersService.html":{}}}],["app/shared/core/types/settings",{"_index":107,"title":{},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/CreateBattleDto.html":{},"classes/CreatePlayerDto.html":{}}}],["app/shared/players/constants/player",{"_index":583,"title":{},"body":{"controllers/PlayerController.html":{},"injectables/PlayersService.html":{}}}],["app/shared/players/dto/create",{"_index":584,"title":{},"body":{"controllers/PlayerController.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{}}}],["app_name",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appdatasource",{"_index":696,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":545,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application/battles.repository",{"_index":313,"title":{},"body":{"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{}}}],["application/players.repository",{"_index":613,"title":{},"body":{"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["applications",{"_index":777,"title":{},"body":{"index.html":{}}}],["apps/.../battles.repository.ts",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../configuration.ts",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../db",{"_index":746,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../env.schema.ts",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":768,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../nest",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../ormconfig.ts",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../players.repository.ts",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../tags.ts",{"_index":749,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/api",{"_index":6,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"injectables/ApiGatewayService.html":{},"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"injectables/BattlesService.html":{},"modules/EnvModule.html":{},"interfaces/EnvironmentVariables.html":{},"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"injectables/PlayersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/battle",{"_index":85,"title":{},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/player",{"_index":514,"title":{},"body":{"interfaces/EnvironmentVariables-3.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["async",{"_index":68,"title":{},"body":{"modules/ApiGatewayModule.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/PlayerController.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["attack",{"_index":224,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"classes/CreatePlayerDto.html":{},"classes/Player.html":{},"entities/PlayerDao.html":{}}}],["attacker",{"_index":219,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["attacker.currenthealth",{"_index":238,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["attacker.id",{"_index":230,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["attackerhealth",{"_index":234,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["author",{"_index":886,"title":{},"body":{"index.html":{},"properties.html":{}}}],["autoloadentities",{"_index":324,"title":{},"body":{"modules/BattleServiceModule.html":{},"modules/PlayerModule.html":{}}}],["automatically",{"_index":553,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["available",{"_index":897,"title":{},"body":{"modules.html":{}}}],["await",{"_index":300,"title":{},"body":{"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/PlayerController.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["aws",{"_index":819,"title":{},"body":{"index.html":{}}}],["backers",{"_index":880,"title":{},"body":{"index.html":{}}}],["baseattack",{"_index":203,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["based",{"_index":226,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"index.html":{}}}],["battle",{"_index":83,"title":{"classes/Battle.html":{}},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleResponseDto.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["battle.dao",{"_index":361,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{}}}],["battle.dto",{"_index":287,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{}}}],["battle.dto.ts",{"_index":443,"title":{},"body":{"classes/CreateBattleDto.html":{},"coverage.html":{}}}],["battle.dto.ts:23",{"_index":445,"title":{},"body":{"classes/CreateBattleDto.html":{}}}],["battle.dto.ts:30",{"_index":446,"title":{},"body":{"classes/CreateBattleDto.html":{}}}],["battle_queue",{"_index":757,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["battle_queue_name",{"_index":756,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["battle_service_host",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["battle_service_port",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["battle_service_queue",{"_index":755,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["battle_worker_service",{"_index":761,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["battle_worker_service_host",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["battle_worker_service_port",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["battledao",{"_index":102,"title":{"entities/BattleDao.html":{}},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleTypeOrmRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["battledao.date",{"_index":121,"title":{},"body":{"classes/Battle.html":{}}}],["battledao.player1",{"_index":119,"title":{},"body":{"classes/Battle.html":{}}}],["battledao.player2",{"_index":120,"title":{},"body":{"classes/Battle.html":{}}}],["battledao.status",{"_index":122,"title":{},"body":{"classes/Battle.html":{}}}],["battleengine",{"_index":154,"title":{"classes/BattleEngine.html":{}},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleWorkerServiceController.html":{},"coverage.html":{}}}],["battlemessagepatternsname",{"_index":279,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattleWorkerServiceController.html":{},"injectables/BattlesService.html":{},"miscellaneous/enumerations.html":{}}}],["battlemessagepatternsname.create",{"_index":440,"title":{},"body":{"injectables/BattlesService.html":{}}}],["battlemessagepatternsname.hello",{"_index":438,"title":{},"body":{"injectables/BattlesService.html":{}}}],["battlerepository",{"_index":312,"title":{},"body":{"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["battleresult",{"_index":168,"title":{"interfaces/BattleResult.html":{}},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"coverage.html":{}}}],["battles",{"_index":268,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattlesController.html":{},"miscellaneous/enumerations.html":{}}}],["battles.controlles",{"_index":429,"title":{},"body":{"modules/BattlesModule.html":{}}}],["battles.service",{"_index":420,"title":{},"body":{"controllers/BattlesController.html":{},"modules/BattlesModule.html":{}}}],["battles/battles.module",{"_index":52,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["battles_service",{"_index":760,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["battlescontroller",{"_index":389,"title":{"controllers/BattlesController.html":{}},"body":{"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"coverage.html":{}}}],["battleservice",{"_index":294,"title":{},"body":{"controllers/BattleServiceController.html":{}}}],["battleservicecontroller",{"_index":265,"title":{"controllers/BattleServiceController.html":{}},"body":{"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"coverage.html":{}}}],["battleservicemodule",{"_index":306,"title":{"modules/BattleServiceModule.html":{}},"body":{"modules/BattleServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["battleserviceservice",{"_index":277,"title":{"injectables/BattleServiceService.html":{}},"body":{"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"coverage.html":{},"overview.html":{}}}],["battlesimulation",{"_index":383,"title":{},"body":{"controllers/BattleWorkerServiceController.html":{}}}],["battlesmodule",{"_index":38,"title":{"modules/BattlesModule.html":{}},"body":{"modules/ApiGatewayModule.html":{},"modules/BattlesModule.html":{},"modules.html":{},"overview.html":{}}}],["battlesservice",{"_index":419,"title":{"injectables/BattlesService.html":{}},"body":{"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"injectables/BattlesService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["battlesserviceclient",{"_index":433,"title":{},"body":{"injectables/BattlesService.html":{}}}],["battlestatus",{"_index":116,"title":{},"body":{"classes/Battle.html":{}}}],["battlestatustypes",{"_index":106,"title":{},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/CreateBattleDto.html":{},"miscellaneous/enumerations.html":{}}}],["battlestatustypes.pending",{"_index":153,"title":{},"body":{"entities/BattleDao.html":{}}}],["battletypeormrepository",{"_index":315,"title":{"injectables/BattleTypeOrmRepository.html":{}},"body":{"modules/BattleServiceModule.html":{},"injectables/BattleTypeOrmRepository.html":{},"coverage.html":{}}}],["battleworker",{"_index":512,"title":{},"body":{"interfaces/EnvironmentVariables-2.html":{},"miscellaneous/variables.html":{}}}],["battleworkerservice",{"_index":762,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["battleworkerservicecontroller",{"_index":372,"title":{"controllers/BattleWorkerServiceController.html":{}},"body":{"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"coverage.html":{}}}],["battleworkerservicemodule",{"_index":384,"title":{"modules/BattleWorkerServiceModule.html":{}},"body":{"modules/BattleWorkerServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["battleworkerserviceservice",{"_index":378,"title":{"injectables/BattleWorkerServiceService.html":{}},"body":{"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"coverage.html":{},"overview.html":{}}}],["between",{"_index":210,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattlesController.html":{}}}],["board",{"_index":872,"title":{},"body":{"index.html":{}}}],["body",{"_index":410,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["bootstrap",{"_index":32,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/BattlesModule.html":{},"modules/PlayerModule.html":{},"modules/PlayersModule.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["brave",{"_index":175,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["brokerqueues",{"_index":290,"title":{},"body":{"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"miscellaneous/enumerations.html":{}}}],["brokerqueues.battle_queue_name",{"_index":334,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["brokerqueues.battle_service_queue",{"_index":327,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["browse",{"_index":896,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":894,"title":{},"body":{"modules.html":{}}}],["bufferlogs",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":773,"title":{},"body":{"index.html":{}}}],["calculate",{"_index":223,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["calculation",{"_index":252,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["catch",{"_index":351,"title":{},"body":{"injectables/BattleServiceService.html":{},"controllers/BattlesController.html":{},"injectables/PlayerService.html":{},"controllers/PlayersController.html":{}}}],["catch(error",{"_index":192,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["chance",{"_index":251,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["channel",{"_index":845,"title":{},"body":{"index.html":{}}}],["check",{"_index":256,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"index.html":{}}}],["class",{"_index":21,"title":{"classes/Battle.html":{},"classes/BattleEngine.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"classes/Leaderboard.html":{},"classes/NestApplicationValidationPipe.html":{},"classes/Player.html":{}},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"injectables/ApiGatewayService.html":{},"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"modules/EnvModule.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/NestApplicationValidationPipe.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"injectables/PlayersService.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":84,"title":{},"body":{"classes/Battle.html":{},"classes/BattleEngine.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"classes/Leaderboard.html":{},"classes/NestApplicationValidationPipe.html":{},"classes/Player.html":{},"overview.html":{}}}],["clicks",{"_index":830,"title":{},"body":{"index.html":{}}}],["client",{"_index":297,"title":{},"body":{"controllers/BattleServiceController.html":{}}}],["clientproxy",{"_index":288,"title":{},"body":{"controllers/BattleServiceController.html":{},"injectables/BattlesService.html":{},"injectables/PlayersService.html":{}}}],["clientservices",{"_index":53,"title":{},"body":{"modules/ApiGatewayModule.html":{},"injectables/BattlesService.html":{},"injectables/PlayersService.html":{},"miscellaneous/enumerations.html":{}}}],["clientservices.battles_service",{"_index":77,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["clientservices.players_service",{"_index":65,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["clientsmodule",{"_index":47,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{}}}],["clientsmodule.register",{"_index":326,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["clientsmodule.registerasync",{"_index":63,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["cloud",{"_index":814,"title":{},"body":{"index.html":{}}}],["cluster_apigatewaymodule",{"_index":35,"title":{},"body":{"modules/ApiGatewayModule.html":{},"overview.html":{}}}],["cluster_apigatewaymodule_imports",{"_index":36,"title":{},"body":{"modules/ApiGatewayModule.html":{},"overview.html":{}}}],["cluster_apigatewaymodule_providers",{"_index":37,"title":{},"body":{"modules/ApiGatewayModule.html":{},"overview.html":{}}}],["cluster_battleservicemodule",{"_index":307,"title":{},"body":{"modules/BattleServiceModule.html":{},"overview.html":{}}}],["cluster_battleservicemodule_imports",{"_index":308,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["cluster_battleservicemodule_providers",{"_index":309,"title":{},"body":{"modules/BattleServiceModule.html":{},"overview.html":{}}}],["cluster_battlesmodule",{"_index":426,"title":{},"body":{"modules/BattlesModule.html":{},"overview.html":{}}}],["cluster_battlesmodule_providers",{"_index":427,"title":{},"body":{"modules/BattlesModule.html":{},"overview.html":{}}}],["cluster_battleworkerservicemodule",{"_index":385,"title":{},"body":{"modules/BattleWorkerServiceModule.html":{},"overview.html":{}}}],["cluster_battleworkerservicemodule_imports",{"_index":387,"title":{},"body":{"modules/BattleWorkerServiceModule.html":{}}}],["cluster_battleworkerservicemodule_providers",{"_index":386,"title":{},"body":{"modules/BattleWorkerServiceModule.html":{},"overview.html":{}}}],["cluster_playermodule",{"_index":608,"title":{},"body":{"modules/PlayerModule.html":{},"overview.html":{}}}],["cluster_playermodule_imports",{"_index":609,"title":{},"body":{"modules/PlayerModule.html":{}}}],["cluster_playermodule_providers",{"_index":610,"title":{},"body":{"modules/PlayerModule.html":{},"overview.html":{}}}],["cluster_playersmodule",{"_index":650,"title":{},"body":{"modules/PlayersModule.html":{},"overview.html":{}}}],["cluster_playersmodule_providers",{"_index":651,"title":{},"body":{"modules/PlayersModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":665,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":667,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_providers",{"_index":666,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["column",{"_index":135,"title":{},"body":{"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{}}}],["column({type",{"_index":138,"title":{},"body":{"entities/BattleDao.html":{}}}],["column({unique",{"_index":601,"title":{},"body":{"entities/PlayerDao.html":{}}}],["combatant",{"_index":257,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["combatant1",{"_index":200,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["combatant1.baseattack",{"_index":232,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["combatant1.currenthealth",{"_index":215,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["combatant1.hitpoints",{"_index":235,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["combatant1.id",{"_index":231,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["combatant1.username",{"_index":211,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["combatant2",{"_index":205,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["combatant2.baseattack",{"_index":233,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["combatant2.currenthealth",{"_index":217,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["combatant2.hitpoints",{"_index":236,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["combatant2.id",{"_index":254,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["combatant2.username",{"_index":212,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["come",{"_index":836,"title":{},"body":{"index.html":{}}}],["config/env.module",{"_index":58,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleWorkerServiceModule.html":{}}}],["config/env.variables",{"_index":60,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["configmodule",{"_index":487,"title":{},"body":{"modules/EnvModule.html":{}}}],["configmodule.forroot",{"_index":492,"title":{},"body":{"modules/EnvModule.html":{}}}],["configservice",{"_index":56,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/EnvModule.html":{}}}],["configservice.get('battle.host",{"_index":78,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["configservice.get('battle.port",{"_index":79,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["configservice.get('player.host",{"_index":72,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["configservice.get('player.port",{"_index":76,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["configuration",{"_index":488,"title":{},"body":{"modules/EnvModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["connection",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["console.error('error",{"_index":193,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["console.log('battle",{"_index":190,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["console.log('createbattledto",{"_index":304,"title":{},"body":{"controllers/BattleServiceController.html":{}}}],["console.log('received",{"_index":382,"title":{},"body":{"controllers/BattleWorkerServiceController.html":{}}}],["const",{"_index":117,"title":{},"body":{"classes/Battle.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"injectables/BattlesService.html":{},"classes/Leaderboard.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"injectables/PlayerTypeOrmRepository.html":{},"injectables/PlayersService.html":{}}}],["constructor",{"_index":91,"title":{},"body":{"classes/Battle.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerResponseDto.html":{},"classes/Leaderboard.html":{},"classes/NestApplicationValidationPipe.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"injectables/PlayersService.html":{}}}],["constructor(battlerepository",{"_index":340,"title":{},"body":{"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{}}}],["constructor(battlesserviceclient",{"_index":431,"title":{},"body":{"injectables/BattlesService.html":{}}}],["constructor(id",{"_index":455,"title":{},"body":{"classes/CreateBattleResponseDto.html":{}}}],["constructor(identifier",{"_index":484,"title":{},"body":{"classes/CreatePlayerResponseDto.html":{},"classes/Leaderboard.html":{}}}],["constructor(name",{"_index":562,"title":{},"body":{"classes/Player.html":{}}}],["constructor(player1",{"_index":92,"title":{},"body":{"classes/Battle.html":{}}}],["constructor(playerrepository",{"_index":620,"title":{},"body":{"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["constructor(playersserviceclient",{"_index":655,"title":{},"body":{"injectables/PlayersService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/ApiGatewayController.html":{},"controllers/BattleServiceController.html":{},"controllers/BattleWorkerServiceController.html":{},"controllers/BattlesController.html":{},"controllers/PlayerController.html":{},"controllers/PlayersController.html":{}}}],["controller",{"_index":0,"title":{"controllers/ApiGatewayController.html":{},"controllers/BattleServiceController.html":{},"controllers/BattleWorkerServiceController.html":{},"controllers/BattlesController.html":{},"controllers/PlayerController.html":{},"controllers/PlayersController.html":{}},"body":{"controllers/ApiGatewayController.html":{},"controllers/BattleServiceController.html":{},"controllers/BattleWorkerServiceController.html":{},"controllers/BattlesController.html":{},"controllers/PlayerController.html":{},"controllers/PlayersController.html":{},"coverage.html":{}}}],["controller('battles",{"_index":293,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattlesController.html":{}}}],["controller('players",{"_index":588,"title":{},"body":{"controllers/PlayerController.html":{},"controllers/PlayersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"controllers/PlayerController.html":{},"modules/PlayerModule.html":{},"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"overview.html":{}}}],["copies",{"_index":199,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["core/constants/db",{"_index":604,"title":{},"body":{"entities/PlayerDao.html":{}}}],["core/constants/swagger/tags",{"_index":18,"title":{},"body":{"controllers/ApiGatewayController.html":{},"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["corrected",{"_index":255,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["courses",{"_index":851,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":672,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":197,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"controllers/PlayerController.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{},"miscellaneous/enumerations.html":{}}}],["create(battle",{"_index":342,"title":{},"body":{"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{}}}],["create(createbattledto",{"_index":391,"title":{},"body":{"controllers/BattlesController.html":{},"injectables/BattlesService.html":{}}}],["create(createplayerdto",{"_index":639,"title":{},"body":{"controllers/PlayersController.html":{},"injectables/PlayersService.html":{}}}],["create(payload",{"_index":270,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/PlayerController.html":{}}}],["create(player",{"_index":623,"title":{},"body":{"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["createbattle",{"_index":751,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["createbattledto",{"_index":286,"title":{"classes/CreateBattleDto.html":{}},"body":{"controllers/BattleServiceController.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleDto.html":{},"coverage.html":{}}}],["createbattleresponsedto",{"_index":283,"title":{"classes/CreateBattleResponseDto.html":{}},"body":{"controllers/BattleServiceController.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleResponseDto.html":{},"coverage.html":{}}}],["createbattleresponsedto(identifier",{"_index":305,"title":{},"body":{"controllers/BattleServiceController.html":{}}}],["createbattleresponsedto})@apiinternalservererrorresponse({description",{"_index":402,"title":{},"body":{"controllers/BattlesController.html":{}}}],["created",{"_index":401,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["createdatecolumn",{"_index":142,"title":{},"body":{"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{}}}],["createdatecolumn({type",{"_index":129,"title":{},"body":{"entities/BattleDao.html":{}}}],["createdbattledao",{"_index":364,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{}}}],["createdplayerdao",{"_index":633,"title":{},"body":{"injectables/PlayerTypeOrmRepository.html":{}}}],["createplayer",{"_index":764,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["createplayerdto",{"_index":459,"title":{"classes/CreatePlayerDto.html":{}},"body":{"classes/CreatePlayerDto.html":{},"controllers/PlayerController.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{},"coverage.html":{}}}],["createplayerresponsedto",{"_index":483,"title":{"classes/CreatePlayerResponseDto.html":{}},"body":{"classes/CreatePlayerResponseDto.html":{},"controllers/PlayerController.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{},"coverage.html":{}}}],["createplayerresponsedto(identifier",{"_index":592,"title":{},"body":{"controllers/PlayerController.html":{}}}],["createplayerresponsedto})@apiinternalservererrorresponse({description",{"_index":641,"title":{},"body":{"controllers/PlayersController.html":{}}}],["createquerybuilder",{"_index":366,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["creates",{"_index":395,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["cunning",{"_index":182,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["current",{"_index":221,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["currentattack",{"_index":239,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["currenthealth",{"_index":201,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["data",{"_index":376,"title":{},"body":{"controllers/BattleWorkerServiceController.html":{}}}],["database",{"_index":113,"title":{},"body":{"classes/Battle.html":{},"classes/CreateBattleDto.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-3.html":{},"miscellaneous/variables.html":{}}}],["database_db",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_host",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_password",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_port",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_user",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":108,"title":{},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{}}}],["db",{"_index":509,"title":{},"body":{"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-3.html":{},"miscellaneous/variables.html":{}}}],["dbtablesnames",{"_index":146,"title":{},"body":{"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{},"miscellaneous/enumerations.html":{}}}],["declarations",{"_index":31,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/BattlesModule.html":{},"modules/PlayerModule.html":{},"modules/PlayersModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["declare",{"_index":152,"title":{},"body":{"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{}}}],["decorator",{"_index":552,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["decorators",{"_index":128,"title":{},"body":{"entities/BattleDao.html":{},"controllers/BattleServiceController.html":{},"controllers/BattleWorkerServiceController.html":{},"controllers/BattlesController.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"entities/LeaderboardDao.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"controllers/PlayersController.html":{}}}],["deeper",{"_index":847,"title":{},"body":{"index.html":{}}}],["default",{"_index":139,"title":{},"body":{"entities/BattleDao.html":{},"classes/CreateBattleDto.html":{},"miscellaneous/variables.html":{}}}],["defender",{"_index":220,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["defender's",{"_index":244,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["defender.defense",{"_index":248,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["defense",{"_index":245,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"classes/CreatePlayerDto.html":{},"classes/Player.html":{},"entities/PlayerDao.html":{}}}],["defined",{"_index":95,"title":{},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/NestApplicationValidationPipe.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{}}}],["dependencies",{"_index":29,"title":{"dependencies.html":{}},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/BattlesModule.html":{},"modules/PlayerModule.html":{},"modules/PlayersModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":801,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":818,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":810,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":829,"title":{},"body":{"index.html":{}}}],["description",{"_index":393,"title":{},"body":{"controllers/BattlesController.html":{},"classes/CreatePlayerDto.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/Player.html":{},"entities/PlayerDao.html":{},"controllers/PlayersController.html":{},"index.html":{},"properties.html":{}}}],["description_length",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":242,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["development",{"_index":786,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["devtools",{"_index":859,"title":{},"body":{"index.html":{}}}],["discord",{"_index":844,"title":{},"body":{"index.html":{}}}],["dive",{"_index":846,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":673,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["don't",{"_index":550,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["dto",{"_index":560,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["durable",{"_index":336,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["during",{"_index":194,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["e2e",{"_index":796,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":774,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":808,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":394,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["engine",{"_index":379,"title":{},"body":{"controllers/BattleWorkerServiceController.html":{}}}],["engine.ts",{"_index":158,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"coverage.html":{}}}],["engine.ts:23",{"_index":164,"title":{},"body":{"classes/BattleEngine.html":{}}}],["engine.ts:9",{"_index":161,"title":{},"body":{"classes/BattleEngine.html":{}}}],["engine/battle",{"_index":157,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleWorkerServiceController.html":{},"coverage.html":{}}}],["ensure",{"_index":806,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":862,"title":{},"body":{"index.html":{}}}],["entities",{"_index":124,"title":{},"body":{"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/battle.entity",{"_index":145,"title":{},"body":{"entities/BattleDao.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{}}}],["entities/leaderboard.entity",{"_index":541,"title":{},"body":{"entities/LeaderboardDao.html":{}}}],["entities/player.entity",{"_index":166,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"entities/PlayerDao.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["entity",{"_index":111,"title":{"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{}},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{},"coverage.html":{}}}],["entity(dbtablesnames.battle",{"_index":150,"title":{},"body":{"entities/BattleDao.html":{}}}],["entity(dbtablesnames.leaderboard",{"_index":542,"title":{},"body":{"entities/LeaderboardDao.html":{}}}],["entity(dbtablesnames.player",{"_index":605,"title":{},"body":{"entities/PlayerDao.html":{}}}],["enum",{"_index":115,"title":{},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{}}}],["enumerations",{"_index":738,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env.schema",{"_index":490,"title":{},"body":{"modules/EnvModule.html":{}}}],["env.variables",{"_index":491,"title":{},"body":{"modules/EnvModule.html":{}}}],["envfilepath",{"_index":496,"title":{},"body":{"modules/EnvModule.html":{}}}],["environment",{"_index":505,"title":{},"body":{"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"miscellaneous/variables.html":{}}}],["environmentvariables",{"_index":59,"title":{"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{}},"body":{"modules/ApiGatewayModule.html":{},"modules/EnvModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["envmodule",{"_index":39,"title":{"modules/EnvModule.html":{}},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/EnvModule.html":{},"modules/PlayerModule.html":{},"modules.html":{},"overview.html":{}}}],["envschema",{"_index":489,"title":{},"body":{"modules/EnvModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":196,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"injectables/BattleServiceService.html":{},"controllers/BattlesController.html":{},"injectables/PlayerService.html":{},"controllers/PlayersController.html":{}}}],["error'})@post",{"_index":405,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["error(error",{"_index":353,"title":{},"body":{"injectables/BattleServiceService.html":{},"controllers/BattlesController.html":{},"injectables/PlayerService.html":{},"controllers/PlayersController.html":{}}}],["escape",{"_index":447,"title":{},"body":{"classes/CreateBattleDto.html":{},"classes/CreatePlayerDto.html":{}}}],["example",{"_index":249,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"index.html":{}}}],["exception",{"_index":555,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["execute",{"_index":370,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["experience",{"_index":849,"title":{},"body":{"index.html":{}}}],["explicitly",{"_index":329,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"injectables/ApiGatewayService.html":{},"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"modules/EnvModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/NestApplicationValidationPipe.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"injectables/PlayersService.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{}}}],["exports",{"_index":34,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/BattlesModule.html":{},"modules/PlayerModule.html":{},"modules/PlayersModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["express",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":151,"title":{},"body":{"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"classes/NestApplicationValidationPipe.html":{},"entities/PlayerDao.html":{}}}],["false",{"_index":502,"title":{},"body":{"modules/EnvModule.html":{}}}],["fast",{"_index":822,"title":{},"body":{"index.html":{}}}],["features",{"_index":833,"title":{},"body":{"index.html":{}}}],["few",{"_index":824,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"injectables/ApiGatewayService.html":{},"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"modules/EnvModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/NestApplicationValidationPipe.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"injectables/PlayersService.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"coverage.html":{}}}],["finished",{"_index":753,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["focus",{"_index":832,"title":{},"body":{"index.html":{}}}],["follow",{"_index":866,"title":{},"body":{"index.html":{}}}],["forbidnonwhitelisted",{"_index":557,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["framework",{"_index":772,"title":{},"body":{"index.html":{}}}],["fromdao",{"_index":90,"title":{},"body":{"classes/Battle.html":{},"classes/Leaderboard.html":{},"classes/Player.html":{}}}],["fromdao(battledao",{"_index":101,"title":{},"body":{"classes/Battle.html":{}}}],["fromdao(leaderboarddao",{"_index":520,"title":{},"body":{"classes/Leaderboard.html":{}}}],["fromdao(playerdao",{"_index":564,"title":{},"body":{"classes/Player.html":{}}}],["full",{"_index":861,"title":{},"body":{"index.html":{}}}],["function",{"_index":683,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":767,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":827,"title":{},"body":{"index.html":{}}}],["games",{"_index":517,"title":{},"body":{"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{}}}],["gateway",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gateway.controller",{"_index":51,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["gateway.controller.ts",{"_index":8,"title":{},"body":{"controllers/ApiGatewayController.html":{},"coverage.html":{}}}],["gateway.module.ts",{"_index":45,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["gateway.service",{"_index":16,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{}}}],["gateway.service.ts",{"_index":82,"title":{},"body":{"injectables/ApiGatewayService.html":{},"coverage.html":{}}}],["gateway/src/api",{"_index":7,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"injectables/ApiGatewayService.html":{},"coverage.html":{}}}],["gateway/src/battles/battles.controlles.ts",{"_index":390,"title":{},"body":{"controllers/BattlesController.html":{},"coverage.html":{}}}],["gateway/src/battles/battles.controlles.ts:29",{"_index":409,"title":{},"body":{"controllers/BattlesController.html":{}}}],["gateway/src/battles/battles.controlles.ts:49",{"_index":406,"title":{},"body":{"controllers/BattlesController.html":{}}}],["gateway/src/battles/battles.module.ts",{"_index":428,"title":{},"body":{"modules/BattlesModule.html":{}}}],["gateway/src/battles/battles.service.ts",{"_index":430,"title":{},"body":{"injectables/BattlesService.html":{},"coverage.html":{}}}],["gateway/src/battles/battles.service.ts:10",{"_index":432,"title":{},"body":{"injectables/BattlesService.html":{}}}],["gateway/src/battles/battles.service.ts:16",{"_index":435,"title":{},"body":{"injectables/BattlesService.html":{}}}],["gateway/src/battles/battles.service.ts:22",{"_index":434,"title":{},"body":{"injectables/BattlesService.html":{}}}],["gateway/src/config/configuration.ts",{"_index":678,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gateway/src/config/env.module.ts",{"_index":486,"title":{},"body":{"modules/EnvModule.html":{}}}],["gateway/src/config/env.schema.ts",{"_index":680,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gateway/src/config/env.variables.ts",{"_index":504,"title":{},"body":{"interfaces/EnvironmentVariables.html":{},"coverage.html":{}}}],["gateway/src/core/constants/swagger/tags.ts",{"_index":765,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gateway/src/environments/.env.${process.env.node_env",{"_index":497,"title":{},"body":{"modules/EnvModule.html":{}}}],["gateway/src/main.ts",{"_index":682,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["gateway/src/nest",{"_index":684,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gateway/src/players/players.controller.ts",{"_index":638,"title":{},"body":{"controllers/PlayersController.html":{},"coverage.html":{}}}],["gateway/src/players/players.controller.ts:28",{"_index":643,"title":{},"body":{"controllers/PlayersController.html":{}}}],["gateway/src/players/players.controller.ts:48",{"_index":642,"title":{},"body":{"controllers/PlayersController.html":{}}}],["gateway/src/players/players.module.ts",{"_index":652,"title":{},"body":{"modules/PlayersModule.html":{}}}],["gateway/src/players/players.service.ts",{"_index":654,"title":{},"body":{"injectables/PlayersService.html":{},"coverage.html":{}}}],["gateway/src/players/players.service.ts:10",{"_index":656,"title":{},"body":{"injectables/PlayersService.html":{}}}],["gateway/src/players/players.service.ts:16",{"_index":659,"title":{},"body":{"injectables/PlayersService.html":{}}}],["gateway/src/players/players.service.ts:22",{"_index":658,"title":{},"body":{"injectables/PlayersService.html":{}}}],["gateway/src/security/nest",{"_index":686,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["generated",{"_index":112,"title":{},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{}}}],["gethello",{"_index":269,"title":{},"body":{"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"controllers/BattleWorkerServiceController.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"controllers/PlayerController.html":{},"injectables/PlayerService.html":{},"controllers/PlayersController.html":{},"miscellaneous/enumerations.html":{}}}],["getting",{"_index":769,"title":{"index.html":{}},"body":{}}],["global",{"_index":50,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/EnvModule.html":{}}}],["gold",{"_index":462,"title":{},"body":{"classes/CreatePlayerDto.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/Player.html":{},"entities/PlayerDao.html":{}}}],["graph",{"_index":854,"title":{},"body":{"index.html":{},"modules.html":{}}}],["grow",{"_index":876,"title":{},"body":{"index.html":{}}}],["handlecreatebattle",{"_index":373,"title":{},"body":{"controllers/BattleWorkerServiceController.html":{}}}],["handlecreatebattle(@payload",{"_index":381,"title":{},"body":{"controllers/BattleWorkerServiceController.html":{}}}],["handlecreatebattle(data",{"_index":375,"title":{},"body":{"controllers/BattleWorkerServiceController.html":{}}}],["hands",{"_index":848,"title":{},"body":{"index.html":{}}}],["handy",{"_index":837,"title":{},"body":{"index.html":{}}}],["health",{"_index":228,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["healthpercentage",{"_index":237,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["hello",{"_index":346,"title":{},"body":{"injectables/BattleServiceService.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"injectables/PlayerService.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{},"miscellaneous/enumerations.html":{}}}],["helmet",{"_index":722,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":852,"title":{},"body":{"index.html":{}}}],["here",{"_index":884,"title":{},"body":{"index.html":{}}}],["hit",{"_index":250,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"classes/CreatePlayerDto.html":{},"classes/Player.html":{},"entities/PlayerDao.html":{}}}],["hitchance",{"_index":246,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["hits",{"_index":243,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["host",{"_index":71,"title":{},"body":{"modules/ApiGatewayModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":890,"title":{},"body":{"index.html":{}}}],["id",{"_index":127,"title":{},"body":{"entities/BattleDao.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{}}}],["identifier",{"_index":299,"title":{},"body":{"controllers/BattleServiceController.html":{},"classes/CreatePlayerResponseDto.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"controllers/PlayerController.html":{},"coverage.html":{}}}],["ignoreenvfile",{"_index":495,"title":{},"body":{"modules/EnvModule.html":{}}}],["implements",{"_index":362,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["import",{"_index":9,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"injectables/ApiGatewayService.html":{},"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"modules/EnvModule.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/NestApplicationValidationPipe.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"injectables/PlayersService.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{}}}],["imports",{"_index":46,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/EnvModule.html":{},"modules/PlayerModule.html":{}}}],["index",{"_index":87,"title":{"index.html":{}},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["infer",{"_index":73,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"injectables/ApiGatewayService.html":{},"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"modules/EnvModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/NestApplicationValidationPipe.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"injectables/PlayersService.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{}}}],["information",{"_index":812,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":835,"title":{},"body":{"index.html":{}}}],["infrastructure/type",{"_index":567,"title":{},"body":{"classes/Player.html":{},"modules/PlayerModule.html":{}}}],["infrastructure/typeorm/battle",{"_index":316,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["infrastructure/typeorm/battle.dao",{"_index":105,"title":{},"body":{"classes/Battle.html":{},"modules/BattleServiceModule.html":{}}}],["infrastructure/typeorm/leaderboard.dao",{"_index":523,"title":{},"body":{"classes/Leaderboard.html":{}}}],["initialattack",{"_index":229,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["inject",{"_index":66,"title":{},"body":{"modules/ApiGatewayModule.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattlesService.html":{},"injectables/PlayerService.html":{},"injectables/PlayersService.html":{}}}],["inject(battlerepository",{"_index":345,"title":{},"body":{"injectables/BattleServiceService.html":{}}}],["inject(brokerqueues.battle_service_queue",{"_index":295,"title":{},"body":{"controllers/BattleServiceController.html":{}}}],["inject(clientservices.battles_service",{"_index":436,"title":{},"body":{"injectables/BattlesService.html":{}}}],["inject(clientservices.players_service",{"_index":660,"title":{},"body":{"injectables/PlayersService.html":{}}}],["inject(playersrepository",{"_index":626,"title":{},"body":{"injectables/PlayerService.html":{}}}],["injectable",{"_index":80,"title":{"injectables/ApiGatewayService.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"injectables/BattleWorkerServiceService.html":{},"injectables/BattlesService.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"injectables/PlayersService.html":{},"injectables/SharedService.html":{}},"body":{"injectables/ApiGatewayService.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"injectables/BattleWorkerServiceService.html":{},"injectables/BattlesService.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"injectables/PlayersService.html":{},"injectables/SharedService.html":{},"coverage.html":{}}}],["injectables",{"_index":81,"title":{},"body":{"injectables/ApiGatewayService.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"injectables/BattleWorkerServiceService.html":{},"injectables/BattlesService.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"injectables/PlayersService.html":{},"injectables/SharedService.html":{},"overview.html":{}}}],["injectrepository",{"_index":359,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["injectrepository(battledao",{"_index":363,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{}}}],["injectrepository(playerdao",{"_index":632,"title":{},"body":{"injectables/PlayerTypeOrmRepository.html":{}}}],["insert",{"_index":367,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["insertresult",{"_index":360,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["insertresult.identifiers[0].id",{"_index":371,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["install",{"_index":826,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":784,"title":{},"body":{"index.html":{}}}],["interact",{"_index":855,"title":{},"body":{"index.html":{}}}],["interface",{"_index":167,"title":{"interfaces/BattleResult.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{}},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"coverage.html":{}}}],["interfaces",{"_index":264,"title":{},"body":{"interfaces/BattleResult.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"overview.html":{}}}],["internal",{"_index":403,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["into(battledao",{"_index":368,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{}}}],["into(playerdao",{"_index":635,"title":{},"body":{"injectables/PlayerTypeOrmRepository.html":{}}}],["isglobal",{"_index":494,"title":{},"body":{"modules/EnvModule.html":{}}}],["isnotempty",{"_index":449,"title":{},"body":{"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{}}}],["isnumber",{"_index":476,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["isstring",{"_index":450,"title":{},"body":{"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{}}}],["job",{"_index":869,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":871,"title":{},"body":{"index.html":{}}}],["joi",{"_index":724,"title":{},"body":{"dependencies.html":{}}}],["joi.number().required",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().valid('development').required",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":882,"title":{},"body":{"index.html":{}}}],["js",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["kamil",{"_index":887,"title":{},"body":{"index.html":{}}}],["key",{"_index":803,"title":{},"body":{"index.html":{}}}],["leaderboard",{"_index":515,"title":{"classes/Leaderboard.html":{}},"body":{"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["leaderboarddao",{"_index":521,"title":{"entities/LeaderboardDao.html":{}},"body":{"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["leaderboarddao.description",{"_index":527,"title":{},"body":{"classes/Leaderboard.html":{}}}],["leaderboarddao.games",{"_index":530,"title":{},"body":{"classes/Leaderboard.html":{}}}],["leaderboarddao.gold",{"_index":528,"title":{},"body":{"classes/Leaderboard.html":{}}}],["leaderboarddao.identifier",{"_index":525,"title":{},"body":{"classes/Leaderboard.html":{}}}],["leaderboarddao.name",{"_index":526,"title":{},"body":{"classes/Leaderboard.html":{}}}],["leaderboarddao.rank",{"_index":531,"title":{},"body":{"classes/Leaderboard.html":{}}}],["leaderboarddao.silver",{"_index":529,"title":{},"body":{"classes/Leaderboard.html":{}}}],["learn",{"_index":840,"title":{},"body":{"index.html":{}}}],["legend",{"_index":30,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/BattlesModule.html":{},"modules/PlayerModule.html":{},"modules/PlayersModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["libs/.../battle",{"_index":739,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../broker",{"_index":742,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../client",{"_index":744,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../player",{"_index":748,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../settings.ts",{"_index":741,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["libs/shared/src/battles/constants/battle",{"_index":750,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/shared/src/battles/dto/create",{"_index":442,"title":{},"body":{"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"coverage.html":{}}}],["libs/shared/src/core/constants/broker/broker",{"_index":754,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/shared/src/core/constants/client",{"_index":758,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/shared/src/core/pipes/nest",{"_index":544,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{},"coverage.html":{}}}],["libs/shared/src/core/types/settings.ts",{"_index":701,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["libs/shared/src/players/constants/player",{"_index":763,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/shared/src/players/dto/create",{"_index":460,"title":{},"body":{"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"coverage.html":{}}}],["libs/shared/src/shared.module.ts",{"_index":669,"title":{},"body":{"modules/SharedModule.html":{}}}],["libs/shared/src/shared.service.ts",{"_index":671,"title":{},"body":{"injectables/SharedService.html":{},"coverage.html":{}}}],["license",{"_index":893,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":874,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":868,"title":{},"body":{"index.html":{}}}],["literal",{"_index":271,"title":{},"body":{"controllers/BattleServiceController.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"controllers/PlayerController.html":{}}}],["load",{"_index":493,"title":{},"body":{"modules/EnvModule.html":{}}}],["localhost",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":171,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["log.push",{"_index":218,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["log.push(`${combatant1.username",{"_index":258,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["log.push(`${combatant2.username",{"_index":260,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["log.push(`battle",{"_index":208,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["logging",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["looking",{"_index":813,"title":{},"body":{"index.html":{}}}],["loop",{"_index":864,"title":{},"body":{"index.html":{}}}],["loserid",{"_index":170,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["makes",{"_index":820,"title":{},"body":{"index.html":{}}}],["manager",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["managing",{"_index":834,"title":{},"body":{"index.html":{}}}],["matching",{"_index":25,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"injectables/ApiGatewayService.html":{},"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"modules/EnvModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/NestApplicationValidationPipe.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"injectables/PlayersService.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.max(0.1",{"_index":247,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["math.max(initialattack",{"_index":240,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["math.random",{"_index":253,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["mau",{"_index":816,"title":{},"body":{"index.html":{}}}],["max",{"_index":477,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["max(1_000_000_000",{"_index":482,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["maxlength",{"_index":478,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["maxlength(playersettings.description_length",{"_index":481,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["maxlength(playersettings.name_length",{"_index":480,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["message",{"_index":281,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattleWorkerServiceController.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"controllers/PlayerController.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{},"miscellaneous/enumerations.html":{}}}],["messagepattern",{"_index":289,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattleWorkerServiceController.html":{},"controllers/PlayerController.html":{}}}],["messagepattern(battlemessagepatternsname.create",{"_index":272,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattleWorkerServiceController.html":{}}}],["messagepattern(battlemessagepatternsname.hello",{"_index":275,"title":{},"body":{"controllers/BattleServiceController.html":{}}}],["messagepattern(playermessagepatternsname.create",{"_index":578,"title":{},"body":{"controllers/PlayerController.html":{}}}],["messagepattern(playermessagepatternsname.hello",{"_index":580,"title":{},"body":{"controllers/PlayerController.html":{}}}],["metadata",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":88,"title":{},"body":{"classes/Battle.html":{},"classes/BattleEngine.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"classes/Leaderboard.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{}}}],["migrations",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrations/*{.ts,.js",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationstablename",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":737,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":873,"title":{},"body":{"index.html":{}}}],["mode",{"_index":789,"title":{},"body":{"index.html":{}}}],["module",{"_index":26,"title":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/BattlesModule.html":{},"modules/EnvModule.html":{},"modules/PlayerModule.html":{},"modules/PlayersModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/BattlesModule.html":{},"modules/EnvModule.html":{},"modules/PlayerModule.html":{},"modules/PlayersModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":28,"title":{"modules.html":{}},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/BattlesModule.html":{},"modules/EnvModule.html":{},"modules/PlayerModule.html":{},"modules/PlayersModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":811,"title":{},"body":{"index.html":{}}}],["mutable",{"_index":198,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["myśliwiec",{"_index":888,"title":{},"body":{"index.html":{}}}],["name",{"_index":64,"title":{},"body":{"modules/ApiGatewayModule.html":{},"classes/Battle.html":{},"classes/BattleEngine.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{},"miscellaneous/variables.html":{}}}],["name.ts",{"_index":740,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["name_length",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["names",{"_index":149,"title":{},"body":{"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{}}}],["names.ts",{"_index":747,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["need",{"_index":109,"title":{},"body":{"classes/Battle.html":{},"index.html":{}}}],["nest",{"_index":778,"title":{},"body":{"index.html":{}}}],["nestapplicationoptions",{"_index":685,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nestapplicationsecurity",{"_index":688,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nestapplicationvalidationpipe",{"_index":543,"title":{"classes/NestApplicationValidationPipe.html":{}},"body":{"classes/NestApplicationValidationPipe.html":{},"coverage.html":{}}}],["nestframework",{"_index":892,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":802,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":11,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"injectables/ApiGatewayService.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"injectables/BattlesService.html":{},"modules/EnvModule.html":{},"classes/NestApplicationValidationPipe.html":{},"controllers/PlayerController.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"injectables/PlayersService.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":57,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/EnvModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mau",{"_index":828,"title":{},"body":{"index.html":{}}}],["nestjs/microservices",{"_index":49,"title":{},"body":{"modules/ApiGatewayModule.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"controllers/BattleWorkerServiceController.html":{},"injectables/BattlesService.html":{},"controllers/PlayerController.html":{},"injectables/PlayersService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":13,"title":{},"body":{"controllers/ApiGatewayController.html":{},"controllers/BattlesController.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"controllers/PlayersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":319,"title":{},"body":{"modules/BattleServiceModule.html":{},"injectables/BattleTypeOrmRepository.html":{},"modules/PlayerModule.html":{},"injectables/PlayerTypeOrmRepository.html":{},"dependencies.html":{}}}],["new",{"_index":118,"title":{},"body":{"classes/Battle.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"controllers/BattleWorkerServiceController.html":{},"controllers/BattlesController.html":{},"classes/Leaderboard.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"injectables/PlayerService.html":{},"controllers/PlayersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":771,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":783,"title":{},"body":{"index.html":{}}}],["number",{"_index":464,"title":{},"body":{"classes/CreatePlayerDto.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/Player.html":{},"entities/PlayerDao.html":{}}}],["object",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objects",{"_index":559,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["observable",{"_index":407,"title":{},"body":{"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{}}}],["offer",{"_index":870,"title":{},"body":{"index.html":{}}}],["official",{"_index":817,"title":{},"body":{"index.html":{}}}],["open",{"_index":875,"title":{},"body":{"index.html":{}}}],["optional",{"_index":99,"title":{},"body":{"classes/Battle.html":{},"classes/BattleEngine.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerResponseDto.html":{},"classes/Leaderboard.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{}}}],["options",{"_index":70,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{}}}],["options.ts",{"_index":355,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["options.ts:15",{"_index":358,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{}}}],["options.ts:9",{"_index":357,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{}}}],["orm/player",{"_index":615,"title":{},"body":{"modules/PlayerModule.html":{},"injectables/PlayerTypeOrmRepository.html":{},"coverage.html":{}}}],["orm/player.dao",{"_index":568,"title":{},"body":{"classes/Player.html":{},"modules/PlayerModule.html":{}}}],["orm/player.dao.ts",{"_index":594,"title":{},"body":{"entities/PlayerDao.html":{},"coverage.html":{}}}],["orm/player.dao.ts:12",{"_index":602,"title":{},"body":{"entities/PlayerDao.html":{}}}],["orm/player.dao.ts:15",{"_index":597,"title":{},"body":{"entities/PlayerDao.html":{}}}],["orm/player.dao.ts:18",{"_index":598,"title":{},"body":{"entities/PlayerDao.html":{}}}],["orm/player.dao.ts:21",{"_index":603,"title":{},"body":{"entities/PlayerDao.html":{}}}],["orm/player.dao.ts:24",{"_index":599,"title":{},"body":{"entities/PlayerDao.html":{}}}],["orm/player.dao.ts:27",{"_index":596,"title":{},"body":{"entities/PlayerDao.html":{}}}],["orm/player.dao.ts:30",{"_index":595,"title":{},"body":{"entities/PlayerDao.html":{}}}],["orm/player.dao.ts:9",{"_index":600,"title":{},"body":{"entities/PlayerDao.html":{}}}],["ormconfig",{"_index":311,"title":{},"body":{"modules/BattleServiceModule.html":{},"modules/PlayerModule.html":{}}}],["ormconfig.default.options",{"_index":323,"title":{},"body":{"modules/BattleServiceModule.html":{},"modules/PlayerModule.html":{}}}],["out",{"_index":44,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/BattlesModule.html":{},"modules/PlayerModule.html":{},"modules/PlayersModule.html":{},"modules/SharedModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":898,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":703,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":97,"title":{},"body":{"classes/Battle.html":{},"classes/BattleEngine.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerResponseDto.html":{},"classes/Leaderboard.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{}}}],["parseint(process.env.database_port",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["part",{"_index":860,"title":{},"body":{"index.html":{}}}],["password",{"_index":511,"title":{},"body":{"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-3.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":437,"title":{},"body":{"injectables/BattlesService.html":{},"injectables/PlayersService.html":{}}}],["patterns",{"_index":282,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattleWorkerServiceController.html":{},"injectables/BattlesService.html":{},"controllers/PlayerController.html":{},"injectables/PlayersService.html":{},"miscellaneous/enumerations.html":{}}}],["payload",{"_index":274,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattleWorkerServiceController.html":{},"injectables/BattlesService.html":{},"classes/NestApplicationValidationPipe.html":{},"controllers/PlayerController.html":{},"injectables/PlayersService.html":{}}}],["payload.createbattledto",{"_index":302,"title":{},"body":{"controllers/BattleServiceController.html":{}}}],["payload.createplayerdto",{"_index":591,"title":{},"body":{"controllers/PlayerController.html":{}}}],["pending",{"_index":453,"title":{},"body":{"classes/CreateBattleDto.html":{},"miscellaneous/enumerations.html":{}}}],["pg",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["platform",{"_index":815,"title":{},"body":{"index.html":{}}}],["player",{"_index":163,"title":{"classes/Player.html":{}},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattlesController.html":{},"classes/CreatePlayerResponseDto.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-3.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["player('1",{"_index":174,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["player('2",{"_index":181,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["player.'})@apibody({type",{"_index":640,"title":{},"body":{"controllers/PlayersController.html":{}}}],["player.controller",{"_index":617,"title":{},"body":{"modules/PlayerModule.html":{}}}],["player.dao",{"_index":631,"title":{},"body":{"injectables/PlayerTypeOrmRepository.html":{}}}],["player.dto",{"_index":585,"title":{},"body":{"controllers/PlayerController.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{}}}],["player.dto.ts",{"_index":461,"title":{},"body":{"classes/CreatePlayerDto.html":{},"coverage.html":{}}}],["player.dto.ts:20",{"_index":474,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["player.dto.ts:28",{"_index":469,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["player.dto.ts:34",{"_index":471,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["player.dto.ts:40",{"_index":475,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["player.dto.ts:45",{"_index":472,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["player.dto.ts:50",{"_index":467,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["player.dto.ts:55",{"_index":466,"title":{},"body":{"classes/CreatePlayerDto.html":{}}}],["player.service",{"_index":587,"title":{},"body":{"controllers/PlayerController.html":{},"modules/PlayerModule.html":{}}}],["player1",{"_index":100,"title":{},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"classes/CreateBattleDto.html":{}}}],["player1.attack",{"_index":204,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["player1.hitpoints",{"_index":202,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["player2",{"_index":94,"title":{},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"classes/CreateBattleDto.html":{}}}],["player2).then(result",{"_index":189,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["player2.attack",{"_index":207,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["player2.hitpoints",{"_index":206,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["player_service_host",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player_service_port",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["playercontroller",{"_index":576,"title":{"controllers/PlayerController.html":{}},"body":{"controllers/PlayerController.html":{},"modules/PlayerModule.html":{},"coverage.html":{}}}],["playerdao",{"_index":565,"title":{"entities/PlayerDao.html":{}},"body":{"classes/Player.html":{},"entities/PlayerDao.html":{},"modules/PlayerModule.html":{},"injectables/PlayerTypeOrmRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playerdao.attack",{"_index":575,"title":{},"body":{"classes/Player.html":{}}}],["playerdao.defense",{"_index":574,"title":{},"body":{"classes/Player.html":{}}}],["playerdao.description",{"_index":570,"title":{},"body":{"classes/Player.html":{}}}],["playerdao.gold",{"_index":571,"title":{},"body":{"classes/Player.html":{}}}],["playerdao.hit",{"_index":573,"title":{},"body":{"classes/Player.html":{}}}],["playerdao.name",{"_index":569,"title":{},"body":{"classes/Player.html":{}}}],["playerdao.silver",{"_index":572,"title":{},"body":{"classes/Player.html":{}}}],["playermessagepatternsname",{"_index":582,"title":{},"body":{"controllers/PlayerController.html":{},"injectables/PlayersService.html":{},"miscellaneous/enumerations.html":{}}}],["playermessagepatternsname.create",{"_index":663,"title":{},"body":{"injectables/PlayersService.html":{}}}],["playermessagepatternsname.hello",{"_index":661,"title":{},"body":{"injectables/PlayersService.html":{}}}],["playermodule",{"_index":607,"title":{"modules/PlayerModule.html":{}},"body":{"modules/PlayerModule.html":{},"modules.html":{},"overview.html":{}}}],["playerrepository",{"_index":622,"title":{},"body":{"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["players",{"_index":173,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattlesController.html":{},"controllers/PlayerController.html":{},"controllers/PlayersController.html":{},"miscellaneous/enumerations.html":{}}}],["players.'})@apibody({type",{"_index":397,"title":{},"body":{"controllers/BattlesController.html":{}}}],["players.controller",{"_index":653,"title":{},"body":{"modules/PlayersModule.html":{}}}],["players.service",{"_index":645,"title":{},"body":{"controllers/PlayersController.html":{},"modules/PlayersModule.html":{}}}],["players/players.module",{"_index":61,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["players_service",{"_index":759,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["playerscontroller",{"_index":637,"title":{"controllers/PlayersController.html":{}},"body":{"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"coverage.html":{}}}],["playerservice",{"_index":586,"title":{"injectables/PlayerService.html":{}},"body":{"controllers/PlayerController.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"coverage.html":{},"overview.html":{}}}],["playersettings",{"_index":479,"title":{},"body":{"classes/CreatePlayerDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playersmodule",{"_index":40,"title":{"modules/PlayersModule.html":{}},"body":{"modules/ApiGatewayModule.html":{},"modules/PlayersModule.html":{},"modules.html":{},"overview.html":{}}}],["playersrepository",{"_index":612,"title":{},"body":{"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playersservice",{"_index":644,"title":{"injectables/PlayersService.html":{}},"body":{"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"injectables/PlayersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["playersserviceclient",{"_index":657,"title":{},"body":{"injectables/PlayersService.html":{}}}],["playerstatus",{"_index":524,"title":{},"body":{"classes/Leaderboard.html":{}}}],["playertypeormrepository",{"_index":614,"title":{"injectables/PlayerTypeOrmRepository.html":{}},"body":{"modules/PlayerModule.html":{},"injectables/PlayerTypeOrmRepository.html":{},"coverage.html":{}}}],["please",{"_index":843,"title":{},"body":{"index.html":{}}}],["port",{"_index":75,"title":{},"body":{"modules/ApiGatewayModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"miscellaneous/variables.html":{}}}],["possible",{"_index":809,"title":{},"body":{"index.html":{}}}],["post",{"_index":411,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["postgres",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":267,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattlesController.html":{},"controllers/PlayerController.html":{},"controllers/PlayersController.html":{}}}],["primarycolumn",{"_index":143,"title":{},"body":{"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{}}}],["primarycolumn({type",{"_index":132,"title":{},"body":{"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{}}}],["private",{"_index":296,"title":{},"body":{"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"injectables/BattlesService.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"injectables/PlayersService.html":{}}}],["process.env.api_gateway_host",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.api_gateway_port",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.api_gateway_schema",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.app_name",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.battle_service_host",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.battle_service_port",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.battle_worker_service_host",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.battle_worker_service_port",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_db",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_host",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_password",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_port",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_user",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.player_service_host",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.player_service_port",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.port",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.rabbitmq_host",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.rabbitmq_password",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.rabbitmq_port",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.rabbitmq_user",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":791,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":770,"title":{},"body":{"index.html":{}}}],["project",{"_index":781,"title":{},"body":{"index.html":{}}}],["promise",{"_index":165,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/PlayerController.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["properties",{"_index":126,"title":{"properties.html":{}},"body":{"entities/BattleDao.html":{},"interfaces/BattleResult.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"entities/LeaderboardDao.html":{},"classes/NestApplicationValidationPipe.html":{},"entities/PlayerDao.html":{},"properties.html":{}}}],["provide",{"_index":337,"title":{},"body":{"modules/BattleServiceModule.html":{},"modules/PlayerModule.html":{}}}],["providers",{"_index":33,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/BattlesModule.html":{},"modules/EnvModule.html":{},"modules/PlayerModule.html":{},"modules/PlayersModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["public",{"_index":159,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"classes/NestApplicationValidationPipe.html":{}}}],["questions",{"_index":841,"title":{},"body":{"index.html":{}}}],["queue",{"_index":333,"title":{},"body":{"modules/BattleServiceModule.html":{},"controllers/BattleWorkerServiceController.html":{}}}],["queueoptions",{"_index":335,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["queues",{"_index":292,"title":{},"body":{"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{}}}],["queues.ts",{"_index":743,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rabbitmq",{"_index":508,"title":{},"body":{"interfaces/EnvironmentVariables-1.html":{},"miscellaneous/variables.html":{}}}],["rabbitmq_host",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rabbitmq_password",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rabbitmq_port",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rabbitmq_user",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rank",{"_index":518,"title":{},"body":{"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{}}}],["read",{"_index":883,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/ApiGatewayController.html":{},"classes/Battle.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerResponseDto.html":{},"classes/Leaderboard.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{}}}],["ready",{"_index":800,"title":{},"body":{"index.html":{}}}],["real",{"_index":856,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["remaining",{"_index":227,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["removed",{"_index":554,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["repository",{"_index":356,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{},"injectables/PlayerTypeOrmRepository.html":{},"index.html":{}}}],["required",{"_index":398,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["requiring",{"_index":823,"title":{},"body":{"index.html":{}}}],["reset",{"_index":43,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/BattlesModule.html":{},"modules/PlayerModule.html":{},"modules/PlayersModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["resources",{"_index":263,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"index.html":{}}}],["responde.dto",{"_index":285,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"controllers/PlayerController.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{}}}],["responde.dto.ts",{"_index":454,"title":{},"body":{"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerResponseDto.html":{},"coverage.html":{}}}],["responde.dto.ts:9",{"_index":456,"title":{},"body":{"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerResponseDto.html":{}}}],["result",{"_index":191,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["results",{"_index":24,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"injectables/ApiGatewayService.html":{},"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"modules/EnvModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/NestApplicationValidationPipe.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"injectables/PlayersService.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":123,"title":{},"body":{"classes/Battle.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"classes/Leaderboard.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{}}}],["returns",{"_index":104,"title":{},"body":{"classes/Battle.html":{},"classes/BattleEngine.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"classes/Leaderboard.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{}}}],["rogue",{"_index":183,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["root",{"_index":766,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["run",{"_index":785,"title":{},"body":{"index.html":{}}}],["runs",{"_index":807,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":418,"title":{},"body":{"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{},"dependencies.html":{}}}],["sanitize",{"_index":416,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["sanitize(createbattledto",{"_index":424,"title":{},"body":{"controllers/BattlesController.html":{}}}],["sanitize(createplayerdto",{"_index":648,"title":{},"body":{"controllers/PlayersController.html":{}}}],["sanitizer",{"_index":417,"title":{},"body":{"controllers/BattlesController.html":{},"classes/CreateBattleDto.html":{},"classes/CreatePlayerDto.html":{},"controllers/PlayersController.html":{},"dependencies.html":{}}}],["scalable",{"_index":775,"title":{},"body":{"index.html":{}}}],["schema",{"_index":506,"title":{},"body":{"interfaces/EnvironmentVariables.html":{},"miscellaneous/variables.html":{}}}],["security.ts",{"_index":687,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":404,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{},"index.html":{}}}],["service",{"_index":348,"title":{},"body":{"injectables/BattleServiceService.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"injectables/PlayerService.html":{},"controllers/PlayersController.html":{},"miscellaneous/variables.html":{}}}],["service.'})@get",{"_index":408,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["service.controller",{"_index":314,"title":{},"body":{"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{}}}],["service.controller.ts",{"_index":266,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattleWorkerServiceController.html":{},"coverage.html":{}}}],["service.controller.ts:12",{"_index":374,"title":{},"body":{"controllers/BattleWorkerServiceController.html":{}}}],["service.controller.ts:17",{"_index":276,"title":{},"body":{"controllers/BattleServiceController.html":{},"controllers/BattleWorkerServiceController.html":{}}}],["service.controller.ts:22",{"_index":273,"title":{},"body":{"controllers/BattleServiceController.html":{}}}],["service.module.ts",{"_index":310,"title":{},"body":{"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{}}}],["service.service",{"_index":278,"title":{},"body":{"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{}}}],["service.service.ts",{"_index":339,"title":{},"body":{"injectables/BattleServiceService.html":{},"injectables/BattleWorkerServiceService.html":{},"coverage.html":{}}}],["service.service.ts:12",{"_index":344,"title":{},"body":{"injectables/BattleServiceService.html":{}}}],["service.service.ts:15",{"_index":343,"title":{},"body":{"injectables/BattleServiceService.html":{}}}],["service.service.ts:5",{"_index":388,"title":{},"body":{"injectables/BattleWorkerServiceService.html":{}}}],["service.service.ts:6",{"_index":341,"title":{},"body":{"injectables/BattleServiceService.html":{}}}],["service/src/application/battles.repository.ts",{"_index":689,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service/src/application/players.repository.ts",{"_index":699,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service/src/battle",{"_index":156,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"coverage.html":{}}}],["service/src/config/configuration.ts",{"_index":690,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service/src/config/env.module",{"_index":317,"title":{},"body":{"modules/BattleServiceModule.html":{},"modules/PlayerModule.html":{}}}],["service/src/config/env.schema.ts",{"_index":691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service/src/config/env.variables.ts",{"_index":507,"title":{},"body":{"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"coverage.html":{}}}],["service/src/core/constants/db",{"_index":147,"title":{},"body":{"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"miscellaneous/enumerations.html":{}}}],["service/src/entities/battle.entity.ts",{"_index":86,"title":{},"body":{"classes/Battle.html":{},"coverage.html":{}}}],["service/src/entities/battle.entity.ts:13",{"_index":103,"title":{},"body":{"classes/Battle.html":{}}}],["service/src/entities/battle.entity.ts:4",{"_index":96,"title":{},"body":{"classes/Battle.html":{}}}],["service/src/entities/leaderboard.entity.ts",{"_index":516,"title":{},"body":{"classes/Leaderboard.html":{},"coverage.html":{}}}],["service/src/entities/leaderboard.entity.ts:16",{"_index":522,"title":{},"body":{"classes/Leaderboard.html":{}}}],["service/src/entities/leaderboard.entity.ts:3",{"_index":519,"title":{},"body":{"classes/Leaderboard.html":{}}}],["service/src/entities/player.entity.ts",{"_index":561,"title":{},"body":{"classes/Player.html":{},"coverage.html":{}}}],["service/src/entities/player.entity.ts:14",{"_index":566,"title":{},"body":{"classes/Player.html":{}}}],["service/src/entities/player.entity.ts:3",{"_index":563,"title":{},"body":{"classes/Player.html":{}}}],["service/src/infrastructure/type",{"_index":593,"title":{},"body":{"entities/PlayerDao.html":{},"injectables/PlayerTypeOrmRepository.html":{},"coverage.html":{}}}],["service/src/infrastructure/typeorm/battle",{"_index":354,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{},"coverage.html":{}}}],["service/src/infrastructure/typeorm/battle.dao.ts",{"_index":125,"title":{},"body":{"entities/BattleDao.html":{},"coverage.html":{}}}],["service/src/infrastructure/typeorm/battle.dao.ts:10",{"_index":134,"title":{},"body":{"entities/BattleDao.html":{}}}],["service/src/infrastructure/typeorm/battle.dao.ts:13",{"_index":136,"title":{},"body":{"entities/BattleDao.html":{}}}],["service/src/infrastructure/typeorm/battle.dao.ts:16",{"_index":137,"title":{},"body":{"entities/BattleDao.html":{}}}],["service/src/infrastructure/typeorm/battle.dao.ts:19",{"_index":131,"title":{},"body":{"entities/BattleDao.html":{}}}],["service/src/infrastructure/typeorm/battle.dao.ts:22",{"_index":141,"title":{},"body":{"entities/BattleDao.html":{}}}],["service/src/infrastructure/typeorm/leaderboard.dao.ts",{"_index":532,"title":{},"body":{"entities/LeaderboardDao.html":{},"coverage.html":{}}}],["service/src/infrastructure/typeorm/leaderboard.dao.ts:12",{"_index":537,"title":{},"body":{"entities/LeaderboardDao.html":{}}}],["service/src/infrastructure/typeorm/leaderboard.dao.ts:15",{"_index":538,"title":{},"body":{"entities/LeaderboardDao.html":{}}}],["service/src/infrastructure/typeorm/leaderboard.dao.ts:18",{"_index":533,"title":{},"body":{"entities/LeaderboardDao.html":{}}}],["service/src/infrastructure/typeorm/leaderboard.dao.ts:21",{"_index":535,"title":{},"body":{"entities/LeaderboardDao.html":{}}}],["service/src/infrastructure/typeorm/leaderboard.dao.ts:24",{"_index":540,"title":{},"body":{"entities/LeaderboardDao.html":{}}}],["service/src/infrastructure/typeorm/leaderboard.dao.ts:27",{"_index":534,"title":{},"body":{"entities/LeaderboardDao.html":{}}}],["service/src/infrastructure/typeorm/leaderboard.dao.ts:30",{"_index":539,"title":{},"body":{"entities/LeaderboardDao.html":{}}}],["service/src/infrastructure/typeorm/leaderboard.dao.ts:9",{"_index":536,"title":{},"body":{"entities/LeaderboardDao.html":{}}}],["service/src/main.ts",{"_index":693,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["service/src/nest",{"_index":694,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service/src/ormconfig.ts",{"_index":695,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service/src/player.controller.ts",{"_index":577,"title":{},"body":{"controllers/PlayerController.html":{},"coverage.html":{}}}],["service/src/player.controller.ts:13",{"_index":581,"title":{},"body":{"controllers/PlayerController.html":{}}}],["service/src/player.controller.ts:18",{"_index":579,"title":{},"body":{"controllers/PlayerController.html":{}}}],["service/src/player.module.ts",{"_index":611,"title":{},"body":{"modules/PlayerModule.html":{}}}],["service/src/player.service.ts",{"_index":619,"title":{},"body":{"injectables/PlayerService.html":{},"coverage.html":{}}}],["service/src/player.service.ts:12",{"_index":625,"title":{},"body":{"injectables/PlayerService.html":{}}}],["service/src/player.service.ts:16",{"_index":624,"title":{},"body":{"injectables/PlayerService.html":{}}}],["service/src/player.service.ts:6",{"_index":621,"title":{},"body":{"injectables/PlayerService.html":{}}}],["services",{"_index":55,"title":{},"body":{"modules/ApiGatewayModule.html":{},"injectables/BattlesService.html":{},"injectables/PlayersService.html":{}}}],["services.ts",{"_index":745,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["set",{"_index":330,"title":{},"body":{"modules/BattleServiceModule.html":{},"classes/CreateBattleDto.html":{}}}],["setup",{"_index":782,"title":{},"body":{"index.html":{}}}],["shared.service",{"_index":670,"title":{},"body":{"modules/SharedModule.html":{}}}],["sharedmodule",{"_index":41,"title":{"modules/SharedModule.html":{}},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/PlayerModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedservice",{"_index":668,"title":{"injectables/SharedService.html":{}},"body":{"modules/SharedModule.html":{},"injectables/SharedService.html":{},"coverage.html":{},"overview.html":{}}}],["side",{"_index":776,"title":{},"body":{"index.html":{}}}],["silver",{"_index":463,"title":{},"body":{"classes/CreatePlayerDto.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/Player.html":{},"entities/PlayerDao.html":{}}}],["simple",{"_index":825,"title":{},"body":{"index.html":{}}}],["simulate",{"_index":172,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["simulatebattle",{"_index":160,"title":{},"body":{"classes/BattleEngine.html":{}}}],["simulatebattle(player1",{"_index":162,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["simulation",{"_index":195,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/ApiGatewayController.html":{},"modules/ApiGatewayModule.html":{},"injectables/ApiGatewayService.html":{},"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"controllers/BattlesController.html":{},"modules/BattlesModule.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"modules/EnvModule.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/NestApplicationValidationPipe.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"modules/PlayerModule.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"modules/PlayersModule.html":{},"injectables/PlayersService.html":{},"modules/SharedModule.html":{},"injectables/SharedService.html":{},"index.html":{}}}],["sponsors",{"_index":878,"title":{},"body":{"index.html":{}}}],["start",{"_index":787,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":790,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":792,"title":{},"body":{"index.html":{}}}],["started",{"_index":752,"title":{"index.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["starter",{"_index":780,"title":{},"body":{"index.html":{}}}],["starts",{"_index":209,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["statements",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":89,"title":{},"body":{"classes/Battle.html":{},"classes/Leaderboard.html":{},"classes/Player.html":{}}}],["status",{"_index":114,"title":{},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/CreateBattleDto.html":{}}}],["stay",{"_index":863,"title":{},"body":{"index.html":{}}}],["steps",{"_index":804,"title":{},"body":{"index.html":{}}}],["store",{"_index":110,"title":{},"body":{"classes/Battle.html":{}}}],["straightforward",{"_index":821,"title":{},"body":{"index.html":{}}}],["string",{"_index":93,"title":{},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"controllers/BattleWorkerServiceController.html":{},"injectables/BattleWorkerServiceService.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"injectables/PlayerService.html":{}}}],["stripunknown",{"_index":503,"title":{},"body":{"modules/EnvModule.html":{}}}],["successfully",{"_index":400,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["summary",{"_index":422,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["super",{"_index":549,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["support",{"_index":842,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":895,"title":{},"body":{"modules.html":{}}}],["symbol('battlerepository",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol('playersrepository",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":148,"title":{},"body":{"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":702,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":17,"title":{},"body":{"controllers/ApiGatewayController.html":{},"controllers/BattlesController.html":{},"controllers/PlayersController.html":{},"miscellaneous/enumerations.html":{}}}],["take",{"_index":805,"title":{},"body":{"index.html":{}}}],["test",{"_index":795,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":798,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":797,"title":{},"body":{"index.html":{}}}],["tests",{"_index":793,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":877,"title":{},"body":{"index.html":{}}}],["this.battlerepository",{"_index":365,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{}}}],["this.battlerepository.create(battle",{"_index":350,"title":{},"body":{"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{}}}],["this.battleservice.create",{"_index":301,"title":{},"body":{"controllers/BattleServiceController.html":{}}}],["this.battleservice.gethello",{"_index":298,"title":{},"body":{"controllers/BattleServiceController.html":{}}}],["this.battlesservice.create(createbattledto",{"_index":425,"title":{},"body":{"controllers/BattlesController.html":{}}}],["this.battlesservice.hello",{"_index":423,"title":{},"body":{"controllers/BattlesController.html":{}}}],["this.battlesserviceclient.send",{"_index":441,"title":{},"body":{"injectables/BattlesService.html":{}}}],["this.battlesserviceclient.send(pattern",{"_index":439,"title":{},"body":{"injectables/BattlesService.html":{}}}],["this.battleworkerserviceservice.gethello",{"_index":380,"title":{},"body":{"controllers/BattleWorkerServiceController.html":{}}}],["this.client.emit(battlemessagepatternsname.create",{"_index":303,"title":{},"body":{"controllers/BattleServiceController.html":{}}}],["this.id",{"_index":458,"title":{},"body":{"classes/CreateBattleResponseDto.html":{}}}],["this.identifier",{"_index":485,"title":{},"body":{"classes/CreatePlayerResponseDto.html":{}}}],["this.playerrepository",{"_index":634,"title":{},"body":{"injectables/PlayerTypeOrmRepository.html":{}}}],["this.playerrepository.create(player",{"_index":627,"title":{},"body":{"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{}}}],["this.playerservice.create",{"_index":590,"title":{},"body":{"controllers/PlayerController.html":{}}}],["this.playerservice.gethello",{"_index":589,"title":{},"body":{"controllers/PlayerController.html":{}}}],["this.playersservice.create(createplayerdto",{"_index":649,"title":{},"body":{"controllers/PlayersController.html":{}}}],["this.playersservice.hello",{"_index":647,"title":{},"body":{"controllers/PlayersController.html":{}}}],["this.playersserviceclient.send",{"_index":664,"title":{},"body":{"injectables/PlayersService.html":{}}}],["this.playersserviceclient.send(pattern",{"_index":662,"title":{},"body":{"injectables/PlayersService.html":{}}}],["this.simulatebattle(player1",{"_index":188,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["throw",{"_index":352,"title":{},"body":{"injectables/BattleServiceService.html":{},"controllers/BattlesController.html":{},"classes/NestApplicationValidationPipe.html":{},"injectables/PlayerService.html":{},"controllers/PlayersController.html":{}}}],["time",{"_index":857,"title":{},"body":{"index.html":{}}}],["timestamptz",{"_index":130,"title":{},"body":{"entities/BattleDao.html":{}}}],["touch",{"_index":885,"title":{},"body":{"index.html":{}}}],["transform",{"_index":558,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["transformer",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":48,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{}}}],["transport.rmq",{"_index":328,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["transport.tcp",{"_index":69,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["trim",{"_index":448,"title":{},"body":{"classes/CreateBattleDto.html":{},"classes/CreatePlayerDto.html":{}}}],["true",{"_index":74,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"controllers/BattlesController.html":{},"modules/EnvModule.html":{},"classes/NestApplicationValidationPipe.html":{},"entities/PlayerDao.html":{},"modules/PlayerModule.html":{},"controllers/PlayersController.html":{},"miscellaneous/variables.html":{}}}],["true})@apicreatedresponse({description",{"_index":399,"title":{},"body":{"controllers/BattlesController.html":{},"controllers/PlayersController.html":{}}}],["try",{"_index":349,"title":{},"body":{"injectables/BattleServiceService.html":{},"controllers/BattlesController.html":{},"injectables/PlayerService.html":{},"controllers/PlayersController.html":{}}}],["turn",{"_index":213,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["twitter",{"_index":891,"title":{},"body":{"index.html":{}}}],["two",{"_index":396,"title":{},"body":{"controllers/BattlesController.html":{}}}],["type",{"_index":98,"title":{},"body":{"classes/Battle.html":{},"entities/BattleDao.html":{},"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleServiceController.html":{},"injectables/BattleServiceService.html":{},"injectables/BattleTypeOrmRepository.html":{},"controllers/BattleWorkerServiceController.html":{},"controllers/BattlesController.html":{},"injectables/BattlesService.html":{},"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"interfaces/EnvironmentVariables.html":{},"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-2.html":{},"interfaces/EnvironmentVariables-3.html":{},"classes/Leaderboard.html":{},"entities/LeaderboardDao.html":{},"classes/Player.html":{},"controllers/PlayerController.html":{},"entities/PlayerDao.html":{},"injectables/PlayerService.html":{},"injectables/PlayerTypeOrmRepository.html":{},"controllers/PlayersController.html":{},"injectables/PlayersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":144,"title":{},"body":{"entities/BattleDao.html":{},"modules/BattleServiceModule.html":{},"injectables/BattleTypeOrmRepository.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{},"injectables/PlayerTypeOrmRepository.html":{},"coverage.html":{},"dependencies.html":{}}}],["typeorm.repository",{"_index":616,"title":{},"body":{"modules/PlayerModule.html":{}}}],["typeorm.repository.ts",{"_index":628,"title":{},"body":{"injectables/PlayerTypeOrmRepository.html":{},"coverage.html":{}}}],["typeorm.repository.ts:15",{"_index":630,"title":{},"body":{"injectables/PlayerTypeOrmRepository.html":{}}}],["typeorm.repository.ts:9",{"_index":629,"title":{},"body":{"injectables/PlayerTypeOrmRepository.html":{}}}],["typeormmodule",{"_index":318,"title":{},"body":{"modules/BattleServiceModule.html":{},"modules/PlayerModule.html":{}}}],["typeormmodule.forfeature([battledao",{"_index":325,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["typeormmodule.forfeature([playerdao",{"_index":618,"title":{},"body":{"modules/PlayerModule.html":{}}}],["typeormmodule.forroot",{"_index":322,"title":{},"body":{"modules/BattleServiceModule.html":{},"modules/PlayerModule.html":{}}}],["typescript",{"_index":779,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":140,"title":{},"body":{"entities/BattleDao.html":{}}}],["unique",{"_index":606,"title":{},"body":{"entities/PlayerDao.html":{}}}],["unit",{"_index":794,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":905,"title":{},"body":{"properties.html":{}}}],["update",{"_index":261,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["updates",{"_index":865,"title":{},"body":{"index.html":{}}}],["url",{"_index":320,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["urls",{"_index":331,"title":{},"body":{"modules/BattleServiceModule.html":{}}}],["use",{"_index":551,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["useclass",{"_index":338,"title":{},"body":{"modules/BattleServiceModule.html":{},"modules/PlayerModule.html":{}}}],["usefactory",{"_index":67,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["user",{"_index":510,"title":{},"body":{"interfaces/EnvironmentVariables-1.html":{},"interfaces/EnvironmentVariables-3.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":262,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["username",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":858,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":133,"title":{},"body":{"entities/BattleDao.html":{},"entities/LeaderboardDao.html":{},"entities/PlayerDao.html":{}}}],["validation.pipe.ts",{"_index":546,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:3",{"_index":548,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["validationoptions",{"_index":499,"title":{},"body":{"modules/EnvModule.html":{}}}],["validationpipe",{"_index":547,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["validationschema",{"_index":498,"title":{},"body":{"modules/EnvModule.html":{}}}],["validator",{"_index":451,"title":{},"body":{"classes/CreateBattleDto.html":{},"classes/CreateBattleResponseDto.html":{},"classes/CreatePlayerDto.html":{},"classes/CreatePlayerResponseDto.html":{},"classes/NestApplicationValidationPipe.html":{},"dependencies.html":{}}}],["value",{"_index":225,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values(createdbattledao",{"_index":369,"title":{},"body":{"injectables/BattleTypeOrmRepository.html":{}}}],["values(createdplayerdao",{"_index":636,"title":{},"body":{"injectables/PlayerTypeOrmRepository.html":{}}}],["variable",{"_index":679,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":906,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":903,"title":{},"body":{"properties.html":{}}}],["video",{"_index":850,"title":{},"body":{"index.html":{}}}],["visit",{"_index":839,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":853,"title":{},"body":{"index.html":{}}}],["void",{"_index":377,"title":{},"body":{"controllers/BattleWorkerServiceController.html":{}}}],["warrior",{"_index":176,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["watch",{"_index":788,"title":{},"body":{"index.html":{}}}],["website",{"_index":889,"title":{},"body":{"index.html":{}}}],["whitelist",{"_index":556,"title":{},"body":{"classes/NestApplicationValidationPipe.html":{}}}],["winnerid",{"_index":169,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["wins",{"_index":259,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{}}}],["worker",{"_index":155,"title":{},"body":{"classes/BattleEngine.html":{},"interfaces/BattleResult.html":{},"controllers/BattleWorkerServiceController.html":{},"modules/BattleWorkerServiceModule.html":{},"injectables/BattleWorkerServiceService.html":{},"interfaces/EnvironmentVariables-2.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["working",{"_index":838,"title":{},"body":{"index.html":{}}}],["world",{"_index":347,"title":{},"body":{"injectables/BattleServiceService.html":{},"injectables/BattleWorkerServiceService.html":{},"injectables/PlayerService.html":{}}}],["x",{"_index":867,"title":{},"body":{"index.html":{}}}],["yaml",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["you'd",{"_index":881,"title":{},"body":{"index.html":{}}}],["you're",{"_index":799,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":42,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/BattleServiceModule.html":{},"modules/BattleWorkerServiceModule.html":{},"modules/BattlesModule.html":{},"modules/PlayerModule.html":{},"modules/PlayersModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/ApiGatewayController.html":{"url":"controllers/ApiGatewayController.html","title":"controller - ApiGatewayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApiGatewayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/api-gateway.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ApiGatewayService } from './api-gateway.service';\nimport { Tags } from './core/constants/swagger/tags';\n\n@ApiTags(Tags.ROOT)\n@Controller()\nexport class ApiGatewayController {\n  constructor(private readonly apiGatewayService: ApiGatewayService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiGatewayModule.html":{"url":"modules/ApiGatewayModule.html","title":"module - ApiGatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiGatewayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApiGatewayModule\n\n\n\ncluster_ApiGatewayModule_imports\n\n\n\ncluster_ApiGatewayModule_providers\n\n\n\n\nBattlesModule\n\nBattlesModule\n\n\n\nApiGatewayModule\n\nApiGatewayModule\n\nApiGatewayModule -->\n\nBattlesModule->ApiGatewayModule\n\n\n\n\n\nEnvModule\n\nEnvModule\n\nApiGatewayModule -->\n\nEnvModule->ApiGatewayModule\n\n\n\n\n\nPlayersModule\n\nPlayersModule\n\nApiGatewayModule -->\n\nPlayersModule->ApiGatewayModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nApiGatewayModule -->\n\nSharedModule->ApiGatewayModule\n\n\n\n\n\nApiGatewayService\n\nApiGatewayService\n\nApiGatewayModule -->\n\nApiGatewayService->ApiGatewayModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api-gateway/src/api-gateway.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiGatewayService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ApiGatewayController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BattlesModule\n                        \n                        \n                            EnvModule\n                        \n                        \n                            PlayersModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ClientsModule, Transport } from '@nestjs/microservices';\nimport { Global, Module } from '@nestjs/common';\n\nimport { ApiGatewayController } from './api-gateway.controller';\nimport { ApiGatewayService } from './api-gateway.service';\nimport { BattlesModule } from './battles/battles.module';\nimport { ClientServices } from '@app/shared/core/constants/client-services';\nimport { ConfigService } from '@nestjs/config';\nimport { EnvModule } from './config/env.module';\nimport { EnvironmentVariables } from './config/env.variables';\nimport { PlayersModule } from './players/players.module';\nimport { SharedModule } from '@app/shared';\n\n@Global()\n@Module({\n  imports: [\n    EnvModule,\n    ClientsModule.registerAsync([\n      {\n        name: ClientServices.PLAYERS_SERVICE,\n        inject: [ConfigService],\n        useFactory: async (\n          configService: ConfigService,\n        ) => ({\n          transport: Transport.TCP,\n          options: {\n            host: configService.get('player.host', { infer: true }),\n            port: configService.get('player.port', { infer: true }),\n          },\n        }),\n      },\n      {\n        name: ClientServices.BATTLES_SERVICE,\n        inject: [ConfigService],\n        useFactory: async (\n          configService: ConfigService,\n        ) => ({\n          transport: Transport.TCP,\n          options: {\n            host: configService.get('battle.host', { infer: true }),\n            port: configService.get('battle.port', { infer: true }),\n          },\n        }),\n      }\n    ]),\n    SharedModule,\n    PlayersModule,\n    BattlesModule\n  ],\n  controllers: [ApiGatewayController],\n  providers: [ApiGatewayService],\n  exports: [ClientsModule],\n})\nexport class ApiGatewayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiGatewayService.html":{"url":"injectables/ApiGatewayService.html","title":"injectable - ApiGatewayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiGatewayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/api-gateway.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ApiGatewayService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Battle.html":{"url":"classes/Battle.html","title":"class - Battle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Battle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/battle-service/src/entities/battle.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromDao\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(player1: string, player2: string)\n                    \n                \n                        \n                            \n                                Defined in apps/battle-service/src/entities/battle.entity.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        player1\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        player2\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromDao\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromDao(battleDao: BattleDao)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/battle-service/src/entities/battle.entity.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                battleDao\n                                            \n                                                            BattleDao\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Battle\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BattleDao } from '../infrastructure/typeorm/battle.dao';\nimport { BattleStatusTypes } from '@app/shared/core/types/settings';\n\nexport class Battle {\n  constructor(\n    readonly player1: string,\n    readonly player2: string,\n    //readonly date: Date, //No need to store the date in the entity, as it will be generated by the database\n    //readonly status: BattleStatusTypes, //ENUM BattleStatus\n  ) {}\n\n  \n  static fromDao(battleDao: BattleDao): Battle {\n    const battle = new Battle(\n        battleDao.player1,\n        battleDao.player2,\n        //battleDao.date,\n        //battleDao.status,\n    );\n\n    return battle;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/BattleDao.html":{"url":"entities/BattleDao.html","title":"entity - BattleDao","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  BattleDao\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/battle-service/src/infrastructure/typeorm/battle.dao.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                date\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                player1\n                            \n                            \n                                    \n                                    \n                                player2\n                            \n                            \n                                    \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamptz'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/battle-service/src/infrastructure/typeorm/battle.dao.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn({type: 'uuid', generated: 'uuid'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/battle-service/src/infrastructure/typeorm/battle.dao.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        player1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/battle-service/src/infrastructure/typeorm/battle.dao.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        player2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/battle-service/src/infrastructure/typeorm/battle.dao.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BattleStatusTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: BattleStatusTypes, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/battle-service/src/infrastructure/typeorm/battle.dao.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, PrimaryColumn } from 'typeorm';\n\nimport { Battle } from '../../entities/battle.entity';\nimport { BattleStatusTypes } from '@app/shared/core/types/settings';\nimport { DbTablesNames } from 'apps/battle-service/src/core/constants/db-table-names';\n\n@Entity(DbTablesNames.BATTLE)\nexport class BattleDao extends Battle {\n  @PrimaryColumn({ type: 'uuid', generated: 'uuid' })\n  id: string;\n\n  @Column()\n  declare player1: string;\n\n  @Column()\n  declare player2: string;\n\n  @CreateDateColumn({ type: 'timestamptz' })\n  declare date: Date;\n\n  @Column({type: 'enum', enum: BattleStatusTypes, default: BattleStatusTypes.PENDING})\n  declare status: BattleStatusTypes;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BattleEngine.html":{"url":"classes/BattleEngine.html","title":"class - BattleEngine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BattleEngine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/battle-worker-service/src/battle-engine/battle-engine.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                simulateBattle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/battle-worker-service/src/battle-engine/battle-engine.ts:9\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        simulateBattle\n                        \n                    \n                \n            \n            \n                \n                        \n                    simulateBattle(player1: Player, player2: Player)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/battle-worker-service/src/battle-engine/battle-engine.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                player1\n                                            \n                                                            Player\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                player2\n                                            \n                                                            Player\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Player } from \"../entities/player.entity\";\n\ninterface BattleResult {\n    winnerId: string;\n    loserId: string;\n    log: string[];\n}\n\nclass BattleEngine {\n\n    constructor() {\n        //Simulate some players\n        const player1 = new Player('1', 'Player1', 'A brave warrior', 100, 50, 20, 10, 100);\n        const player2 = new Player('2', 'Player2', 'A cunning rogue', 80, 60, 15, 12, 80);\n        // Simulate a battle\n        this.simulateBattle(player1, player2).then(result => {\n            console.log('Battle Result:', result);\n        }).catch(error => {\n            console.error('Error during battle simulation:', error);\n        });\n    }\n\n    public async simulateBattle(player1: Player, player2: Player): Promise {\n        const log: string[] = [];\n        // Create mutable copies of players for battle simulation\n        let combatant1 = { ...player1, currentHealth: player1.hitPoints, baseAttack: player1.attack };\n        let combatant2 = { ...player2, currentHealth: player2.hitPoints, baseAttack: player2.attack };\n        \n        log.push(`Battle starts between ${combatant1.username} and ${combatant2.username}!`);\n    \n        let turn = 1;\n        while (combatant1.currentHealth > 0 && combatant2.currentHealth > 0) {\n            log.push(`--- Turn ${turn} ---`);\n\n            // Attacker and Defender for the current turn\n            let attacker = turn % 2 !== 0 ? combatant1 : combatant2;\n            let defender = turn % 2 !== 0 ? combatant2 : combatant1;\n\n            // Calculate current attack value based on remaining health\n            const initialAttack = attacker.id === combatant1.id ? combatant1.baseAttack : combatant2.baseAttack;\n            const attackerHealth = attacker.id === combatant1.id ? combatant1.hitPoints : combatant2.hitPoints;\n            const healthPercentage = 1 - (attacker.currentHealth / attackerHealth);\n            const currentAttack = Math.max(initialAttack * 0.5, initialAttack * healthPercentage);\n\n            // Determine if the attack hits based on defender's defense\n            const hitChance = Math.max(0.1, 1 - (defender.defense / (currentAttack + defender.defense))); // Example hit chance calculation\n            const hit = Math.random()  0) {\n            winnerId = combatant1.id;\n            loserId = combatant2.id; // Corrected to check the other combatant\n            log.push(`${combatant1.username} wins!`);\n        } else {\n            winnerId = combatant2.id;\n            loserId = combatant1.id; // Corrected to check the other combatant\n            log.push(`${combatant2.username} wins!`);\n        }\n\n        //Update the user's resources\n        return { winnerId, loserId, log };\n    }\n}\n\nexport { BattleEngine, BattleResult };\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BattleResult.html":{"url":"interfaces/BattleResult.html","title":"interface - BattleResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BattleResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/battle-worker-service/src/battle-engine/battle-engine.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            log\n                                        \n                                \n                                \n                                        \n                                            loserId\n                                        \n                                \n                                \n                                        \n                                            winnerId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        log\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        log:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loserId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        winnerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        winnerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Player } from \"../entities/player.entity\";\n\ninterface BattleResult {\n    winnerId: string;\n    loserId: string;\n    log: string[];\n}\n\nclass BattleEngine {\n\n    constructor() {\n        //Simulate some players\n        const player1 = new Player('1', 'Player1', 'A brave warrior', 100, 50, 20, 10, 100);\n        const player2 = new Player('2', 'Player2', 'A cunning rogue', 80, 60, 15, 12, 80);\n        // Simulate a battle\n        this.simulateBattle(player1, player2).then(result => {\n            console.log('Battle Result:', result);\n        }).catch(error => {\n            console.error('Error during battle simulation:', error);\n        });\n    }\n\n    public async simulateBattle(player1: Player, player2: Player): Promise {\n        const log: string[] = [];\n        // Create mutable copies of players for battle simulation\n        let combatant1 = { ...player1, currentHealth: player1.hitPoints, baseAttack: player1.attack };\n        let combatant2 = { ...player2, currentHealth: player2.hitPoints, baseAttack: player2.attack };\n        \n        log.push(`Battle starts between ${combatant1.username} and ${combatant2.username}!`);\n    \n        let turn = 1;\n        while (combatant1.currentHealth > 0 && combatant2.currentHealth > 0) {\n            log.push(`--- Turn ${turn} ---`);\n\n            // Attacker and Defender for the current turn\n            let attacker = turn % 2 !== 0 ? combatant1 : combatant2;\n            let defender = turn % 2 !== 0 ? combatant2 : combatant1;\n\n            // Calculate current attack value based on remaining health\n            const initialAttack = attacker.id === combatant1.id ? combatant1.baseAttack : combatant2.baseAttack;\n            const attackerHealth = attacker.id === combatant1.id ? combatant1.hitPoints : combatant2.hitPoints;\n            const healthPercentage = 1 - (attacker.currentHealth / attackerHealth);\n            const currentAttack = Math.max(initialAttack * 0.5, initialAttack * healthPercentage);\n\n            // Determine if the attack hits based on defender's defense\n            const hitChance = Math.max(0.1, 1 - (defender.defense / (currentAttack + defender.defense))); // Example hit chance calculation\n            const hit = Math.random()  0) {\n            winnerId = combatant1.id;\n            loserId = combatant2.id; // Corrected to check the other combatant\n            log.push(`${combatant1.username} wins!`);\n        } else {\n            winnerId = combatant2.id;\n            loserId = combatant1.id; // Corrected to check the other combatant\n            log.push(`${combatant2.username} wins!`);\n        }\n\n        //Update the user's resources\n        return { winnerId, loserId, log };\n    }\n}\n\nexport { BattleEngine, BattleResult };\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BattleServiceController.html":{"url":"controllers/BattleServiceController.html","title":"controller - BattleServiceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BattleServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/battle-service/src/battle-service.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                battles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern(BattleMessagePatternsName.CREATE)\n                \n            \n\n                    \n                        \n                            Defined in apps/battle-service/src/battle-service.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern(BattleMessagePatternsName.HELLO)\n                \n            \n\n                    \n                        \n                            Defined in apps/battle-service/src/battle-service.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Inject } from '@nestjs/common';\nimport { BattleServiceService } from './battle-service.service';\nimport { BattleMessagePatternsName } from '@app/shared/battles/constants/battle-message-patterns-name';\nimport { CreateBattleResponseDto } from '@app/shared/battles/dto/create-battle-responde.dto';\nimport { CreateBattleDto } from '@app/shared/battles/dto/create-battle.dto';\nimport { ClientProxy, MessagePattern, Payload } from '@nestjs/microservices';\nimport { BrokerQueues } from '@app/shared/core/constants/broker/broker-queues';\n\n@Controller('battles')\nexport class BattleServiceController {\n  constructor(private readonly battleService: BattleServiceService,\n    @Inject(BrokerQueues.BATTLE_SERVICE_QUEUE) private readonly client: ClientProxy\n  ) {\n  }\n\n  @MessagePattern(BattleMessagePatternsName.HELLO)\n  getHello(): string {\n    return this.battleService.getHello();\n  }\n\n  @MessagePattern(BattleMessagePatternsName.CREATE)\n  async create(\n    @Payload() payload: { createBattleDto: CreateBattleDto },\n  ): Promise {\n    const identifier: string = await this.battleService.create(\n      payload.createBattleDto,\n    );\n    this.client.emit(BattleMessagePatternsName.CREATE, payload.createBattleDto);\n    console.log('createBattleDto', payload.createBattleDto);\n    return new CreateBattleResponseDto(identifier);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BattleServiceModule.html":{"url":"modules/BattleServiceModule.html","title":"module - BattleServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    BattleServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BattleServiceModule\n\n\n\ncluster_BattleServiceModule_imports\n\n\n\ncluster_BattleServiceModule_providers\n\n\n\n\nEnvModule\n\nEnvModule\n\n\n\nBattleServiceModule\n\nBattleServiceModule\n\nBattleServiceModule -->\n\nEnvModule->BattleServiceModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nBattleServiceModule -->\n\nSharedModule->BattleServiceModule\n\n\n\n\n\nBattleServiceService\n\nBattleServiceService\n\nBattleServiceModule -->\n\nBattleServiceService->BattleServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/battle-service/src/battle-service.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BattleServiceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BattleServiceController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EnvModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import * as ormconfig from './ormconfig';\n\nimport { ClientsModule, Transport } from '@nestjs/microservices';\n\nimport { BattleDao } from './infrastructure/typeorm/battle.dao';\nimport { BattleRepository } from './application/battles.repository';\nimport { BattleServiceController } from './battle-service.controller';\nimport { BattleServiceService } from './battle-service.service';\nimport { BattleTypeOrmRepository } from './infrastructure/typeorm/battle-typeorm-options';\nimport { BrokerQueues } from '@app/shared/core/constants/broker/broker-queues';\nimport { EnvModule } from 'apps/battle-service/src/config/env.module';\nimport { Module } from '@nestjs/common';\nimport { SharedModule } from '@app/shared';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n//URL `'amqp://${process.env.RABBITMQ_USER}:${process.env.RABBITMQ_PASSWORD}@${process.env.RABBITMQ_HOST}:${process.env.RABBITMQ_PORT}'`\n@Module({\n  imports: [\n    EnvModule,\n    TypeOrmModule.forRoot({\n      ...ormconfig.default.options,\n      autoLoadEntities: true,\n    }),\n    TypeOrmModule.forFeature([BattleDao]),\n    SharedModule,\n    ClientsModule.register([\n      {\n        name: BrokerQueues.BATTLE_SERVICE_QUEUE,\n        transport: Transport.RMQ, // Explicitly set to Transport.RMQ\n        options: {\n          urls: ['amqp://admin:admin@localhost:5672'],\n          queue: BrokerQueues.BATTLE_QUEUE_NAME,\n          queueOptions: {\n            durable: true,\n          },\n        },\n      },\n    ]), // 1 = Transport.RMQ\n  ],\n  controllers: [ BattleServiceController],\n  providers: [\n    BattleServiceService,\n    { provide: BattleRepository, useClass: BattleTypeOrmRepository },\n  ],\n})\nexport class BattleServiceModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BattleServiceService.html":{"url":"injectables/BattleServiceService.html","title":"injectable - BattleServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BattleServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/battle-service/src/battle-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(battleRepository: BattleRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/battle-service/src/battle-service.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        battleRepository\n                                                  \n                                                        \n                                                                        BattleRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(battle: Battle)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/battle-service/src/battle-service.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                battle\n                                            \n                                                            Battle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/battle-service/src/battle-service.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { Battle } from './entities/battle.entity';\nimport { BattleRepository } from './application/battles.repository';\n\n@Injectable()\nexport class BattleServiceService {\n\n  constructor(\n    @Inject(BattleRepository)\n    private readonly battleRepository: BattleRepository,\n  ) {}\n  getHello(): string {\n    return 'Hello World from Battle Service!';\n  }\n   async create(battle: Battle): Promise {\n      try {\n        return await this.battleRepository.create(battle);\n      } catch (error) {\n        throw new Error(error);\n      }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BattleTypeOrmRepository.html":{"url":"injectables/BattleTypeOrmRepository.html","title":"injectable - BattleTypeOrmRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BattleTypeOrmRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/battle-service/src/infrastructure/typeorm/battle-typeorm-options.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(battleRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/battle-service/src/infrastructure/typeorm/battle-typeorm-options.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        battleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(battle: Battle)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/battle-service/src/infrastructure/typeorm/battle-typeorm-options.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                battle\n                                            \n                                                            Battle\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { InsertResult, Repository } from 'typeorm';\nimport { BattleRepository } from '../../application/battles.repository';\nimport { BattleDao } from './battle.dao';\nimport { Battle } from '../../entities/battle.entity';\n\n@Injectable()\nexport class BattleTypeOrmRepository implements BattleRepository {\n  constructor(\n    @InjectRepository(BattleDao)\n    private readonly battleRepository: Repository,\n  ) {}\n\n  async create(battle: Battle): Promise {\n    const createdBattleDao: BattleDao =\n      await this.battleRepository.create(battle);\n\n    const insertResult: InsertResult = await this.battleRepository\n      .createQueryBuilder()\n      .insert()\n      .into(BattleDao)\n      .values(createdBattleDao)\n      .execute();\n\n    return insertResult.identifiers[0].id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BattleWorkerServiceController.html":{"url":"controllers/BattleWorkerServiceController.html","title":"controller - BattleWorkerServiceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BattleWorkerServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/battle-worker-service/src/battle-worker-service.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                            \n                                    \n                                handleCreateBattle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/battle-worker-service/src/battle-worker-service.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleCreateBattle\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleCreateBattle(data: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern(BattleMessagePatternsName.CREATE)\n                \n            \n\n                    \n                        \n                            Defined in apps/battle-worker-service/src/battle-worker-service.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { BattleWorkerServiceService } from './battle-worker-service.service';\nimport { MessagePattern, Payload } from '@nestjs/microservices';\nimport { BattleMessagePatternsName } from '@app/shared/battles/constants/battle-message-patterns-name';\nimport { BattleEngine } from './battle-engine/battle-engine';\n\n@Controller()\nexport class BattleWorkerServiceController {\n  constructor(private readonly battleWorkerServiceService: BattleWorkerServiceService) {}\n\n  @Get()\n  getHello(): string {\n    return this.battleWorkerServiceService.getHello();\n  }\n\n  @MessagePattern(BattleMessagePatternsName.CREATE)\n  handleCreateBattle(@Payload() data: any){\n    console.log('Received data from queue:', data);\n    const battleSimulation = new BattleEngine();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BattleWorkerServiceModule.html":{"url":"modules/BattleWorkerServiceModule.html","title":"module - BattleWorkerServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    BattleWorkerServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BattleWorkerServiceModule\n\n\n\ncluster_BattleWorkerServiceModule_providers\n\n\n\ncluster_BattleWorkerServiceModule_imports\n\n\n\n\nEnvModule\n\nEnvModule\n\n\n\nBattleWorkerServiceModule\n\nBattleWorkerServiceModule\n\nBattleWorkerServiceModule -->\n\nEnvModule->BattleWorkerServiceModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nBattleWorkerServiceModule -->\n\nSharedModule->BattleWorkerServiceModule\n\n\n\n\n\nBattleWorkerServiceService\n\nBattleWorkerServiceService\n\nBattleWorkerServiceModule -->\n\nBattleWorkerServiceService->BattleWorkerServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/battle-worker-service/src/battle-worker-service.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BattleWorkerServiceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BattleWorkerServiceController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EnvModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BattleWorkerServiceController } from './battle-worker-service.controller';\nimport { BattleWorkerServiceService } from './battle-worker-service.service';\nimport { EnvModule } from './config/env.module';\nimport { Module } from '@nestjs/common';\nimport { SharedModule } from '@app/shared';\n\n@Module({\n  imports: [\n     SharedModule,\n     EnvModule\n  ],\n  controllers: [BattleWorkerServiceController],\n  providers: [BattleWorkerServiceService],\n})\nexport class BattleWorkerServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BattleWorkerServiceService.html":{"url":"injectables/BattleWorkerServiceService.html","title":"injectable - BattleWorkerServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BattleWorkerServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/battle-worker-service/src/battle-worker-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/battle-worker-service/src/battle-worker-service.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class BattleWorkerServiceService {\n  getHello(): string {\n    return 'Hello World from Battle Worker Service!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BattlesController.html":{"url":"controllers/BattlesController.html","title":"controller - BattlesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BattlesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/battles/battles.controlles.ts\n        \n\n            \n                Prefix\n            \n            \n                battles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createBattleDto: CreateBattleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a new battle', description: 'This endpoint creates a new battle between two players.'})@ApiBody({type: CreateBattleDto, required: true})@ApiCreatedResponse({description: 'The player has been successfully created.', type: CreateBattleResponseDto})@ApiInternalServerErrorResponse({description: 'Internal server error'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/battles/battles.controlles.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createBattleDto\n                                            \n                                                            CreateBattleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get Hello from Player Service', description: 'This endpoint returns a hello message from the player service.'})@Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/battles/battles.controlles.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post } from '@nestjs/common';\nimport {\n  ApiBody,\n  ApiCreatedResponse,\n  ApiInternalServerErrorResponse,\n  ApiOperation,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { CreateBattleResponseDto } from '@app/shared/battles/dto/create-battle-responde.dto';\nimport { sanitize } from 'class-sanitizer';\nimport { Observable } from 'rxjs';\nimport { Tags } from '../core/constants/swagger/tags';\nimport { BattlesService } from './battles.service';\nimport { CreateBattleDto } from '@app/shared/battles/dto/create-battle.dto';\n\n\n@ApiTags(Tags.BATTLES)\n@Controller('battles')\nexport class BattlesController {\n  constructor(private readonly battlesService: BattlesService) {}\n\n  @ApiOperation({\n    summary: 'Get Hello from Player Service',\n    description:\n      'This endpoint returns a hello message from the player service.',\n  })\n  @Get()\n  getHello(): Observable {\n    return this.battlesService.hello();\n  }\n\n  @ApiOperation({\n    summary: 'Create a new battle',\n    description: 'This endpoint creates a new battle between two players.',\n  })\n  @ApiBody({\n    type: CreateBattleDto,\n    required: true,\n  })\n  @ApiCreatedResponse({\n    description: 'The player has been successfully created.',\n    type: CreateBattleResponseDto,\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'Internal server error',\n  })\n  @Post()\n  create(\n    @Body() createBattleDto: CreateBattleDto,\n  ): Observable {\n    try {\n      sanitize(createBattleDto);\n\n      return this.battlesService.create(createBattleDto);\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BattlesModule.html":{"url":"modules/BattlesModule.html","title":"module - BattlesModule","body":"\n                   \n\n\n\n\n    Modules\n    BattlesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BattlesModule\n\n\n\ncluster_BattlesModule_providers\n\n\n\n\nBattlesService\n\nBattlesService\n\n\n\nBattlesModule\n\nBattlesModule\n\nBattlesModule -->\n\nBattlesService->BattlesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api-gateway/src/battles/battles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BattlesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BattlesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BattlesController } from './battles.controlles';\nimport { BattlesService } from './battles.service';\nimport { Module } from '@nestjs/common';\n\n@Module({\n  providers: [BattlesService],\n  controllers: [BattlesController],\n})\nexport class BattlesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BattlesService.html":{"url":"injectables/BattlesService.html","title":"injectable - BattlesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BattlesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/battles/battles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                hello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(battlesServiceClient: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/api-gateway/src/battles/battles.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        battlesServiceClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createBattleDto: CreateBattleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/battles/battles.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createBattleDto\n                                            \n                                                            CreateBattleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hello\n                        \n                    \n                \n            \n            \n                \nhello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/battles/battles.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BattleMessagePatternsName } from '@app/shared/battles/constants/battle-message-patterns-name';\nimport { CreateBattleResponseDto } from '@app/shared/battles/dto/create-battle-responde.dto';\nimport { CreateBattleDto } from '@app/shared/battles/dto/create-battle.dto';\nimport { ClientServices } from '@app/shared/core/constants/client-services';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class BattlesService {\n  constructor(\n    @Inject(ClientServices.BATTLES_SERVICE)\n    private readonly battlesServiceClient: ClientProxy,\n  ) {}\n\n  hello(): Observable {\n    const pattern = BattleMessagePatternsName.HELLO;\n    const payload = '';\n    return this.battlesServiceClient.send(pattern, payload);\n  }\n\n  create(\n    createBattleDto: CreateBattleDto,\n  ): Observable {\n    const pattern = BattleMessagePatternsName.CREATE;\n    const payload = { createBattleDto };\n    return this.battlesServiceClient.send(\n      pattern,\n      payload,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBattleDto.html":{"url":"classes/CreateBattleDto.html","title":"class - CreateBattleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBattleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/battles/dto/create-battle.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                player1\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                player2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        player1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Escape()@Trim()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/battles/dto/create-battle.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        player2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Escape()@Trim()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/battles/dto/create-battle.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Escape, Trim } from 'class-sanitizer';\nimport {\n  IsNotEmpty,\n  IsString,\n} from 'class-validator';\n\nimport { ApiProperty } from '@nestjs/swagger';\nimport { BattleStatusTypes } from '@app/shared/core/types/settings';\n\nexport class CreateBattleDto {\n  // @ApiProperty()\n  // @Escape()\n  // @Trim()\n  // @IsString()\n  // @IsNotEmpty()\n  // id: string;\n\n  @ApiProperty()\n  @Escape()\n  @Trim()\n  @IsString()\n  @IsNotEmpty()\n  player1: string;\n\n  @ApiProperty()\n  @Escape()\n  @Trim()\n  @IsString()\n  @IsNotEmpty()\n  player2: string;\n\n  /*\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  status: BattleStatusTypes;*/ //Will be set as PENDING by default in the database\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBattleResponseDto.html":{"url":"classes/CreateBattleResponseDto.html","title":"class - CreateBattleResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBattleResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/battles/dto/create-battle-responde.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in libs/shared/src/battles/dto/create-battle-responde.dto.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/battles/dto/create-battle-responde.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateBattleResponseDto {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  readonly id: string;\n\n  constructor(id: string) {\n    this.id = id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePlayerDto.html":{"url":"classes/CreatePlayerDto.html","title":"class - CreatePlayerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePlayerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/players/dto/create-player.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                attack\n                            \n                            \n                                    \n                                    \n                                    \n                                defense\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                gold\n                            \n                            \n                                    \n                                    \n                                    \n                                hit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                silver\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        attack\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/players/dto/create-player.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        defense\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/players/dto/create-player.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Escape()@MaxLength(PlayerSettings.DESCRIPTION_LENGTH)@Trim()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/players/dto/create-player.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        gold\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@Max(1000000000)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/players/dto/create-player.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        hit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/players/dto/create-player.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Escape()@MaxLength(PlayerSettings.NAME_LENGTH)@Trim()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/players/dto/create-player.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        silver\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@Max(1000000000)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/players/dto/create-player.dto.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Escape, Trim } from 'class-sanitizer';\nimport {\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n  Max,\n  MaxLength,\n} from 'class-validator';\n\nimport { PlayerSettings } from '@app/shared/core/types/settings';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreatePlayerDto {\n  @ApiProperty()\n  @Escape()\n  @MaxLength(PlayerSettings.NAME_LENGTH)\n  @Trim()\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty()\n  @Escape()\n  @MaxLength(PlayerSettings.DESCRIPTION_LENGTH)\n  @Trim()\n  @IsString()\n  @IsNotEmpty()\n  description: string;\n\n  @ApiProperty()\n  @IsNumber()\n  @Max(1_000_000_000)\n  @IsNotEmpty()\n  gold: number;\n\n  @ApiProperty()\n  @IsNumber()\n  @Max(1_000_000_000)\n  @IsNotEmpty()\n  silver: number;\n\n  @ApiProperty()\n  @IsNumber()\n  @IsNotEmpty()\n  hit: number;\n\n  @ApiProperty()\n  @IsNumber()\n  @IsNotEmpty()\n  defense: number;\n\n  @ApiProperty()\n  @IsNumber()\n  @IsNotEmpty()\n  attack: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePlayerResponseDto.html":{"url":"classes/CreatePlayerResponseDto.html","title":"class - CreatePlayerResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePlayerResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/players/dto/create-player-responde.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                identifier\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(identifier: string)\n                    \n                \n                        \n                            \n                                Defined in libs/shared/src/players/dto/create-player-responde.dto.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        identifier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/players/dto/create-player-responde.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreatePlayerResponseDto {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  readonly identifier: string;\n\n  constructor(identifier: string) {\n    this.identifier = identifier;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EnvModule.html":{"url":"modules/EnvModule.html","title":"module - EnvModule","body":"\n                   \n\n\n\n\n    Modules\n    EnvModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api-gateway/src/config/env.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { configuration } from './configuration';\nimport { envSchema } from './env.schema';\nimport { EnvironmentVariables } from './env.variables';\n\n@Global()\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [configuration],\n      isGlobal: true,\n      //* ignoreEnvFile: true,\n      envFilePath: [\n        `apps/api-gateway/src/environments/.env.${process.env.NODE_ENV}`,\n      ],\n      validationSchema: envSchema,\n      validationOptions: {\n        abortEarly: true,\n        allowUnknown: false,\n        stripUnknown: true,\n      },\n    }),\n  ],\n  providers: [ConfigService],\n})\nexport class EnvModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnvironmentVariables.html":{"url":"interfaces/EnvironmentVariables.html","title":"interface - EnvironmentVariables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EnvironmentVariables\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/config/env.variables.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            battle\n                                        \n                                \n                                \n                                        \n                                            environment\n                                        \n                                \n                                \n                                        \n                                            host\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            player\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                                \n                                        \n                                            schema\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        battle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        battle:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        environment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        player\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        player:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schema\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schema:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EnvironmentVariables {\n  environment: string;\n  name: string;\n  schema: string;\n  host: string;\n  port: number;\n  player: {\n    host: string;\n    port: number;\n  };\n  battle: {\n    host: string;\n    port: number;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnvironmentVariables-1.html":{"url":"interfaces/EnvironmentVariables-1.html","title":"interface - EnvironmentVariables-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EnvironmentVariables\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/battle-service/src/config/env.variables.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            battle\n                                        \n                                \n                                \n                                        \n                                            database\n                                        \n                                \n                                \n                                        \n                                            environment\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                                \n                                        \n                                            rabbitmq\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        battle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        battle:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        database:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        environment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rabbitmq\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rabbitmq:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EnvironmentVariables {\n  environment: string;\n  name: string;\n  port: number;\n  battle: {\n    host: string;\n    port: number;\n  };\n  database: {\n    host: string;\n    port: number;\n    db: string;\n    user: string;\n    password: string;\n  };\n  rabbitmq: {\n    host: string;\n    port: number;\n    user: string;\n    password: string;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnvironmentVariables-2.html":{"url":"interfaces/EnvironmentVariables-2.html","title":"interface - EnvironmentVariables-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EnvironmentVariables\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/battle-worker-service/src/config/env.variables.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            battleworker\n                                        \n                                \n                                \n                                        \n                                            environment\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        battleworker\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        battleworker:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        environment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EnvironmentVariables {\n  environment: string;\n  name: string;\n  port: number;\n  battleworker: {\n    host: string;\n    port: number;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnvironmentVariables-3.html":{"url":"interfaces/EnvironmentVariables-3.html","title":"interface - EnvironmentVariables-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EnvironmentVariables\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/player-service/src/config/env.variables.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            database\n                                        \n                                \n                                \n                                        \n                                            environment\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            player\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        database:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        environment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        player\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        player:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EnvironmentVariables {\n  environment: string;\n  name: string;\n  port: number;\n  player: {\n    host: string;\n    port: number;\n  };\n\n  database: {\n    host: string;\n    port: number;\n    db: string;\n    user: string;\n    password: string;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Leaderboard.html":{"url":"classes/Leaderboard.html","title":"class - Leaderboard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Leaderboard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/battle-service/src/entities/leaderboard.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromDao\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(identifier: string, name: string, description: string, gold: number, silver: number, games: number, rank: number)\n                    \n                \n                        \n                            \n                                Defined in apps/battle-service/src/entities/leaderboard.entity.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gold\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        silver\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        games\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rank\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromDao\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromDao(leaderboardDao: LeaderboardDao)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/battle-service/src/entities/leaderboard.entity.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                leaderboardDao\n                                            \n                                                            LeaderboardDao\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Leaderboard\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LeaderboardDao } from '../infrastructure/typeorm/leaderboard.dao';\n\nexport class Leaderboard {\n  constructor(\n    readonly identifier: string,\n    readonly name: string,\n    readonly description: string, \n    readonly gold: number, \n    readonly silver: number,\n    readonly games: number,\n    readonly rank: number,\n    //readonly playerStatus\n  ) {}\n\n  \n  static fromDao(leaderboardDao: LeaderboardDao): Leaderboard {\n    const leaderboard = new Leaderboard(\n      leaderboardDao.identifier,\n      leaderboardDao.name,\n      leaderboardDao.description,\n      leaderboardDao.gold,\n      leaderboardDao.silver, \n      leaderboardDao.games,\n      leaderboardDao.rank,\n    );\n    return leaderboard;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/LeaderboardDao.html":{"url":"entities/LeaderboardDao.html","title":"entity - LeaderboardDao","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  LeaderboardDao\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/battle-service/src/infrastructure/typeorm/leaderboard.dao.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                games\n                            \n                            \n                                    \n                                    \n                                gold\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                identifier\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                rank\n                            \n                            \n                                    \n                                    \n                                silver\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/battle-service/src/infrastructure/typeorm/leaderboard.dao.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        games\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/battle-service/src/infrastructure/typeorm/leaderboard.dao.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        gold\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/battle-service/src/infrastructure/typeorm/leaderboard.dao.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn({type: 'uuid', generated: 'uuid'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/battle-service/src/infrastructure/typeorm/leaderboard.dao.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        identifier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/battle-service/src/infrastructure/typeorm/leaderboard.dao.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/battle-service/src/infrastructure/typeorm/leaderboard.dao.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        rank\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/battle-service/src/infrastructure/typeorm/leaderboard.dao.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        silver\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/battle-service/src/infrastructure/typeorm/leaderboard.dao.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, PrimaryColumn } from 'typeorm';\n\nimport { DbTablesNames } from 'apps/battle-service/src/core/constants/db-table-names';\nimport { Leaderboard } from '../../entities/leaderboard.entity';\n\n@Entity(DbTablesNames.LEADERBOARD)\nexport class LeaderboardDao extends Leaderboard {\n  @PrimaryColumn({ type: 'uuid', generated: 'uuid' })\n  id: string;\n\n  @Column()\n  declare identifier: string;\n\n  @Column()\n  declare name: string;\n\n  @Column()\n  declare description: string;\n\n  @Column()\n  declare gold: number;\n\n  @Column()\n  declare silver: number;\n\n  @Column()\n  declare games: number;\n\n  @Column()\n  declare rank: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NestApplicationValidationPipe.html":{"url":"classes/NestApplicationValidationPipe.html","title":"class - NestApplicationValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NestApplicationValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/core/pipes/nest-application-validation.pipe.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in libs/shared/src/core/pipes/nest-application-validation.pipe.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationPipe } from '@nestjs/common';\n\nexport class NestApplicationValidationPipe extends ValidationPipe {\n  public constructor() {\n    super({\n      //* properties that don't use any validator decorator automatically removed and throw an exception\n      whitelist: true,\n      forbidNonWhitelisted: true,\n      //* transform payload objects to dto\n      transform: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Player.html":{"url":"classes/Player.html","title":"class - Player","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Player\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/player-service/src/entities/player.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromDao\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, description: string, gold: number, silver: number, hit: number, defense: number, attack: number)\n                    \n                \n                        \n                            \n                                Defined in apps/player-service/src/entities/player.entity.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gold\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        silver\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        defense\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        attack\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromDao\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromDao(playerDao: PlayerDao)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/player-service/src/entities/player.entity.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerDao\n                                            \n                                                            PlayerDao\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Player\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PlayerDao } from '../infrastructure/type-orm/player.dao';\n\nexport class Player {\n  constructor(\n    readonly name: string,\n    readonly description: string,\n    readonly gold: number,\n    readonly silver: number,\n    readonly hit: number,\n    readonly defense: number,\n    readonly attack: number,\n  ) {}\n\n  static fromDao(playerDao: PlayerDao): Player {\n    const player = new Player(\n      playerDao.name,\n      playerDao.description,\n      playerDao.gold,\n      playerDao.silver,\n      playerDao.hit,\n      playerDao.defense,\n      playerDao.attack,\n    );\n\n    return player;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PlayerController.html":{"url":"controllers/PlayerController.html","title":"controller - PlayerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PlayerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/player-service/src/player.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                players\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern(PlayerMessagePatternsName.CREATE)\n                \n            \n\n                    \n                        \n                            Defined in apps/player-service/src/player.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern(PlayerMessagePatternsName.HELLO)\n                \n            \n\n                    \n                        \n                            Defined in apps/player-service/src/player.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { PlayerMessagePatternsName } from '@app/shared/players/constants/player-message-patterns-name';\nimport { CreatePlayerResponseDto } from '@app/shared/players/dto/create-player-responde.dto';\nimport { CreatePlayerDto } from '@app/shared/players/dto/create-player.dto';\nimport { Controller } from '@nestjs/common';\nimport { MessagePattern, Payload } from '@nestjs/microservices';\nimport { PlayerService } from './player.service';\n\n@Controller('players')\nexport class PlayerController {\n  constructor(private readonly playerService: PlayerService) {}\n\n  @MessagePattern(PlayerMessagePatternsName.HELLO)\n  getHello(): string {\n    return this.playerService.getHello();\n  }\n\n  @MessagePattern(PlayerMessagePatternsName.CREATE)\n  async create(\n    @Payload() payload: { createPlayerDto: CreatePlayerDto },\n  ): Promise {\n    const identifier: string = await this.playerService.create(\n      payload.createPlayerDto,\n    );\n\n    return new CreatePlayerResponseDto(identifier);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/PlayerDao.html":{"url":"entities/PlayerDao.html","title":"entity - PlayerDao","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  PlayerDao\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/player-service/src/infrastructure/type-orm/player.dao.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                attack\n                            \n                            \n                                    \n                                    \n                                defense\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                gold\n                            \n                            \n                                    \n                                    \n                                hit\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                silver\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attack\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/player-service/src/infrastructure/type-orm/player.dao.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        defense\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/player-service/src/infrastructure/type-orm/player.dao.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/player-service/src/infrastructure/type-orm/player.dao.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        gold\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/player-service/src/infrastructure/type-orm/player.dao.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        hit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/player-service/src/infrastructure/type-orm/player.dao.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn({type: 'uuid', generated: 'uuid'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/player-service/src/infrastructure/type-orm/player.dao.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/player-service/src/infrastructure/type-orm/player.dao.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        silver\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/player-service/src/infrastructure/type-orm/player.dao.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryColumn } from 'typeorm';\n\nimport { DbTablesNames } from '../../core/constants/db-table-names';\nimport { Player } from '../../entities/player.entity';\n\n@Entity(DbTablesNames.PLAYER)\nexport class PlayerDao extends Player {\n  @PrimaryColumn({ type: 'uuid', generated: 'uuid' })\n  id: string;\n\n  @Column({ unique: true })\n  declare name: string;\n\n  @Column()\n  declare description: string;\n\n  @Column()\n  declare gold: number;\n\n  @Column()\n  declare silver: number;\n\n  @Column()\n  declare hit: number;\n\n  @Column()\n  declare defense: number;\n\n  @Column()\n  declare attack: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlayerModule.html":{"url":"modules/PlayerModule.html","title":"module - PlayerModule","body":"\n                   \n\n\n\n\n    Modules\n    PlayerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PlayerModule\n\n\n\ncluster_PlayerModule_imports\n\n\n\ncluster_PlayerModule_providers\n\n\n\n\nEnvModule\n\nEnvModule\n\n\n\nPlayerModule\n\nPlayerModule\n\nPlayerModule -->\n\nEnvModule->PlayerModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nPlayerModule -->\n\nSharedModule->PlayerModule\n\n\n\n\n\nPlayerService\n\nPlayerService\n\nPlayerModule -->\n\nPlayerService->PlayerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/player-service/src/player.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PlayerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PlayerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EnvModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import * as ormconfig from './ormconfig';\n\nimport { SharedModule } from '@app/shared';\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { EnvModule } from 'apps/player-service/src/config/env.module';\nimport { PlayersRepository } from './application/players.repository';\nimport { PlayerTypeOrmRepository } from './infrastructure/type-orm/player-typeorm.repository';\nimport { PlayerDao } from './infrastructure/type-orm/player.dao';\nimport { PlayerController } from './player.controller';\nimport { PlayerService } from './player.service';\n\n@Module({\n  imports: [\n    EnvModule,\n    TypeOrmModule.forRoot({\n      ...ormconfig.default.options,\n      autoLoadEntities: true,\n    }),\n    TypeOrmModule.forFeature([PlayerDao]),\n    SharedModule,\n  ],\n  controllers: [PlayerController],\n  providers: [\n    PlayerService,\n    { provide: PlayersRepository, useClass: PlayerTypeOrmRepository },\n  ],\n})\nexport class PlayerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/player-service/src/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(playerRepository: PlayersRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/player-service/src/player.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        playerRepository\n                                                  \n                                                        \n                                                                        PlayersRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(player: Player)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/player-service/src/player.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                player\n                                            \n                                                            Player\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/player-service/src/player.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { PlayersRepository } from './application/players.repository';\nimport { Player } from './entities/player.entity';\n\n@Injectable()\nexport class PlayerService {\n  constructor(\n    @Inject(PlayersRepository)\n    private readonly playerRepository: PlayersRepository,\n  ) {}\n\n  getHello(): string {\n    return 'Hello World from Player Service!';\n  }\n\n  async create(player: Player): Promise {\n    try {\n      return await this.playerRepository.create(player);\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerTypeOrmRepository.html":{"url":"injectables/PlayerTypeOrmRepository.html","title":"injectable - PlayerTypeOrmRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerTypeOrmRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/player-service/src/infrastructure/type-orm/player-typeorm.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(playerRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/player-service/src/infrastructure/type-orm/player-typeorm.repository.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        playerRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(player: Player)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/player-service/src/infrastructure/type-orm/player-typeorm.repository.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                player\n                                            \n                                                            Player\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { InsertResult, Repository } from 'typeorm';\nimport { PlayersRepository } from '../../application/players.repository';\nimport { Player } from '../../entities/player.entity';\nimport { PlayerDao } from './player.dao';\n\n@Injectable()\nexport class PlayerTypeOrmRepository implements PlayersRepository {\n  constructor(\n    @InjectRepository(PlayerDao)\n    private readonly playerRepository: Repository,\n  ) {}\n\n  async create(player: Player): Promise {\n    const createdPlayerDao: PlayerDao =\n      await this.playerRepository.create(player);\n\n    const insertResult: InsertResult = await this.playerRepository\n      .createQueryBuilder()\n      .insert()\n      .into(PlayerDao)\n      .values(createdPlayerDao)\n      .execute();\n\n    return insertResult.identifiers[0].id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PlayersController.html":{"url":"controllers/PlayersController.html","title":"controller - PlayersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PlayersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/players/players.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                players\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPlayerDto: CreatePlayerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a new player', description: 'This endpoint creates a new player.'})@ApiBody({type: CreatePlayerDto, required: true})@ApiCreatedResponse({description: 'The player has been successfully created.', type: CreatePlayerResponseDto})@ApiInternalServerErrorResponse({description: 'Internal server error'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/players/players.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPlayerDto\n                                            \n                                                            CreatePlayerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get Hello from Player Service', description: 'This endpoint returns a hello message from the player service.'})@Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/players/players.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post } from '@nestjs/common';\nimport {\n  ApiBody,\n  ApiCreatedResponse,\n  ApiInternalServerErrorResponse,\n  ApiOperation,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { CreatePlayerResponseDto } from '@app/shared/players/dto/create-player-responde.dto';\nimport { CreatePlayerDto } from '@app/shared/players/dto/create-player.dto';\nimport { sanitize } from 'class-sanitizer';\nimport { Observable } from 'rxjs';\nimport { Tags } from '../core/constants/swagger/tags';\nimport { PlayersService } from './players.service';\n\n@ApiTags(Tags.PLAYERS)\n@Controller('players')\nexport class PlayersController {\n  constructor(private readonly playersService: PlayersService) {}\n\n  @ApiOperation({\n    summary: 'Get Hello from Player Service',\n    description:\n      'This endpoint returns a hello message from the player service.',\n  })\n  @Get()\n  getHello(): Observable {\n    return this.playersService.hello();\n  }\n\n  @ApiOperation({\n    summary: 'Create a new player',\n    description: 'This endpoint creates a new player.',\n  })\n  @ApiBody({\n    type: CreatePlayerDto,\n    required: true,\n  })\n  @ApiCreatedResponse({\n    description: 'The player has been successfully created.',\n    type: CreatePlayerResponseDto,\n  })\n  @ApiInternalServerErrorResponse({\n    description: 'Internal server error',\n  })\n  @Post()\n  create(\n    @Body() createPlayerDto: CreatePlayerDto,\n  ): Observable {\n    try {\n      sanitize(createPlayerDto);\n\n      return this.playersService.create(createPlayerDto);\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlayersModule.html":{"url":"modules/PlayersModule.html","title":"module - PlayersModule","body":"\n                   \n\n\n\n\n    Modules\n    PlayersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PlayersModule\n\n\n\ncluster_PlayersModule_providers\n\n\n\n\nPlayersService\n\nPlayersService\n\n\n\nPlayersModule\n\nPlayersModule\n\nPlayersModule -->\n\nPlayersService->PlayersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api-gateway/src/players/players.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PlayersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PlayersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PlayersController } from './players.controller';\nimport { PlayersService } from './players.service';\n\n@Module({\n  providers: [PlayersService],\n  controllers: [PlayersController],\n})\nexport class PlayersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayersService.html":{"url":"injectables/PlayersService.html","title":"injectable - PlayersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/players/players.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                hello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(playersServiceClient: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/api-gateway/src/players/players.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        playersServiceClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createPlayerDto: CreatePlayerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/players/players.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPlayerDto\n                                            \n                                                            CreatePlayerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hello\n                        \n                    \n                \n            \n            \n                \nhello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/players/players.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ClientServices } from '@app/shared/core/constants/client-services';\nimport { PlayerMessagePatternsName } from '@app/shared/players/constants/player-message-patterns-name';\nimport { CreatePlayerResponseDto } from '@app/shared/players/dto/create-player-responde.dto';\nimport { CreatePlayerDto } from '@app/shared/players/dto/create-player.dto';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class PlayersService {\n  constructor(\n    @Inject(ClientServices.PLAYERS_SERVICE)\n    private readonly playersServiceClient: ClientProxy,\n  ) {}\n\n  hello(): Observable {\n    const pattern = PlayerMessagePatternsName.HELLO;\n    const payload = '';\n    return this.playersServiceClient.send(pattern, payload);\n  }\n\n  create(\n    createPlayerDto: CreatePlayerDto,\n  ): Observable {\n    const pattern = PlayerMessagePatternsName.CREATE;\n    const payload = { createPlayerDto };\n    return this.playersServiceClient.send(\n      pattern,\n      payload,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nSharedService \n\nSharedService \n\n\n\nSharedModule\n\nSharedModule\n\nSharedService  -->\n\nSharedModule->SharedService \n\n\n\n\n\nSharedService\n\nSharedService\n\nSharedModule -->\n\nSharedService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/shared/src/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SharedService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SharedService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SharedService } from './shared.service';\n\n@Module({\n  providers: [SharedService],\n  exports: [SharedService],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SharedService.html":{"url":"injectables/SharedService.html","title":"injectable - SharedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SharedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/shared.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class SharedService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/api-gateway/src/api-gateway.controller.ts\n            \n            controller\n            ApiGatewayController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/api-gateway.service.ts\n            \n            injectable\n            ApiGatewayService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/battles/battles.controlles.ts\n            \n            controller\n            BattlesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/battles/battles.service.ts\n            \n            injectable\n            BattlesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        apps/api-gateway/src/config/configuration.ts\n            \n            variable\n            configuration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/api-gateway/src/config/env.schema.ts\n            \n            variable\n            envSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/config/env.variables.ts\n            \n            interface\n            EnvironmentVariables\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        apps/api-gateway/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/api-gateway/src/nest-application-options.ts\n            \n            variable\n            nestApplicationOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/players/players.controller.ts\n            \n            controller\n            PlayersController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/players/players.service.ts\n            \n            injectable\n            PlayersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        apps/api-gateway/src/security/nest-application-security.ts\n            \n            variable\n            nestApplicationSecurity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/battle-service/src/application/battles.repository.ts\n            \n            variable\n            BattleRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/battle-service/src/battle-service.controller.ts\n            \n            controller\n            BattleServiceController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/battle-service/src/battle-service.service.ts\n            \n            injectable\n            BattleServiceService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        apps/battle-service/src/config/configuration.ts\n            \n            variable\n            configuration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/battle-service/src/config/env.schema.ts\n            \n            variable\n            envSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/battle-service/src/config/env.variables.ts\n            \n            interface\n            EnvironmentVariables\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/battle-service/src/entities/battle.entity.ts\n            \n            class\n            Battle\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/battle-service/src/entities/leaderboard.entity.ts\n            \n            class\n            Leaderboard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/battle-service/src/infrastructure/typeorm/battle-typeorm-options.ts\n            \n            injectable\n            BattleTypeOrmRepository\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/battle-service/src/infrastructure/typeorm/battle.dao.ts\n            \n            entity\n            BattleDao\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/battle-service/src/infrastructure/typeorm/leaderboard.dao.ts\n            \n            entity\n            LeaderboardDao\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/battle-service/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/battle-service/src/nest-application-options.ts\n            \n            variable\n            nestApplicationOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/battle-service/src/ormconfig.ts\n            \n            variable\n            AppDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/battle-worker-service/src/battle-engine/battle-engine.ts\n            \n            class\n            BattleEngine\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/battle-worker-service/src/battle-engine/battle-engine.ts\n            \n            interface\n            BattleResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/battle-worker-service/src/battle-worker-service.controller.ts\n            \n            controller\n            BattleWorkerServiceController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/battle-worker-service/src/battle-worker-service.service.ts\n            \n            injectable\n            BattleWorkerServiceService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/battle-worker-service/src/config/configuration.ts\n            \n            variable\n            configuration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/battle-worker-service/src/config/env.schema.ts\n            \n            variable\n            envSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/battle-worker-service/src/config/env.variables.ts\n            \n            interface\n            EnvironmentVariables\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        apps/battle-worker-service/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/battle-worker-service/src/nest-application-options.ts\n            \n            variable\n            nestApplicationOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/player-service/src/application/players.repository.ts\n            \n            variable\n            PlayersRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/player-service/src/config/configuration.ts\n            \n            variable\n            configuration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/player-service/src/config/env.schema.ts\n            \n            variable\n            envSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/player-service/src/config/env.variables.ts\n            \n            interface\n            EnvironmentVariables\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/player-service/src/entities/player.entity.ts\n            \n            class\n            Player\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/player-service/src/infrastructure/type-orm/player-typeorm.repository.ts\n            \n            injectable\n            PlayerTypeOrmRepository\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/player-service/src/infrastructure/type-orm/player.dao.ts\n            \n            entity\n            PlayerDao\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/player-service/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/player-service/src/nest-application-options.ts\n            \n            variable\n            nestApplicationOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/player-service/src/ormconfig.ts\n            \n            variable\n            AppDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/player-service/src/player.controller.ts\n            \n            controller\n            PlayerController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/player-service/src/player.service.ts\n            \n            injectable\n            PlayerService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/shared/src/battles/dto/create-battle-responde.dto.ts\n            \n            class\n            CreateBattleResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/shared/src/battles/dto/create-battle.dto.ts\n            \n            class\n            CreateBattleDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/shared/src/core/pipes/nest-application-validation.pipe.ts\n            \n            class\n            NestApplicationValidationPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        libs/shared/src/core/types/settings.ts\n            \n            variable\n            PlayerSettings\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/shared/src/players/dto/create-player-responde.dto.ts\n            \n            class\n            CreatePlayerResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/shared/src/players/dto/create-player.dto.ts\n            \n            class\n            CreatePlayerDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/shared/src/shared.service.ts\n            \n            injectable\n            SharedService\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/microservices : ^11.1.0\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : ^11.2.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            amqp-connection-manager : ^4.1.14\n        \n            amqplib : ^0.10.8\n        \n            class-sanitizer : ^1.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.2\n        \n            helmet : ^8.1.0\n        \n            joi : ^17.13.3\n        \n            js-yaml : ^4.1.0\n        \n            pg : ^8.16.0\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.23\n        \n            yaml : ^2.7.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BattleMessagePatternsName   (libs/.../battle-message-patterns-name.ts)\n                        \n                        \n                            BattleStatusTypes   (libs/.../settings.ts)\n                        \n                        \n                            BrokerQueues   (libs/.../broker-queues.ts)\n                        \n                        \n                            ClientServices   (libs/.../client-services.ts)\n                        \n                        \n                            DbTablesNames   (apps/.../db-table-names.ts)\n                        \n                        \n                            DbTablesNames   (apps/.../db-table-names.ts)\n                        \n                        \n                            PlayerMessagePatternsName   (libs/.../player-message-patterns-name.ts)\n                        \n                        \n                            Tags   (apps/.../tags.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/shared/src/battles/constants/battle-message-patterns-name.ts\n    \n        \n            \n                \n                    \n                        \n                        BattleMessagePatternsName\n                    \n                \n                        \n                            \n                                 HELLO\n                            \n                        \n                        \n                            \n                                Value : getHello\n                            \n                        \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                Value : createBattle\n                            \n                        \n            \n        \n\n    libs/shared/src/core/types/settings.ts\n    \n        \n            \n                \n                    \n                        \n                        BattleStatusTypes\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 STARTED\n                            \n                        \n                        \n                            \n                                Value : STARTED\n                            \n                        \n                        \n                            \n                                 FINISHED\n                            \n                        \n                        \n                            \n                                Value : FINISHED\n                            \n                        \n            \n        \n\n    libs/shared/src/core/constants/broker/broker-queues.ts\n    \n        \n            \n                \n                    \n                        \n                        BrokerQueues\n                    \n                \n                        \n                            \n                                 BATTLE_SERVICE_QUEUE\n                            \n                        \n                        \n                            \n                                Value : battle_service_queue\n                            \n                        \n                        \n                            \n                                 BATTLE_QUEUE_NAME\n                            \n                        \n                        \n                            \n                                Value : battle_queue\n                            \n                        \n            \n        \n\n    libs/shared/src/core/constants/client-services.ts\n    \n        \n            \n                \n                    \n                        \n                        ClientServices\n                    \n                \n                        \n                            \n                                 PLAYERS_SERVICE\n                            \n                        \n                        \n                            \n                                Value : PlayersService\n                            \n                        \n                        \n                            \n                                 BATTLES_SERVICE\n                            \n                        \n                        \n                            \n                                Value : BattlesService\n                            \n                        \n                        \n                            \n                                 BATTLE_WORKER_SERVICE\n                            \n                        \n                        \n                            \n                                Value : BattleWorkerService\n                            \n                        \n            \n        \n\n    apps/battle-service/src/core/constants/db-table-names.ts\n    \n        \n            \n                \n                    \n                        \n                        DbTablesNames\n                    \n                \n                        \n                            \n                                 BATTLE\n                            \n                        \n                        \n                            \n                                Value : battle\n                            \n                        \n                        \n                            \n                                 LEADERBOARD\n                            \n                        \n                        \n                            \n                                Value : leaderboard\n                            \n                        \n            \n        \n\n    apps/player-service/src/core/constants/db-table-names.ts\n    \n        \n            \n                \n                    \n                        \n                        DbTablesNames\n                    \n                \n                        \n                            \n                                 PLAYER\n                            \n                        \n                        \n                            \n                                Value : player\n                            \n                        \n            \n        \n\n    libs/shared/src/players/constants/player-message-patterns-name.ts\n    \n        \n            \n                \n                    \n                        \n                        PlayerMessagePatternsName\n                    \n                \n                        \n                            \n                                 HELLO\n                            \n                        \n                        \n                            \n                                Value : getHello\n                            \n                        \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                Value : createPlayer\n                            \n                        \n            \n        \n\n    apps/api-gateway/src/core/constants/swagger/tags.ts\n    \n        \n            \n                \n                    \n                        \n                        Tags\n                    \n                \n                        \n                            \n                                 ROOT\n                            \n                        \n                        \n                            \n                                Value : Root\n                            \n                        \n                        \n                            \n                                 PLAYERS\n                            \n                        \n                        \n                            \n                                Value : Players\n                            \n                        \n                        \n                            \n                                 BATTLES\n                            \n                        \n                        \n                            \n                                Value : Battles\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api-gateway/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/battle-service/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/battle-worker-service/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/player-service/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g @nestjs/mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiGatewayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BattleServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BattlesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BattleWorkerServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EnvModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EnvModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EnvModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EnvModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlayerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlayersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApiGatewayModule\n\n\n\ncluster_ApiGatewayModule_imports\n\n\n\ncluster_ApiGatewayModule_providers\n\n\n\ncluster_BattleServiceModule\n\n\n\ncluster_BattleServiceModule_providers\n\n\n\ncluster_BattlesModule\n\n\n\ncluster_BattlesModule_providers\n\n\n\ncluster_BattleWorkerServiceModule\n\n\n\ncluster_BattleWorkerServiceModule_providers\n\n\n\ncluster_PlayerModule\n\n\n\ncluster_PlayerModule_providers\n\n\n\ncluster_PlayersModule\n\n\n\ncluster_PlayersModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nBattlesModule\n\nBattlesModule\n\n\n\nApiGatewayModule\n\nApiGatewayModule\n\nApiGatewayModule -->\n\nBattlesModule->ApiGatewayModule\n\n\n\n\n\nEnvModule\n\nEnvModule\n\nApiGatewayModule -->\n\nEnvModule->ApiGatewayModule\n\n\n\n\n\nBattleServiceModule\n\nBattleServiceModule\n\nBattleServiceModule -->\n\nEnvModule->BattleServiceModule\n\n\n\n\n\nBattleWorkerServiceModule\n\nBattleWorkerServiceModule\n\nBattleWorkerServiceModule -->\n\nEnvModule->BattleWorkerServiceModule\n\n\n\n\n\nPlayerModule\n\nPlayerModule\n\nPlayerModule -->\n\nEnvModule->PlayerModule\n\n\n\n\n\nPlayersModule\n\nPlayersModule\n\nApiGatewayModule -->\n\nPlayersModule->ApiGatewayModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nApiGatewayModule -->\n\nSharedModule->ApiGatewayModule\n\n\n\nBattleServiceModule -->\n\nSharedModule->BattleServiceModule\n\n\n\nBattleWorkerServiceModule -->\n\nSharedModule->BattleWorkerServiceModule\n\n\n\nPlayerModule -->\n\nSharedModule->PlayerModule\n\n\n\n\n\nSharedService \n\nSharedService \n\nSharedService  -->\n\nSharedModule->SharedService \n\n\n\n\n\nApiGatewayService\n\nApiGatewayService\n\nApiGatewayModule -->\n\nApiGatewayService->ApiGatewayModule\n\n\n\n\n\nBattleServiceService\n\nBattleServiceService\n\nBattleServiceModule -->\n\nBattleServiceService->BattleServiceModule\n\n\n\n\n\nBattlesService\n\nBattlesService\n\nBattlesModule -->\n\nBattlesService->BattlesModule\n\n\n\n\n\nBattleWorkerServiceService\n\nBattleWorkerServiceService\n\nBattleWorkerServiceModule -->\n\nBattleWorkerServiceService->BattleWorkerServiceModule\n\n\n\n\n\nPlayerService\n\nPlayerService\n\nPlayerModule -->\n\nPlayerService->PlayerModule\n\n\n\n\n\nPlayersService\n\nPlayersService\n\nPlayersModule -->\n\nPlayersService->PlayersModule\n\n\n\n\n\nSharedService\n\nSharedService\n\nSharedModule -->\n\nSharedService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppDataSource   (apps/.../ormconfig.ts)\n                        \n                        \n                            AppDataSource   (apps/.../ormconfig.ts)\n                        \n                        \n                            BattleRepository   (apps/.../battles.repository.ts)\n                        \n                        \n                            configuration   (apps/.../configuration.ts)\n                        \n                        \n                            configuration   (apps/.../configuration.ts)\n                        \n                        \n                            configuration   (apps/.../configuration.ts)\n                        \n                        \n                            configuration   (apps/.../configuration.ts)\n                        \n                        \n                            envSchema   (apps/.../env.schema.ts)\n                        \n                        \n                            envSchema   (apps/.../env.schema.ts)\n                        \n                        \n                            envSchema   (apps/.../env.schema.ts)\n                        \n                        \n                            envSchema   (apps/.../env.schema.ts)\n                        \n                        \n                            nestApplicationOptions   (apps/.../nest-application-options.ts)\n                        \n                        \n                            nestApplicationOptions   (apps/.../nest-application-options.ts)\n                        \n                        \n                            nestApplicationOptions   (apps/.../nest-application-options.ts)\n                        \n                        \n                            nestApplicationOptions   (apps/.../nest-application-options.ts)\n                        \n                        \n                            nestApplicationSecurity   (apps/.../nest-application-security.ts)\n                        \n                        \n                            PlayerSettings   (libs/.../settings.ts)\n                        \n                        \n                            PlayersRepository   (apps/.../players.repository.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/battle-service/src/ormconfig.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AppDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DataSource({\n  type: 'postgres',\n  host: process.env.DATABASE_HOST,\n  port: parseInt(process.env.DATABASE_PORT!),\n  database: process.env.DATABASE_DB,\n  username: process.env.DATABASE_USER,\n  password: process.env.DATABASE_PASSWORD,\n  entities: [BattleDao, LeaderboardDao],\n  migrations: ['./migrations/*{.ts,.js}'],\n  migrationsTableName: 'migrations',\n  logging: true,\n  synchronize: true,\n})\n                    \n                \n\n\n        \n    \n\n    apps/player-service/src/ormconfig.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AppDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DataSource({\n  type: 'postgres',\n  host: process.env.DATABASE_HOST,\n  port: parseInt(process.env.DATABASE_PORT!),\n  database: process.env.DATABASE_DB,\n  username: process.env.DATABASE_USER,\n  password: process.env.DATABASE_PASSWORD,\n  entities: [PlayerDao],\n  migrations: ['./migrations/*{.ts,.js}'],\n  migrationsTableName: 'migrations',\n  logging: true,\n  synchronize: true,\n})\n                    \n                \n\n\n        \n    \n\n    apps/battle-service/src/application/battles.repository.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BattleRepository\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol('BattleRepository')\n                    \n                \n\n\n        \n    \n\n    apps/api-gateway/src/config/configuration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): EnvironmentVariables => ({\n  environment: process.env.NODE_ENV || 'development',\n  name: process.env.APP_NAME || 'api-gateway',\n  schema: process.env.API_GATEWAY_SCHEMA || 'http',\n  host: process.env.API_GATEWAY_HOST || 'localhost',\n  port: +process.env.API_GATEWAY_PORT!,\n  player: {\n    host: process.env.PLAYER_SERVICE_HOST || 'localhost',\n    port: +process.env.PLAYER_SERVICE_PORT!,\n  },\n  battle: {\n    host: process.env.BATTLE_SERVICE_HOST || 'localhost',\n    port: +process.env.BATTLE_SERVICE_PORT!,\n  }\n})\n                    \n                \n\n\n        \n    \n\n    apps/battle-service/src/config/configuration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): EnvironmentVariables => ({\n  environment: process.env.NODE_ENV || 'development',\n  name: process.env.APP_NAME || 'battle-service',\n  port: +process.env.PORT!,\n  battle: {\n    host: process.env.BATTLE_SERVICE_HOST || 'localhost',\n    port: +process.env.BATTLE_SERVICE_PORT!,\n  },\n  database: {\n    host: process.env.DATABASE_HOST || 'localhost',\n    port: +process.env.DATABASE_PORT!,\n    db: process.env.DATABASE_DB || 'battle-database',\n    user: process.env.DATABASE_USER || 'admin',\n    password: process.env.DATABASE_PASSWORD || 'admin',\n  },\n  rabbitmq: {\n    host: process.env.RABBITMQ_HOST || 'localhost',\n    port: +process.env.RABBITMQ_PORT!,\n    user: process.env.RABBITMQ_USER || 'admin',\n    password: process.env.RABBITMQ_PASSWORD || 'admin',\n  }\n})\n                    \n                \n\n\n        \n    \n\n    apps/battle-worker-service/src/config/configuration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): EnvironmentVariables => ({\n  environment: process.env.NODE_ENV || 'development',\n  name: process.env.APP_NAME || 'battle-worker-service',\n  port: +process.env.PORT!,\n  battleworker: {\n    host: process.env.BATTLE_WORKER_SERVICE_HOST || 'localhost',\n    port: +process.env.BATTLE_WORKER_SERVICE_PORT!,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    apps/player-service/src/config/configuration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): EnvironmentVariables => ({\n  environment: process.env.NODE_ENV || 'development',\n  name: process.env.APP_NAME || 'player-service',\n  port: +process.env.PORT!,\n  player: {\n    host: process.env.PLAYER_SERVICE_HOST || 'localhost',\n    port: +process.env.PLAYER_SERVICE_PORT!,\n  },\n  database: {\n    host: process.env.DATABASE_HOST || 'localhost',\n    port: +process.env.DATABASE_PORT!,\n    db: process.env.DATABASE_DB || 'player-database',\n    user: process.env.DATABASE_USER || 'admin',\n    password: process.env.DATABASE_PASSWORD || 'admin',\n  },\n})\n                    \n                \n\n\n        \n    \n\n    apps/api-gateway/src/config/env.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        envSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  NODE_ENV: Joi.string().valid('development').required(),\n  APP_NAME: Joi.string().required(),\n  API_GATEWAY_SCHEMA: Joi.string().required(),\n  API_GATEWAY_HOST: Joi.string().required(),\n  API_GATEWAY_PORT: Joi.number().required(),\n  PLAYER_SERVICE_HOST: Joi.string().required(),\n  PLAYER_SERVICE_PORT: Joi.number().required(),\n  BATTLE_SERVICE_HOST: Joi.string().required(),\n  BATTLE_SERVICE_PORT: Joi.number().required(),\n})\n                    \n                \n\n\n        \n    \n\n    apps/battle-service/src/config/env.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        envSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  NODE_ENV: Joi.string().valid('development').required(),\n  APP_NAME: Joi.string().required(),\n  PORT: Joi.number().required(),\n  BATTLE_SERVICE_HOST: Joi.string().required(),\n  BATTLE_SERVICE_PORT: Joi.number().required(),\n  DATABASE_HOST: Joi.string().required(),\n  DATABASE_PORT: Joi.number().required(),\n  DATABASE_DB: Joi.string().required(),\n  DATABASE_USER: Joi.string().required(),\n  DATABASE_PASSWORD: Joi.string().required(),\n  RABBITMQ_HOST: Joi.string().required(),\n  RABBITMQ_PORT: Joi.number().required(),\n  RABBITMQ_USER: Joi.string().required(),\n  RABBITMQ_PASSWORD: Joi.string().required(),\n})\n                    \n                \n\n\n        \n    \n\n    apps/battle-worker-service/src/config/env.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        envSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  NODE_ENV: Joi.string().valid('development').required(),\n  APP_NAME: Joi.string().required(),\n  PORT: Joi.number().required(),\n  BATTLE_WORKER_SERVICE_HOST: Joi.string().required(),\n  BATTLE_WORKER_SERVICE_PORT: Joi.number().required(),\n})\n                    \n                \n\n\n        \n    \n\n    apps/player-service/src/config/env.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        envSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  NODE_ENV: Joi.string().valid('development').required(),\n  APP_NAME: Joi.string().required(),\n  PORT: Joi.number().required(),\n  PLAYER_SERVICE_HOST: Joi.string().required(),\n  PLAYER_SERVICE_PORT: Joi.number().required(),\n  DATABASE_HOST: Joi.string().required(),\n  DATABASE_PORT: Joi.number().required(),\n  DATABASE_DB: Joi.string().required(),\n  DATABASE_USER: Joi.string().required(),\n  DATABASE_PASSWORD: Joi.string().required(),\n})\n                    \n                \n\n\n        \n    \n\n    apps/api-gateway/src/nest-application-options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nestApplicationOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NestApplicationOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  bufferLogs: true,\n}\n                    \n                \n\n\n        \n    \n\n    apps/battle-service/src/nest-application-options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nestApplicationOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NestApplicationOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  bufferLogs: true,\n}\n                    \n                \n\n\n        \n    \n\n    apps/battle-worker-service/src/nest-application-options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nestApplicationOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NestApplicationOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  bufferLogs: true,\n}\n                    \n                \n\n\n        \n    \n\n    apps/player-service/src/nest-application-options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nestApplicationOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NestApplicationOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  bufferLogs: true,\n}\n                    \n                \n\n\n        \n    \n\n    apps/api-gateway/src/security/nest-application-security.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nestApplicationSecurity\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication) => {\n  app.use(helmet());\n  app.enableCors();\n}\n                    \n                \n\n\n        \n    \n\n    libs/shared/src/core/types/settings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PlayerSettings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  NAME_LENGTH: 20,\n  DESCRIPTION_LENGTH: 1000,\n}\n                    \n                \n\n\n        \n    \n\n    apps/player-service/src/application/players.repository.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PlayersRepository\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol('PlayersRepository')\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
